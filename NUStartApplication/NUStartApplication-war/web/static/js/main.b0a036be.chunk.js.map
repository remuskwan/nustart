{"version":3,"sources":["app/util/Common.js","app/util/routes/PublicRoute.js","app/util/routes/PrivateRoute.js","app/components/navBar/profileDropDown.js","app/components/searchSelectMenu/index.js","app/components/navBar/index.js","app/components/sideBar/index.js","app/components/inputText/index.js","app/components/textArea/index.js","app/util/api.js","app/containers/AddForumPage/index.js","app/containers/AddThreadPage/index.js","app/containers/AddPostPage/index.js","app/containers/ProfilePage/guideItem.js","app/containers/ProfilePage/guidesTab.js","app/components/contacts/ContactForm.js","app/components/contacts/ContactItem.js","app/components/contacts/ContactList.js","app/containers/ProfilePage/contactsTab.js","app/components/uploadImage/index.js","app/components/uploadProfileImage/index.js","app/containers/ProfilePage/accountTab.js","app/containers/ProfilePage/threadItem.js","app/containers/ProfilePage/threadsTab.js","app/containers/ProfilePage/postItem.js","app/containers/ProfilePage/postsTab.js","app/containers/ProfilePage/passwordTab.js","app/containers/ProfilePage/index.js","app/components/newButton/index.js","app/components/confirmDialog/index.js","app/containers/ForumsPage/editForum.js","app/containers/ForumsPage/forumOptions.js","app/containers/ForumsPage/forumList.js","app/components/SelectMenus/sortSelectMenu/index.js","app/containers/ForumsPage/index.js","app/components/thread/index.js","app/containers/ForumDetailsPage/threadList.js","app/components/breadcrumb/index.js","app/components/Paginator/threadPaginator/index.js","app/containers/ForumDetailsPage/index.js","app/containers/LoginPage/index.js","app/containers/RegisterPage/index.js","app/containers/ThreadDetailsPage/editPost.js","app/containers/ThreadDetailsPage/postOptions.js","app/components/post/index.js","app/containers/ThreadDetailsPage/postList.js","app/components/sectionHeadDrop/index.js","app/containers/ThreadDetailsPage/editThread.js","app/containers/ThreadDetailsPage/threadOptions.js","app/components/Paginator/postPaginator/index.js","app/containers/ThreadDetailsPage/index.js","app/containers/UsersPage/userList.js","app/containers/UsersPage/allUsersTab.js","app/containers/UsersPage/blockUserList.js","app/containers/UsersPage/BlockTab.js","app/containers/UsersPage/approveUserList.js","app/containers/UsersPage/ApproveTab.js","app/containers/UsersPage/index.js","app/components/guideCategories/index.js","app/containers/GuidesPage/index.js","app/components/notification/index.js","app/components/Guides/editGuideModal/index.js","app/components/Guides/guideOptions/index.js","app/components/commentOptions/index.js","app/components/comment/index.js","app/components/commentsSection/index.js","app/containers/GuideDetailsPage/index.js","app/components/catSelectMenu/index.js","app/containers/AddGuidePage/index.js","app/containers/CategoriesPage/editCategory.js","app/components/deleteConfirm/index.js","app/components/categoriesTable/index.js","app/containers/CategoriesPage/index.js","app/containers/AddCategoryPage/index.js","app/components/Guides/guide/index.js","app/components/Guides/guideList/index.js","app/containers/GuidesListPage/index.js","app/components/inputTextError/index.js","app/containers/AddAdminPage/index.js","app/containers/PendingApprovalPage/pendingApproval.js","app/components/SelectMenus/mapsSelectMenu/index.js","app/containers/MapsPage/index.js","app/containers/AddMapPage/index.js","app/containers/MapDetailsPage/index.js","app/components/mapsTable/index.js","app/containers/ManageMapsPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["getUser","userId","sessionStorage","getItem","console","log","JSON","parse","setUserSession","setItem","stringify","removeUserSession","removeItem","PublicRoute","Component","component","rest","render","props","to","pathname","PrivateRoute","state","from","location","classNames","classes","filter","Boolean","join","ProfileDropDown","user","history","useHistory","as","className","Button","profilePicture","style","fontSize","username","substring","src","alt","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Items","Item","active","onClick","push","id","window","reload","SearchSelectMenu","options","searchType","setSearchType","value","onChange","open","name","show","Options","map","person","Option","selected","NavBar","disableButton","disableSearch","editProfile","searchString","setSearchString","searchTypes","url","useRouteMatch","navigation","path","icon","UserCircleIcon","KeyIcon","ChatAlt2Icon","HomeIcon","accountType","UserGroupIcon","htmlFor","placeholder","type","e","target","Panel","item","undefined","email","SideBar","BookOpenIcon","LocationMarkerIcon","nav","InputText","required","autoFocus","maxLength","autoCapitalize","label","autoComplete","TextArea","rows","helpText","api","login","axios","post","register","getUsers","get","getContactSize","getCategories","getCategory","categoryId","getGuides","getGuide","guideId","getGuideCategory","getMap","mapId","getMaps","getUserGuide","createGuide","guide","getComments","gid","getCommentReplies","cid","getForums","getForum","getThread","getThreadForum","threadId","getUserThread","getPostThread","postId","getUserPost","editComment","comment","put","editMap","editUser","editGuide","editThread","forumId","thread","editPost","editCategory","category","createComment","createForum","forum","createPost","createThread","createCategory","createMap","createContact","contact","deletePost","delete","deleteGuide","deleteThread","deleteCategory","deleteComment","commentId","deleteContact","contactId","deleteMap","AddForumPage","useState","setUser","title","setTitle","description","setDescription","setError","useEffect","then","response","data","catch","error","onSubmit","evt","preventDefault","creator","goBack","alert","AddThreadPage","useParams","EditorState","createEmpty","editorState","setEditorState","posts","content","draftToHtml","convertToRaw","getCurrentContent","padding","minHeight","onEditorStateChange","AddPostPage","GuideItem","setCategory","a","href","comments","length","moment","dateCreated","slice","format","GuidesTab","guides","role","ContactForm","editMode","onDone","textboxRef","useRef","text","setText","resetState","ref","ContactItem","onDelete","ContactList","list","contacts","c","onEdit","scope","ContactsTab","currentId","contactStore","setContactStore","newContact","handleAddEdit","note","trim","addContact","updatedNotes","n","oldContactsStore","size","getSize","oldNotesStore","UploadImage","accept","handleFileInput","stroke","fill","viewBox","d","strokeWidth","strokeLinecap","strokeLinejoin","uploadProfileImage","handleProfileInput","years","faculties","AccountTab","uid","setName","setEmail","course","setCourse","year","setYear","faculty","setFaculty","message","profilePic","setProfilePic","coverImage","setCoverImage","selectedFile","setSelectedFile","selectedCover","setSelectedCover","config","bucketName","region","accessKeyId","secretAccessKey","u","yr","y","toString","f","getLogged","handleUpload","file","uploadFile","updateProfile","handleMultipleUploads","locations","ViewMode","created","xmlns","files","ThreadItem","setForum","ThreadsTab","threads","PostItem","p","setThread","tid","dangerouslySetInnerHTML","__html","postMessage","PostsTab","PasswordTab","password","setPassword","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmPassword","setConfirmPassword","setMessage","getLoggedInUser","match","changePassword","tabs","current","ProfilePage","viewUser","setViewUser","setTab","setGuides","setThreads","setPosts","setEditMode","resetTabState","tabName","t","currentTab","CurrentTab","activeTab","RenderPosition","RenderTabs","newTabs","tab","finalTabs","EditMode","class","accountStatus","getThreads","getPosts","NewButton","charAt","toUpperCase","ConfirmDialog","action","params","Root","onClose","setOpen","Child","Overlay","Title","onConfirm","EditForumModal","setForums","ForumOptions","openEdit","setOpenEdit","ForumList","items","contentType","vectorEffect","SortSelectMenu","sortType","setSortType","Label","sortTypes","reverse","ForumsPage","forums","sortProperty","searchProperty","filtered","toLowerCase","includes","sorted","sort","x","localeCompare","sortItems","buttonContent","Thread","pinned","closed","subtract","diff","calendar","ThreadList","Breadcrumb","pages","page","preserveAspectRatio","ThreadsPaginator","dataLimit","Math","ceil","setPages","currentPage","setCurrentPage","startIndex","endIndex","getPaginatedData","ForumDetailsPage","searchSortItems","LoginPage","status","Error","RegisterPage","position","setPosition","contactList","setContactsList","firstName","setFirstName","lastName","setLastName","submitError","setSubmitError","updatedContacts","oldContactList","handleEdit","defaultValue","EditPostModal","html","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","htmlToDraftBlocks","hasText","border","PostOptions","Post","createdAt","PostList","SectionHeadDrop","date","menu","disableMenu","EditThreadModal","ThreadOptions","setAction","updateThread","togglePinned","PostsPaginator","ThreadDetailsPage","replace","UserList","AllUsersTab","allUsers","setAllUsers","isMounted","BlockUserList","toggleBlock","BlockTab","ApproveUserList","approve","reject","ApproveTab","UsersPage","find","tabIdx","GuideCategories","categories","setSelected","GuidesPage","setCategories","Notification","setShow","EditGuideModal","setGuide","setNotifTitle","triggerNotification","GuideOptions","notifTitle","setTimeout","CommentOptions","setComments","setEdit","edit","Comment","setEditComment","CommentsSection","setComment","GuideDetailsPage","setContent","pictureUrl","CatSelectMenu","AddGuidePage","picLocation","EditCategoryModal","DeleteConfirm","cat","CategoriesTable","deleteCat","setDeleteCat","editCat","setEditCat","itemIdx","colSpan","CategoriesPage","AddCategoryPage","Guide","GuideList","GuidesListPage","InputTextError","AddAdminPage","setUsername","PendingApprovalPage","MapSelectMenu","setMap","CampusPage","maps","setMaps","AddMapPage","MapDetailsPage","MapsTable","deleteM","setDeleteM","ManageMapsPage","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0a036be.chunk.js","sourcesContent":["export const getUser = () => {\n  const userId = sessionStorage.getItem('userId');\n  console.log(userId);\n  if (userId) return JSON.parse(userId).userId;\n  else return null;\n}\n\nexport const setUserSession = (userId) => {\n  sessionStorage.setItem('userId', JSON.stringify(userId));\n}\n\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('userId');\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getUser } from '../Common';\n \n// handle the public routes\nexport default function PublicRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => !getUser() ? <Component {...props} /> : <Redirect to={{ pathname: '/' }} />}\n    />\n  )\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getUser } from '../Common';\n \n// handle the private routes\nexport default function PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => getUser() ? <Component {...props} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}","import { Fragment } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Menu, Transition } from '@headlessui/react'\nimport { removeUserSession } from '../../util/Common'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function ProfileDropDown({ user }) {\n  const history = useHistory()\n  return (\n    <Menu as=\"div\" className=\"flex-shrink-0 relative ml-5\">\n      <div>\n        <Menu.Button className=\"bg-white rounded-full flex focus:outline-none focus:ring-rose-500\">\n          <span className=\"sr-only\">Open user menu</span>\n          {user.profilePicture === \"default\"\n            ?\n            <div className=\"max-w-md mx-auto my-3\">\n              <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                <h2 style={{ fontSize: 18 }}>{user.username.substring(0, 1)}</h2>\n              </div>\n            </div>\n            :\n            <img\n              className=\"h-10 w-10 rounded-full sm:h-10 sm:w-10\"\n              src={user.profilePicture}\n              alt={user.username.substring(0, 1)}\n            />\n          }\n        </Menu.Button>\n      </div>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute z-10 right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 py-1 focus:outline-none\">\n          <Menu.Item key='Your Profile'>\n            {({ active }) => (\n              <button\n                className={classNames(\n                  active ? 'bg-gray-100' : '',\n                  'w-full text-left py-2 px-4 text-sm text-gray-700'\n                )}\n                onClick={() => {\n                  history.push(`/profile/${user.id}`)\n                  window.location.reload()\n                }}>\n                Your Profile\n              </button>\n            )}\n          </Menu.Item>\n          <Menu.Item key='Sign out'>\n            {({ active }) => (\n              <button\n                className={classNames(\n                  active ? 'bg-gray-100' : '',\n                  'w-full text-left py-2 px-4 text-sm text-gray-700'\n                )}\n                onClick={() => {\n                  removeUserSession()\n                  history.push(\"/login\")\n                }}>\n                Sign out\n              </button>\n            )}\n          </Menu.Item>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function SearchSelectMenu({options, searchType, setSearchType}) {\n  return (\n    <Listbox value={searchType} onChange={setSearchType}>\n      {({ open }) => (\n        <>\n          {/* <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Assigned to</Listbox.Label> */}\n          <div className=\"relative\">\n            <Listbox.Button className=\"bg-white relative w-full border-t border-r border-b border-gray-300 rounded-r-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n              <span className=\"block truncate\">{searchType.name}</span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                {options.map((person) => (\n                  <Listbox.Option\n                    key={person.id}\n                    className={({ active }) =>\n                      classNames(\n                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={person}\n                  >\n                    {({ selected, active }) => (\n                      <>\n                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                          {person.name}\n                        </span>\n\n                        {selected ? (\n                          <span\n                            className={classNames(\n                              active ? 'text-white' : 'text-rose-600',\n                              'absolute inset-y-0 right-0 flex items-center pr-4'\n                            )}\n                          >\n                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </span>\n                        ) : null}\n                      </>\n                    )}\n                  </Listbox.Option>\n                ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </>\n      )}\n    </Listbox>\n  )\n}\n","import { Fragment } from 'react'\nimport { Link, NavLink, useHistory, useRouteMatch } from 'react-router-dom'\nimport { Popover } from '@headlessui/react'\nimport { ChatAlt2Icon, MenuIcon, HomeIcon, UserGroupIcon, XIcon } from '@heroicons/react/outline'\nimport { KeyIcon, SearchIcon, UserCircleIcon } from '@heroicons/react/solid'\nimport ProfileDropDown from './profileDropDown'\nimport SearchSelectMenu from '../searchSelectMenu'\nimport { removeUserSession } from '../../util/Common'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function NavBar({\n  component,\n  disableButton = false,\n  disableSearch = false,\n  editProfile = false,\n  user,\n  searchString = \"\",\n  setSearchString,\n  searchTypes,\n  searchType,\n  setSearchType,\n}) {\n\n  const history = useHistory()\n  const { url } = useRouteMatch()\n\n  const navigation = !editProfile ? [\n    { name: 'Forums', path: '/', icon: ChatAlt2Icon },\n    { name: 'Guides', path: '/categories', icon: HomeIcon },\n    ...user.accountType === \"ADMIN\" ? [\n      { name: 'Categories', path: '/admin/categories', icon: UserGroupIcon },\n      { name: 'Users', path: '/users', icon: UserGroupIcon }\n    ] : []\n  ] : [\n    { name: 'Account', path: '/account/edit', icon: UserCircleIcon },\n    { name: 'Password', path: '/account/edit/password', icon: KeyIcon }\n  ]\n\n  return (\n    <Popover\n      as=\"header\"\n      className={({ open }) =>\n        classNames(\n          open ? 'fixed inset-0 z-40 overflow-y-auto' : '',\n          'bg-white shadow-sm lg:static lg:overflow-y-visible'\n        )\n      }\n    >\n      {({ open }) => (\n        <>\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"relative flex justify-between xl:grid xl:grid-cols-12 lg:gap-8\">\n              <div className=\"flex md:absolute md:left-0 md:inset-y-0 lg:static xl:col-span-2\">\n                <div className=\"flex-shrink-0 flex items-center\">\n                  <Link to=\"/\">\n                    <img\n                      className=\"block h-8 w-auto\"\n                      src=\"https://nustart.s3.ap-southeast-1.amazonaws.com/nustartlogo.png\"\n                      alt=\"NUStart\"\n                    />\n                  </Link>\n                </div>\n              </div>\n              <div className=\"min-w-0 flex-1 md:px-8 lg:px-0 xl:col-span-8\">\n              <div className=\"flex items-center px-6 py-4 md:max-w-3xl md:mx-auto lg:max-w-none lg:mx-0 xl:px-0\">\n                  {!disableSearch ?\n                    <div className=\"flex w-full\">\n                      <Fragment>\n                        <label htmlFor=\"search\" className=\"sr-only\">\n                          Search\n                        </label>\n                        <div className=\"relative flex-1\">\n                          <div className=\"pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center\">\n                            <SearchIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                          </div>\n                          <input\n                            id=\"search\"\n                            name=\"search\"\n                            className=\"block w-full bg-white border border-gray-300 rounded-l-md py-2 pl-10 pr-3 text-sm placeholder-gray-500 focus:outline-none focus:text-gray-900 focus:placeholder-gray-400 focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                            placeholder=\"Search\"\n                            type=\"search\"\n                            value={searchString}\n                            onChange={(e) => setSearchString(e.target.value)}\n                          />\n                        </div>\n                        <div className=\"flex-2\">\n                          <SearchSelectMenu options={searchTypes} searchType={searchType} setSearchType={setSearchType} />\n                        </div>\n                      </Fragment>\n                    </div>\n                    : <div className=\"h-9\" />\n                  }\n                </div>\n              </div>\n              <div className=\"flex items-center md:absolute md:right-0 md:inset-y-0 lg:hidden\">\n                {/* Mobile menu button */}\n                <Popover.Button className=\"-mx-2 rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-rose-500\">\n                  <span className=\"sr-only\">Open menu</span>\n                  {open ? (\n                    <XIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <MenuIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Popover.Button>\n              </div>\n              <div className=\"hidden lg:flex lg:items-center lg:justify-end xl:col-span-2\">\n                {(!disableButton && component) && component}\n                {/* Profile dropdown */}\n                <ProfileDropDown user={user} />\n              </div>\n            </div>\n          </div>\n\n          <Popover.Panel as=\"nav\" className=\"lg:hidden\" aria-label=\"Global\">\n            <div className=\"max-w-3xl mx-auto px-2 pt-2 pb-3 space-y-1 sm:px-4\">\n              {navigation.map((item) => (\n                <NavLink\n                  key={item.name}\n                  to={item.path}\n                  aria-current={item.path === url ? 'page' : undefined}\n                  className={classNames(\n                    item.path === url ? 'bg-gray-100 text-gray-900' : 'hover:bg-gray-50',\n                    'block rounded-md py-2 px-3 text-base font-medium'\n                  )}\n                >\n                  {item.name}\n                </NavLink>\n              ))}\n            </div>\n            <div className=\"border-t border-gray-200 pt-4\">\n              <div className=\"max-w-3xl mx-auto px-4 flex items-center sm:px-6\">\n                <div className=\"ml-1\">\n                  <div className=\"text-base font-medium text-gray-800\">{user && user.username}</div>\n                  <div className=\"text-sm font-medium text-gray-500\">{user && user.email}</div>\n                </div>\n              </div>\n              <div className=\"mt-3 max-w-3xl mx-auto px-2 space-y-1 sm:px-4\">\n                <button\n                  className=\"w-full block rounded-md py-2 px-3 text-base text-left font-medium text-gray-500 hover:bg-gray-50 hover:text-gray-900\"\n                  onClick={() => {\n                    history.push(`/profile/${user.id}`)\n                    window.location.reload()\n                  }}>\n                  Your Profile\n                </button>\n                {/* {userNavigation.map((item) =>\n                (<NavLink\n                  key={item.name}\n                  to={item.path}\n\n                  className=\"block rounded-md py-2 px-3 text-base font-medium text-gray-500 hover:bg-gray-50 hover:text-gray-900\"\n                >\n                  {item.name}\n                </NavLink>\n                ))} */}\n                <button\n                  className=\"w-full block rounded-md py-2 px-3 text-base text-left font-medium text-gray-500 hover:bg-gray-50 hover:text-gray-900\"\n                  onClick={() => {\n                    removeUserSession()\n                    history.push(\"/login\")\n                  }}>\n                  Sign out\n                </button>\n              </div>\n            </div>\n\n            <div className=\"mt-6 max-w-3xl mx-auto px-4 sm:px-6\">\n              {/* <a\n                href=\"#\"\n                className=\"w-full flex items-center justify-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700\"\n              >\n                New {props.buttonContent.charAt(0).toUpperCase() + props.buttonContent.slice(1)}\n              </a> */}\n              {(!disableButton && component) && component}\n            </div>\n          </Popover.Panel>\n        </>\n      )}\n    </Popover>\n  )\n}","import { NavLink, useRouteMatch } from 'react-router-dom'\nimport { ChatAlt2Icon, BookOpenIcon, KeyIcon, UserCircleIcon, LocationMarkerIcon } from '@heroicons/react/outline'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function SideBar({ editProfile = false, user }) {\n  const { url } = useRouteMatch()\n\n  const navigation = !editProfile ? [\n    { name: 'Forums', path: '/', icon: ChatAlt2Icon },\n    { name: 'Guides', path: '/categories', icon: BookOpenIcon },\n    { name: 'Campus', path: '/campus', icon: LocationMarkerIcon },\n  ] : [\n    { name: 'Account', path: '/account/edit', icon: UserCircleIcon },\n    { name: 'Password', path: '/account/edit/password', icon: KeyIcon }\n  ]\n\n  const adminConsole = [\n    { id: 1, name: 'Campus', path: '/admin/campus' },\n    { id: 2, name: 'Categories', path: '/admin/categories' },\n    { id: 3, name: 'Users', path: '/users'},\n  ]\n\n  return (\n    <nav aria-label=\"Sidebar\" className=\"sticky top-4 divide-y divide-gray-300\">\n      <div className=\"pb-8 space-y-1\">\n        {navigation.map((item) => (\n          <NavLink\n            key={item.name}\n            to={item.path}\n            className={classNames(\n              item.path === url ? 'bg-gray-200 text-gray-900' : 'text-gray-600 hover:bg-gray-50',\n              'group flex items-center px-3 py-2 text-sm font-medium rounded-md'\n            )}\n            aria-current={item.path === url ? 'page' : undefined}>\n            <item.icon\n              className={classNames(\n                item.path === url ? 'text-gray-500' : 'text-gray-400 group-hover:text-gray-500',\n                'flex-shrink-0 -ml-1 mr-3 h-6 w-6'\n              )}\n              aria-hidden=\"true\"\n            />\n            <span className=\"truncate\">{item.name}</span>\n          </NavLink>\n        ))}\n      </div>\n\n      {/* User management panel */}\n      {user.accountType === 'ADMIN' && \n      <div className=\"pt-10\">\n        <p\n          className=\"px-3 text-xs font-semibold text-gray-500 uppercase tracking-wider\"\n          id=\"communities-headline\"\n        >\n          Admin Console\n        </p>\n        <div className=\"mt-3 space-y-2\" aria-labelledby=\"communities-headline\">\n          {adminConsole.map((nav) => (\n            <NavLink \n            key={nav.id}\n            to={nav.path}\n            className=\"group flex items-center px-3 py-2 text-sm font-medium text-gray-600 rounded-md hover:text-gray-900 hover:bg-gray-50\">\n              <span className=\"truncate\">{nav.name}</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>}\n    </nav>\n  )\n}","export default function InputText(\n  {\n    placeholder=\"\", \n    required=false, \n    autoFocus=false, \n    maxLength=255,\n    autoCapitalize='none',\n    className=\"shadow-sm focus:ring-rose-500 focus:border-rose-500 block w-full sm:text-sm border-gray-300 rounded-md\",\n    ...props\n  }) {\n  return (\n    <div>\n      <label htmlFor=\"input\" className=\"block text-sm font-medium text-gray-700\">\n        {props.label}\n      </label>\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\n        <input\n          type={props.type}\n          name={props.name}\n          id={props.id}\n          className={className}\n          placeholder={placeholder}\n          autoComplete={props.autoComplete}\n          autoFocus={autoFocus}\n          required={required}\n          aria-invalid=\"true\"\n          // aria-describedby=\"input-error\"\n          maxLength={maxLength}\n          autoCapitalize={autoCapitalize}\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n    </div>\n  )\n}","export default function TextArea(\n  { placeholder = '',\n    required = false,\n    autoFocus = false,\n    rows = 3,\n    helpText = '',\n    ...props }\n) {\n  return (\n    <div>\n      <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n        {props.label}\n      </label>\n      <div className=\"mt-1\">\n        <textarea\n          id={props.id}\n          name={props.name}\n          rows={rows}\n          placeholder={placeholder}\n          required\n          autoFocus={autoFocus}\n          className=\"shadow-sm focus:ring-rose-500 focus:border-rose-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n          value={props.value}\n          onChange={props.onChange}\n        />\n      </div>\n      <p className=\"mt-2 text-sm text-gray-500\">{helpText}</p>\n\n    </div>\n  )\n}","import axios from \"axios\"\nimport { getUser } from \"./Common\"\n\nconst api = {\n  login(user) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/users/login`, user)\n  },\n  register(user) {\n    return axios.post(\"http://localhost:8080/NUStartApplication-war/webresources/users\", user)\n  },\n  getUsers() {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users`)\n  },\n  getUser(id = getUser()) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users/${id}`)\n  },\n  getContactSize() {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users/contactsId`)\n  },\n  getCategories(){\n    return axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/categories\")\n  },\n  getCategory(categoryId){\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}`)\n  },\n  getGuides(){\n    return axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/guides\")\n  },\n  getGuide(guideId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/guides/${guideId}`)\n  },\n  getGuideCategory(guideId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/guides/${guideId}/category`)\n  },\n  getMap(mapId){\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/admin/maps/${mapId}`)\n  },\n  getMaps(){\n    return axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/admin/maps\")\n  },\n  getUserGuide(userId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users/${userId}/guides`)\n  },\n  createGuide(categoryId, guide) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}/guides`, guide)\n  },\n  getComments(gid) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/guides/${gid}`)\n  },\n  getCommentReplies(cid) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/guides/${cid}`)\n  },\n  getForums() {\n    return axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/forums\")\n  },\n  getForum(id) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/forums/${id}`)\n  },\n  getThread(id) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/threads/${id}`)\n  },\n  getThreadForum(threadId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/threads/${threadId}/forum`)\n  },\n  getUserThread(userId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users/${userId}/threads`)\n  },\n  getPostThread(postId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/threads/${postId}/post`)\n  },\n  getUserPost(userId) {\n    return axios.get(`http://localhost:8080/NUStartApplication-war/webresources/users/${userId}/posts`)\n  },\n  editComment(guideId, comment) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/guides/${guideId}/comments`, comment)\n  }, \n  editMap(id, map) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/admin/maps/${id}`, map)\n  },\n  editUser(id, user) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/users/${id}`, user)\n  },\n  editGuide(categoryId, guide) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}/guides`, guide)\n  },\n  editThread(forumId, thread) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads`, thread)\n  },\n  editPost(forumId, threadId, post) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads/${threadId}/posts`, post)\n  },\n  editCategory(categoryId, category) {\n    return axios.put(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}`, category)\n  },\n  createComment(guideId, comment) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/guides/${guideId}/comments`, comment)\n  },\n  createForum(forum) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/forums`, forum)\n  },\n  createPost(forumId, threadId, post) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads/${threadId}/posts`, post)\n  },\n  createThread(forumId, thread) {\n    return axios\n      .post(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads`, thread)\n  },\n  createCategory(category) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/categories`, category)\n  },\n  createMap(map) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/admin/maps`, map)\n  },\n  createContact(userId, contact) {\n    return axios.post(`http://localhost:8080/NUStartApplication-war/webresources/users/${userId}/contacts`, contact)\n  },\n  deletePost(forumId, threadId, postId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads/${threadId}/posts/${postId}`)\n  },\n  deleteGuide(categoryId, guideId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}/guides/${guideId}`)\n  },\n  deleteThread(forumId, threadId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forumId}/threads/${threadId}`)\n  },\n  deleteCategory(categoryId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/categories/${categoryId}`)\n  },\n  deleteComment(guideId, commentId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/guides/${guideId}/comments/${commentId}`)\n  },\n  deleteContact(userId, contactId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/users/${userId}/contact/${contactId}`)\n  },\n  deleteMap(mapId) {\n    return axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/admin/maps/${mapId}`)\n  },\n}\n\nexport default api","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport TextArea from '../../components/textArea';\nimport api from '../../util/api';\n\nexport default function AddForumPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createForum()\n    alert(\"Successfully created forum.\")\n  }\n\n  function createForum() {\n    api.createForum({\n      title: title,\n      description: description,\n      creator: user,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Forum</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3\">\n                        <TextArea\n                          name=\"description\"\n                          id=\"description\"\n                          label=\"Description\"\n                          required={true}\n                          value={description}\n                          maxLength={1000}\n                          onChange={(e) => setDescription(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 flex justify-end sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport TextArea from '../../components/textArea';\nimport draftToHtml from 'draftjs-to-html';\nimport api from '../../util/api';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nexport default function AddThreadPage() {\n  const history = useHistory()\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [error, setError] = useState(null);\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createThread()\n    alert(\"Successfully created thread.\")\n  }\n\n  function createThread() {\n    api.createThread(id, {\n      title: title,\n      creator: user,\n      posts: [\n        {\n          content: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n          creator: user\n        }\n      ]\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Thread</h3>\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        {/* This information will be displayed publicly so be careful what you share. */}\n                      </p>\n                    </div>\n\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n\n                      <div className=\"col-span-3\">\n                        <div>\n                          <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                            Post\n                          </label>\n\n                          <div className='mt-1'>\n                            <div className=\"shadow block w-full sm:text-sm rounded-md\" \n                            style={{ padding: '10px', minHeight: '400px' }}>\n                              <Editor\n                                editorState={editorState}\n                                onEditorStateChange={setEditorState}\n                              //   id=\"post\"\n                              />\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport api from '../../util/api';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nimport draftToHtml from 'draftjs-to-html';\n\nexport default function AddPostPage() {\n  const history = useHistory()\n  const { forumId, threadId } = useParams()\n  const [user, setUser] = useState(null)\n  const [error, setError] = useState(null);\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createPost()\n    alert(\"Successfully added post.\")\n  }\n\n  function createPost() {\n    console.log(editorState.getCurrentContent());\n    api.createPost(forumId, threadId, {\n      content: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      creator: user\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Post</h3>\n                    </div>\n\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3\">\n                        <div>\n                          <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                            Post\n                          </label>\n\n                          <div className='mt-1'>\n                            <div className=\"shadow block w-full sm:text-sm rounded-md\"\n                              style={{ padding: '10px', minHeight: '400px' }}\n                            >\n                              <Editor\n                                editorState={editorState}\n                                onEditorStateChange={setEditorState}\n                              />\n\n                            </div>\n                          </div>\n\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import moment from \"moment\"\nimport { ChevronRightIcon } from \"@heroicons/react/solid\"\nimport {\n    CalendarIcon,\n    ChatAlt2Icon,\n} from \"@heroicons/react/outline\"\nimport { useEffect, useState } from \"react\"\nimport api from \"../../util/api\"\n\nexport default function GuideItem({ guide }) {\n\n    const [category, setCategory] = useState(null)\n\n    useEffect(() => {\n        async function getCategory() {\n            await api.getGuideCategory(guide.id)\n                .then(response => setCategory(response.data))\n                //.then(() => console.log(category))\n        }\n        getCategory()\n    }, [guide.id])\n\n    return (\n        category &&\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"truncate\">\n                    <div className=\"flex text-sm items-center\">\n                        <a href={`/categories/${category.id}/guides`} className=\"block hover:bg-gray-50\">\n                            <p className=\"text-xl font-medium text-rose-600 truncate\">{category.name}</p>\n                        </a>\n                        <ChevronRightIcon className=\"ml-2 flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        <a href={`/categories/${category.id}/guides/${guide.id}`} className=\"block hover:bg-gray-50\">\n                            <p className=\"text-xl font-small text-rose-500 truncate\">{guide.title}</p>\n                        </a>\n                        <ChatAlt2Icon className=\"ml-2 flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        <p className=\" flex-shrink-0 font-normal text-gray-500\">{guide.comments.length} comments </p>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                Created {moment(guide.dateCreated.slice(0, -5)).format(\"DD/MM/YY\")}\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                    <div className=\"flex overflow-hidden -space-x-1\">\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"ml-5 flex-shrink-0\">\n                <a href={`/categories/${category.id}/guides/${guide.id}`} className=\"block hover:bg-gray-50\">\n                    <ChevronRightIcon className=\"h-7 w-7 text-gray-400\" aria-hidden=\"true\" />\n                </a>\n            </div>\n        </div>\n\n    )\n}","import GuideItem from \"./guideItem\"\n\nexport default function GuidesTab({ guides = [] }) {\n\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {guides.map((guide) => (\n                    <li key={guide.id}>\n                        <GuideItem guide={guide} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","import React, { useRef, useState, useEffect } from \"react\";\n\nfunction ContactForm({\n  editMode = false,\n  value = \"\",\n  id = 0,\n  onDone,\n}) {\n  const textboxRef = useRef();\n  const [text, setText] = useState(value);\n\n  // useEffect(() => {\n  //   textboxRef.current.focus();\n  //   textboxRef.current.select();\n  // }, []);\n\n  function resetState() {\n    setText(value);\n  }\n\n  function renderAddOrEditBtn() {\n    let buttonText = \"Add\";\n\n    if (editMode) {\n      buttonText = \"Confirm Edit\";\n    }\n\n    return (\n      <button\n        type=\"submit\"\n        className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n        onClick={() => {\n          onDone({\n            id: id,\n            value: text,\n          });\n          resetState();\n        }}\n      >\n        Add\n      </button>\n    );\n  } //end renderAddOrEditBtn\n\n  const addOrEditBtn = renderAddOrEditBtn();\n\n  return (\n    <div>\n      <div className=\"mt-5 sm:flex sm:items-center\">\n        <div className=\"w-full sm:max-w-xs\">\n        <label htmlFor=\"email\" className=\"sr-only\">\n          Contact\n        </label>\n          <input\n            ref={textboxRef}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            type=\"email\"\n            name=\"contact\"\n            id=\"contact\"\n            className=\"shadow-sm focus:ring-rose-500 focus:border-rose-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n            placeholder=\"@telegramhandle\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n          onClick={() => {\n            onDone({\n              id: id,\n              value: text,\n            });\n            resetState();\n          }}\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactForm;","import React from \"react\";\n\nfunction ContactItem(props) {\n  return (\n    <div className=\"px-4 py-5 sm:p-6\">\n      <div className=\"sm:flex sm:items-start sm:justify-between\">\n        <div>\n          <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{props.value}</h3>\n        </div>\n        <div className=\"mt-5 sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:flex sm:items-center\">\n          <button\n            type=\"button\"\n            className=\"inline-flex items-center px-4 py-2 font-medium rounded-md text-rose-600 hover:text-rose-900\"\n            onClick={(e) => props.onDelete(props.id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default ContactItem;","import React from \"react\";\nimport ContactItem from \"./ContactItem\";\n\nfunction ContactList(props) {\n    const list = props.contacts.map((c) => {\n        return (\n            <ContactItem\n                key={c.id}\n                id={c.id}\n                value={c.value}\n                onEdit={(id) => props.onEdit(id, true)}\n                onDelete={props.onDelete}\n            />\n        );\n\n    });\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n                <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n                    <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                        <table className=\"min-w-full divide-y divide-gray-200\">\n                            <thead className=\"bg-gray-50\">\n                                <tr>\n                                    <th\n                                        scope=\"col\"\n                                        className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                                    >\n                                        Contacts\n                                    </th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {list}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ContactList;","import { useEffect, useState } from \"react\";\nimport ContactForm from '../../components/contacts/ContactForm'\nimport ContactList from '../../components/contacts/ContactList'\nimport api from \"../../util/api\";\n\nexport default function ContactsTab({ editMode = false, user }) {\n\n    const [contactStore, setContactStore] = useState({ contacts: [], currentId: 0 })\n\n    useEffect(() => {\n        async function getSize() {\n            const size = await api.getContactSize()\n            setContactStore({ contacts: user.contacts, currentId: size.data + 1 })\n            console.log(size)\n        }\n        getSize()\n    }, [user.id])\n\n    async function deleteContact(contactId) {\n        await api.deleteContact(user.id, contactId)\n        .then(response => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data\n        }))\n    }\n\n    function handleDelete(id) {\n        const { contacts } = contactStore;\n        const updatedNotes = contacts.filter((n) => {\n            return n.id !== id;\n        });\n\n        setContactStore((oldNotesStore) => ({\n            currentId: oldNotesStore.currentId,\n            contacts: updatedNotes,\n        }));\n        deleteContact(id)\n    }\n\n    async function addContact(newContact) {\n        await api.createContact(user.id, newContact)\n        .then((response) => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data,\n        }))\n        .then(() => console.log(contactStore))\n    }\n\n    function handleAddEdit(note) {\n        const { currentId, contacts } = contactStore;\n        if (note.id === 0) {\n            //add action\n            if (note.value.trim() === \"\") return;\n\n            note.id = currentId + 1;\n\n            setContactStore({\n                currentId: note.id,\n                contacts: [...contacts, note],\n            });\n            ///console.log(note)\n            addContact(note)\n\n        } else {\n            //edit action\n            if (note.value.trim() === \"\") {\n                //cancel edit\n                return;\n            } else {\n                //find the note\n                const updatedNotes = contacts.map((n) => {\n                    if (n.id === note.id) {\n                        note.editMode = false;\n                        return note;\n                    } else {\n                        return n;\n                    }\n                });\n\n                setContactStore((oldContactsStore) => ({\n                    currentId: oldContactsStore.currentId,\n                    contacts: updatedNotes,\n                }));\n            }\n        }\n    }\n\n    const { contacts } = contactStore\n\n    return (\n        <div className=\"p-5 rounded-md shadow-sm -space-y-px\">\n            <div className=\"bg-white sm:rounded-lg\">\n                <div className=\"px-4 py-5 sm:p-3\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Contacts</h3>\n                    <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n                        Help others find you! This will be visible to other users.\n                    </span>\n                    <br />\n                    <div className=\"note-container\">\n                        {editMode \n                        ? <ContactForm onDone={handleAddEdit} />\n                        : null\n                        }\n                        <br />\n                        <ContactList\n                            contacts={contacts}\n                            onDelete={handleDelete}\n                            onDone={handleAddEdit}\n                        />\n                    </div>\n                </div>\n            </div>\n            <br />\n        </div>\n    )\n}","export default function UploadImage({ accept, required = false, handleFileInput }) {\n  return (\n    <div className=\"mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md\">\n      <div className=\"space-y-1 text-center\">\n        <svg\n          className=\"mx-auto h-12 w-12 text-gray-400\"\n          stroke=\"currentColor\"\n          fill=\"none\"\n          viewBox=\"0 0 48 48\"\n          aria-hidden=\"true\"\n        >\n          <path\n            d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n        <div className=\"flex text-sm text-gray-600\">\n          <label\n            htmlFor=\"file-upload\"\n            className=\"relative cursor-pointer bg-white rounded-md font-medium text-rose-600 hover:text-rose-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-rose-500\"\n          >\n            <span>Upload a file</span>\n            <input id=\"file-upload\" name=\"file-upload\" type=\"file\" accept={accept} className=\"sr-only\" onChange={handleFileInput} required={required}/>\n          </label>\n          <p className=\"pl-1\">or drag and drop</p>\n        </div>\n        <p className=\"text-xs text-gray-500\">PNG, JPG, GIF up to 10MB</p>\n      </div>\n    </div>\n  )\n}","export default function uploadProfileImage({ accept, handleProfileInput }) {\n    return (\n        <div className=\"mt-1 flex justify-center px-6 pb-6\">\n\n            <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                <div className=\"flex items-center\">\n                    <span className=\"h-12 w-12 rounded-full overflow-hidden bg-gray-100\">\n                        <svg className=\"h-full w-full text-gray-300\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path d=\"M24 20.993V24H0v-2.996A14.977 14.977 0 0112.004 15c4.904 0 9.26 2.354 11.996 5.993zM16.002 8.999a4 4 0 11-8 0 4 4 0 018 0z\" />\n                        </svg>\n                    </span>\n                    <label\n                        htmlFor=\"profile-upload\"\n                        className=\"relative cursor-pointer bg-white rounded-md font-medium text-rose-600 hover:text-rose-500\"\n                    >\n                        <span className=\"ml-5 bg-white py-2 px-3 border border-gray-300 rounded-md shadow-sm text-sm leading-4 font-medium text-rose-600 hover:bg-gray-50 \">Change</span>\n                        <input id=\"profile-upload\" name=\"profile-upload\" type=\"file\" accept={accept} className=\"sr-only\" onChange={handleProfileInput} />\n                    </label>\n                </div>\n            </div>\n        </div>\n    )\n}","import { Fragment, useState, useEffect } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport { uploadFile } from 'react-s3'\nimport UploadImage from '../../components/uploadImage'\nimport {\n    AnnotationIcon,\n    CheckIcon,\n    NewspaperIcon,\n    SelectorIcon,\n} from '@heroicons/react/solid'\nimport {\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport api from '../../util/api'\nimport { useHistory } from 'react-router'\nimport UploadProfileImage from '../../components/uploadProfileImage'\nimport moment from 'moment'\n\nconst years = [\n    { id: 1, name: '1' },\n    { id: 2, name: '2' },\n    { id: 3, name: '3' },\n    { id: 4, name: '4' },\n    { id: 5, name: '5' },\n    { id: 6, name: 'Part-time' },\n    { id: 7, name: 'Graduate' },\n    { id: 8, name: 'PhD' },\n]\n\nconst faculties = [\n    { id: 1, name: 'Arts & Social Sciences' },\n    { id: 2, name: 'Business' },\n    { id: 3, name: 'Computing' },\n    { id: 4, name: 'Continuing and Lifelong Education' },\n    { id: 5, name: 'Dentistry' },\n    { id: 6, name: 'Design & Environment' },\n    { id: 7, name: 'Duke-NUS' },\n    { id: 8, name: 'Engineering' },\n    { id: 9, name: 'Integrative Sciences & Engineering' },\n    { id: 10, name: 'Law' },\n    { id: 11, name: 'Medicine' },\n    { id: 12, name: 'Music' },\n    { id: 13, name: 'Public Health' },\n    { id: 14, name: 'Public Policy' },\n    { id: 15, name: 'Science' },\n    { id: 16, name: 'University Scholars Program' },\n    { id: 17, name: 'Yale-NUS' },\n]\n\nexport default function AccountTab({ editMode = false, uid }) {\n    const [user, setUser] = useState(null)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [course, setCourse] = useState(\"\")\n    const [year, setYear] = useState(years[0])\n    const [faculty, setFaculty] = useState(faculties[0])\n    const [message, setMessage] = useState('')\n    const [profilePic, setProfilePic] = useState('')\n    const [coverImage, setCoverImage] = useState('')\n    const [selectedFile, setSelectedFile] = useState(null)\n    const [selectedCover, setSelectedCover] = useState(null)\n    const [error, setError] = useState(null)\n\n    const history = useHistory()\n\n    const S3_BUCKET = 'nustart';\n    const REGION = 'ap-southeast-1';\n    const ACCESS_KEY = 'AKIARTYBCSQYJNUGQWLJ';\n    const SECRET_ACCESS_KEY = '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';\n\n    const config = {\n        bucketName: S3_BUCKET,\n        region: REGION,\n        accessKeyId: ACCESS_KEY,\n        secretAccessKey: SECRET_ACCESS_KEY,\n    }\n\n    useEffect(() => {\n        async function getLogged() {\n            const u = await api.getUser(uid)\n            setEmail(u.data.email)\n            setName(u.data.username)\n            setProfilePic(u.data.profilePicture)\n            setCoverImage(u.data.coverImage)\n            if (u.data.accountType === \"STUDENT\" || (u.data.course !== \"default\" && u.data.yr !== \"default\")) {\n                setCourse(u.data.course)\n                const y = years.filter((y) => y.name === u.data.yr.toString())[0]\n                setYear(y)\n                //console.log(year)\n                const f = faculties.filter((f) => f.name === u.data.faculty)[0]\n                setFaculty(f)\n                //console.log(faculty)\n            } else if (u.data.accountType === \"STAFF\") {\n                const f = faculties.filter((f) => f.name === u.data.faculty)[0]\n                setFaculty(f)\n            }\n            setUser(u.data)\n        }\n        getLogged()\n    }, [uid])\n\n    function classNames(...classes) {\n        return classes.filter(Boolean).join(' ')\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        //console.log(selectedFile)\n\n        if (selectedFile === null && selectedCover === null) {\n            updateProfile()\n        } else if (selectedFile !== null && selectedCover !== null) {\n            console.log('multiple')\n            const file = [selectedFile, selectedCover]\n            handleMultipleUploads(file)\n        } else {\n            console.log('single')\n            const file = selectedCover === null ? selectedFile : selectedCover\n            handleUpload(file)\n        }\n    }\n\n    const handleUpload = async (file) => {\n        uploadFile(file, config)\n            .then(data => {\n                updateProfile([data.location])\n            })\n            .catch(error => setError(error))\n    }\n\n    const handleMultipleUploads = async (file) => {\n        const locations = []\n        uploadFile(file[0], config)\n            .then(data =>\n                locations.push(data.location)\n            ).then(() => uploadFile(file[1], config)\n                .then(data => locations.push(data.location))\n                .then(() => updateProfile(locations)))\n            .catch(error => setError(error))\n    }\n\n    const handleCoverInput = (e) => {\n        setSelectedCover(e.target.files[0])\n        // setFiles([(prev) => prev].push(e.target.files[0]))\n    }\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0])\n        // setFiles([(prev) => prev].push(e.target.files[0]))\n    }\n\n    function updateProfile(locations = []) {\n        //console.log(locations)\n        if (user.accountType === 'STAFF') {\n            user.faculty = faculty.name\n        } else if (user.accountType === 'STUDENT') {\n            user.course = course\n            user.yr = year.name\n            user.faculty = faculty.name\n        }\n        user.email = email\n        user.username = name\n        user.profilePicture = selectedFile !== null ? locations[0] : profilePic\n\n        if (selectedFile !== null && selectedCover !== null) {\n            user.coverImage = locations[1]\n        } else if (selectedFile === null && selectedCover !== null) {\n            user.coverImage = locations[0]\n        } else {\n            user.coverImage = coverImage\n        }\n\n        api.editUser(user.id, user)\n            .then(response => setUser(response.data))\n            //.then(() => history.push(`/profile/${uid}`))\n            .then(() => window.location.reload())\n    }\n\n    function ViewMode() {\n        return (\n            <div className=\"h-full flex\">\n                <div className=\"hidden lg:flex lg:flex-shrink-0\">\n                </div>\n                <div className=\"flex flex-col min-w-0 flex-1 overflow-hidden\">\n\n                    <div className=\"flex-1 relative z-0 flex overflow-hidden\">\n                        <main className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last\">\n                            <article>\n                                <div className=\"mt-6 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                    <dl className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\">\n                                        <div key=\"email\" className=\"sm:col-span-1\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Email</dt>\n                                            <dd className=\"mt-1 text-sm text-gray-900\">{user.email}</dd>\n                                        </div>\n                                        <div className=\"sm:col-span-2\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Joined</dt>\n                                            <dd\n                                                className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                            >\n                                                {moment(user.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                                            </dd>\n                                        </div>\n                                        <div className=\"sm:col-span-2\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                                            <dd\n                                                className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                            >\n                                                {user.username}\n                                            </dd>\n                                        </div>\n                                        {user.accountType === 'STUDENT' && user.course == 'default' && user.yr == '0'\n                                            ?\n                                            <>\n                                                <div className=\"sm:col-span-2\">\n                                                    <dt className=\"text-sm font-medium text-gray-500\">Course</dt>\n                                                    <dd\n                                                        className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                                    >\n                                                        {user.course}\n                                                    </dd>\n                                                </div>\n                                                <div className=\"sm:col-span-2\">\n                                                    <dt className=\"text-sm font-medium text-gray-500\">Year</dt>\n                                                    <dd\n                                                        className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                                    >\n                                                        {user.yr}\n                                                    </dd>\n                                                </div>\n                                            </>\n                                            : null\n                                        }\n                                    </dl>\n                                    <div className=\"mt-8 max-w-5xl mx-auto px-1 pb-12 sm:px-1 lg:px-1\">\n\n                                    </div>\n                                </div>\n                            </article>\n                        </main>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return (\n        user &&\n        <div>\n            {editMode\n                ? <div className=\"pt-3 space-y-6 sm:pt-5 sm:space-y-5\">\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"p-5 space-y-3 sm:space-y-5\">\n                            {message &&\n                                <div className=\"rounded-md bg-green-50 p-4\">\n                                    <div className=\"flex\">\n                                        <div className=\"flex-shrink-0\">\n                                            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"ml-3\">\n                                            <h3 className=\"text-sm font-medium text-green-800\">Your profile was updated successfully</h3>\n                                            <div className=\"mt-2 text-sm text-green-700\">\n                                                {message.message}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start\">\n\n                                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                    Name\n                                </label>\n                                <div className=\"mt-1 sm:mt-0 sm:col-span-2 max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                    <InputText\n                                        type=\"text\"\n                                        name=\"username\"\n                                        id=\"username\"\n                                        autoComplete=\"given-name\"\n                                        required={true}\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                    Email\n                                </label>\n                                <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                    <InputText\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        autoComplete=\"email\"\n                                        required={true}\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"col-span-3\">\n                                <label className=\"block pb-4 sm:border-t sm:border-gray-200 sm:pt-5 text-sm font-medium text-gray-700\">Profile picture</label>\n                                {!selectedFile ?\n                                    <div>\n                                        <UploadProfileImage handleProfileInput={handleFileInput} accept=\".jpg, .png, .gif\" />\n                                    </div>\n                                    : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                                        {selectedFile.name}\n                                        <button className=\"text-gray-700\" onClick={() => setSelectedFile(null)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                }\n                            </div>\n\n                            <div className=\"col-span-3\">\n                                <label className=\"block pb-4 sm:border-t sm:border-gray-200 sm:pt-5 text-sm font-medium text-gray-700\">Cover Image</label>\n                                {!selectedCover ?\n                                    <div >\n                                        <UploadImage handleFileInput={handleCoverInput} accept=\".jpg, .png, .gif\" />\n                                        {/* <input type=\"file\" onChange={(e) => setCoverImage(e.target.files[0])}></input> */}\n                                    </div>\n                                    : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                                        {selectedCover.name}\n                                        <button className=\"text-gray-700\" onClick={() => setSelectedCover(null)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                }\n                            </div>\n\n                            {user.accountType === \"STUDENT\"\n                                ?\n                                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Year\n                                    </label>\n                                    <Listbox value={year} onChange={setYear}>\n                                        <div className=\"mt-1 relative\">\n                                            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                                <span className=\"block truncate\">{year.name}</span>\n                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                    <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                </span>\n                                            </Listbox.Button>\n\n                                            <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                                <Listbox.Options className=\"absolute z-10 mt-1 max-w-lg block w-full bg-white shadow-sm max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:max-w-xs sm:text-sm\">\n                                                    {years.map((year) => (\n                                                        <Listbox.Option\n                                                            key={year.id}\n                                                            className={({ active }) =>\n                                                                classNames(\n                                                                    active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                    'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                                )\n                                                            }\n                                                            value={year}\n                                                        >\n                                                            {({ selected, active }) => (\n                                                                <>\n                                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                        {year.name}\n                                                                    </span>\n\n                                                                    {selected ? (\n                                                                        <span\n                                                                            className={classNames(\n                                                                                active ? 'text-white' : 'text-rose-600',\n                                                                                'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                            )}\n                                                                        >\n                                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                        </span>\n                                                                    ) : null}\n                                                                </>\n                                                            )}\n                                                        </Listbox.Option>\n                                                    ))}\n                                                </Listbox.Options>\n                                            </Transition>\n                                        </div>\n                                    </Listbox>\n\n                                </div>\n                                : null\n                            }\n                            {user.accountType !== \"ADMIN\"\n                                ? <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Faculty\n                                    </label>\n                                    <Listbox value={faculty} onChange={setFaculty}>\n                                        <div className=\"mt-3 relative\">\n                                            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                                <span className=\"block truncate\">{faculty.name}</span>\n                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                    <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                </span>\n                                            </Listbox.Button>\n\n                                            <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                                <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                                    {faculties.map((faculty) => (\n                                                        <Listbox.Option\n                                                            key={faculty.id}\n                                                            className={({ active }) =>\n                                                                classNames(\n                                                                    active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                    'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                                )\n                                                            }\n                                                            value={faculty}\n                                                        >\n                                                            {({ selected, active }) => (\n                                                                <>\n                                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                        {faculty.name}\n                                                                    </span>\n\n                                                                    {selected ? (\n                                                                        <span\n                                                                            className={classNames(\n                                                                                active ? 'text-white' : 'text-rose-600',\n                                                                                'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                            )}\n                                                                        >\n                                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                        </span>\n                                                                    ) : null}\n                                                                </>\n                                                            )}\n                                                        </Listbox.Option>\n                                                    ))}\n                                                </Listbox.Options>\n                                            </Transition>\n                                        </div>\n                                    </Listbox>\n                                </div>\n                                : null\n                            }\n\n                            {user.accountType === \"STUDENT\"\n                                ? <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"course\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Course\n                                    </label>\n                                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"course\"\n                                            id=\"course\"\n                                            autoComplete=\"course\"\n                                            value={course}\n                                            onChange={(e) => setCourse(e.target.value)}\n                                            className=\"max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\n                                        />\n                                    </div>\n                                </div>\n                                : null\n                            }\n                            <div className=\"pt-5\">\n                                <div className=\"flex justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                        onClick={() => history.goBack()}\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        type=\"submit\"\n                                        className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                : <ViewMode />\n            }\n        </div>\n    )\n}","import {\n    CalendarIcon,\n    AnnotationIcon,\n    LibraryIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport { ChevronRightIcon } from '@heroicons/react/solid'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../../util/api'\n\nexport default function ThreadItem({ thread }) {\n    const [forum, setForum] = useState(null)\n\n    useEffect(() => {\n        async function getForum() {\n            await api.getThreadForum(thread.id)\n                .then(response => setForum(response.data))\n        }\n        getForum()\n    }, [thread.id])\n\n    return (\n        forum &&\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"truncate\">\n                    <div className=\"flex text-sm sm:items-center\">\n                        <a href={`/${forum.id}/threads`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium hover:text-rose-600 text-gray-500 truncate\">{forum.title}</p>\n                        </a>\n                        <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p>\n                        <p className=\"text-xl font-medium text-rose-500 truncate\">{thread.title}</p>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                Created {moment(thread.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                            </p>\n                        </div>\n                        <div className=\"ml-5 flex items-center text-sm text-gray-500\">\n                            <AnnotationIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                {thread.posts.length} posts\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                    <div className=\"flex overflow-hidden -space-x-1\">\n\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Link to={`/${forum.id}/threads/${thread.id}/posts`}\n                    className=\"inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n    )\n}","\nimport ThreadItem from './threadItem'\n\nexport default function ThreadsTab({ threads = [] }) {\n\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {threads.map((thread) => (\n                    <li key={thread.id}>\n                        <ThreadItem thread={thread} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","import { AnnotationIcon, CalendarIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../util/api\";\n\nexport default function PostItem({ p }) {\n    const [thread, setThread] = useState(null)\n    const [forum, setForum] = useState(null)\n\n    useEffect(() => {\n        async function getThread() {\n            await api.getPostThread(p.id)\n                .then(response => {\n                    setThread(response.data)\n                    //console.log(response.data.id)\n                    getForum(response.data.id)\n                })\n            //.then(() => getForum(thread))\n            //.then(() => getForum(thread))\n            //console.log(p)\n        }\n        getThread()\n    }, [p.id])\n\n    async function getForum(tid) {\n        await api.getThreadForum(tid).then(response => setForum(response.data))\n    }\n\n    return (\n        forum &&\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"truncate\">\n                    <div className=\"flex text-sm sm:items-center\">\n                        <a href={`/${forum.id}/threads`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium hover:text-rose-600 text-gray-500 truncate\">{forum.title}</p>\n                        </a>\n                        <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p>\n                        <a href={`/${forum.id}/threads/${thread.id}/posts`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium text-rose-500 truncate\">{thread.title}</p>\n                        </a>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                Posted {moment(thread.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            {/* <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p> */}\n                            <div className=\"text-xl font-medium text-rose-500 truncate\"dangerouslySetInnerHTML={{ __html: postMessage.content }} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                    <div className=\"flex overflow-hidden -space-x-1\">\n\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Link to={`/${forum.id}/threads/${thread.id}/posts`}\n                    className=\"inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n\n    )\n}","\nimport PostItem from \"./postItem\";\n\nexport default function PostsTab({ posts }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {posts.map((p) => (\n                    <li key={p.creator.email}>\n                        <PostItem p={p} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","import { CheckCircleIcon, XCircleIcon } from \"@heroicons/react/solid\"\nimport { useEffect, useState } from \"react\"\nimport InputText from \"../../components/inputText\"\nimport api from \"../../util/api\"\n\nexport default function PasswordTab({ user }) {\n\n    const [password, setPassword] = useState('')\n    const [currentPassword, setCurrentPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        async function getLoggedInUser() {\n            await api.getUser(user.id)\n                .then(response => setPassword(response.data.password))\n                .then(() => console.log(password))\n        }\n        getLoggedInUser()\n    }, [user.id])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        if (password === currentPassword) {\n            if (newPassword.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\")) {\n                if (newPassword === confirmPassword) {\n                    //console.log(newPassword)\n                    changePassword()\n                } else {\n                    alert(\"Passwords do not match!\")\n                }\n            } else {\n                setError(\"Passwords must be minimum eight characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.\")\n            }\n        } else {\n            alert(\"Wrong current password!\")\n        }\n    }\n\n    async function changePassword() {\n        user.password = newPassword\n        await api.editUser(user.id, user)\n            .then(response => console.log(response.data))\n            .then(() => setMessage(\"Your password has been updated.\"))\n            .then(() => console.log(message))\n    }\n\n    return (\n        user &&\n        <div>\n            <div className=\"pt-3 space-y-6 sm:pt-5 sm:space-y-5\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"p-5 space-y-3 sm:space-y-5\">\n                        {message &&\n                            <div className=\"rounded-md bg-green-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n                                        <div className=\"mt-2 text-sm text-green-700\">\n                                            {message}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {error &&\n                            <div className=\"rounded-md bg-red-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                                        <div className=\"mt-2 text-sm text-red-700\">\n                                            {error}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start\">\n\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                Current Password\n                            </label>\n                            <div className=\"mt-1 sm:mt-0 sm:col-span-2 max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    required={true}\n                                    value={currentPassword}\n                                    onChange={(e) => setCurrentPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                New Password\n                            </label>\n                            <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"newPassword\"\n                                    id=\"newPassword\"\n                                    required={true}\n                                    value={newPassword}\n                                    onChange={(e) => setNewPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:pt-5\">\n                            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                Confirm Password\n                            </label>\n                            <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    id=\"confirmPassword\"\n                                    required={true}\n                                    value={confirmPassword}\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"pt-5\">\n                            <div className=\"flex justify-end\">\n                                <button\n                                    type=\"button\"\n                                    className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                    onClick={() => window.location.reload()}\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                >\n                                    Save\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect } from 'react'\n\nimport {\n    UserCircleIcon,\n} from '@heroicons/react/solid'\nimport {\n    BriefcaseIcon,\n    AcademicCapIcon,\n    LibraryIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\n\nimport api from '../../util/api'\nimport { useHistory, useParams } from 'react-router'\nimport GuidesTab from './guidesTab'\nimport ContactsTab from './contactsTab'\n\nimport AccountTab from './accountTab';\nimport ThreadsTab from './threadsTab'\nimport PostsTab from './postsTab'\nimport PasswordTab from './passwordTab'\n\nconst tabs = [\n    { name: 'Profile', href: '#', current: true },\n    { name: 'Password', href: '#', current: false },\n    { name: 'Contacts', href: '#', current: false },\n    { name: 'Guides', href: '#', current: false },\n    { name: 'Threads', href: '#', current: false },\n    { name: 'Posts', href: '#', current: false },\n]\n\nconst likedFilter = [\n    { id: 1, name: 'Guides' },\n    { id: 2, name: 'Posts' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function ProfilePage() {\n\n    const [user, setUser] = useState(null) //logged in user\n    const [viewUser, setViewUser] = useState(null) //viewing other user\n    const [tab, setTab] = useState(tabs[0])\n\n    const [profilePic, setProfilePic] = useState('')\n    //const [selected, setSelected] = useState(likedFilter[0])\n\n    const [guides, setGuides] = useState([])\n    const [threads, setThreads] = useState([])\n    const [posts, setPosts] = useState([])\n    const [editMode, setEditMode] = useState(false)\n\n    const { uid } = useParams()\n\n    useEffect(() => {\n        async function getLogged() {\n            await api.getUser()\n                .then(response => {\n                    setUser(response.data)\n                    setProfilePic(response.data.profilePicture)\n                    setEditMode(response.data.id.toString() === uid)\n                    //console.log(response.data.id === uid)\n                }).then(async () => {\n                    if (!editMode) {\n                        await api.getUser(uid)\n                            .then(response => setViewUser(response.data))\n                    }\n                })\n        }\n        getLogged()\n    }, [])\n\n    useEffect(() => {\n        async function getGuides() {\n            await api.getUserGuide(uid)\n                .then(response => {\n                    setGuides(response.data)\n                })\n                .then(() => console.log(guides))\n        }\n        getGuides()\n    }, [])\n\n    useEffect(() => {\n        async function getThreads() {\n            await api.getUserThread(uid)\n                .then(response => {\n                    setThreads(response.data)\n                })\n                .then(() => console.log(threads))\n        }\n        getThreads()\n    }, [])\n\n    useEffect(() => {\n        async function getPosts() {\n            await api.getUserPost(uid)\n                .then(response => setPosts(response.data))\n        }\n        getPosts()\n    }, [])\n\n    function resetTabState(tabName) {\n        tabs.filter((t) => t.current === true).map((t) => t.current = false)\n        const currentTab = tabs.filter((t) => t.name === tabName).map((t) => t.current = true)\n        setTab(currentTab)\n    }\n\n    function CurrentTab() {\n        const activeTab = tabs.filter((t) => t.current === true)\n        if (activeTab[0].name === 'Profile') {\n            return <AccountTab editMode={editMode} uid={uid} />;\n        } else if (activeTab[0].name === 'Contacts') {\n            return <ContactsTab editMode={editMode} user={user} />;\n        } else if (activeTab[0].name === 'Guides') {\n            return <GuidesTab guides={guides} />;\n        } else if (activeTab[0].name === 'Posts') {\n            return <PostsTab posts={posts} />;\n        } else if (activeTab[0].name === 'Threads') {\n            return <ThreadsTab threads={threads} />\n        } else {\n            return <PasswordTab user={user} />\n        }\n    }\n\n    // function LikedTab(editMode) {\n    //     return (\n    //         <div>\n    //             <Listbox value={selected} onChange={setSelected}>\n    //                 <div className=\"p-5 mt-1 relative\">\n    //                     <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n    //                         <span className=\"block truncate\">{selected.name}</span>\n    //                         <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n    //                             <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                         </span>\n    //                     </Listbox.Button>\n\n    //                     <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n    //                         <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n    //                             {likedFilter.map((filter) => (\n    //                                 <Listbox.Option\n    //                                     key={filter.id}\n    //                                     className={({ active }) =>\n    //                                         classNames(\n    //                                             active ? 'text-white bg-rose-600' : 'text-gray-900',\n    //                                             'cursor-default select-none relative py-2 pl-8 pr-4'\n    //                                         )\n    //                                     }\n    //                                     value={filter}\n    //                                 >\n    //                                     {({ selected, active }) => (\n    //                                         <>\n    //                                             <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n    //                                                 {filter.name}\n    //                                             </span>\n    //                                             {selected ? (\n    //                                                 <span\n    //                                                     className={classNames(\n    //                                                         active ? 'text-white' : 'text-rose-600',\n    //                                                         'absolute inset-y-0 left-0 flex items-center pl-1.5'\n    //                                                     )}\n    //                                                 >\n    //                                                     <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n    //                                                 </span>\n    //                                             ) : null}\n    //                                         </>\n    //                                     )}\n    //                                 </Listbox.Option>\n    //                             ))}\n    //                         </Listbox.Options>\n    //                     </Transition>\n    //                 </div>\n    //             </Listbox>\n    //             <FilterFavourites />\n    //         </div>\n    //     )\n    // }\n\n    // function FilterFavourites() {\n    //     let filtered = [];\n    //     if (selected.name === 'Guides') {\n    //         filtered = likes.filter((f) => f.type === 'Guide')\n    //     } else {\n    //         filtered = likes.filter((f) => f.type === 'Post')\n    //     }\n    //     return (\n    //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    //             <ul role=\"list\" className=\"divide-y divide-gray-200\">\n    //                 {filtered.map((f) => (\n    //                     <li key={f.id}>\n    //                         <div className=\"px-4 py-4 flex items-center sm:px-6\">\n    //                             <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n    //                                 <div className=\"truncate\">\n    //                                     <div className=\"flex text-sm\">\n    //                                         <p className=\"font-medium text-rose-600 truncate\">{f.value.title}</p>\n    //                                     </div>\n    //                                     <div className=\"mt-2 flex\">\n    //                                         <div className=\"flex items-center text-sm text-gray-500\">\n    //                                             <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-6\">\n    //                                                 {f.value.contents}\n    //                                             </dd>\n    //                                         </div>\n    //                                     </div>\n    //                                 </div>\n    //                                 <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n    //                                     {editMode\n    //                                         ? <a href=\"#\" className=\"block hover:bg-gray-50\">\n    //                                             <StarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                                         </a>\n    //                                         : null\n    //                                     }\n    //                                 </div>\n    //                             </div>\n    //                             <div className=\"ml-5 flex-shrink-0\">\n    //                                 <a href=\"#\" className=\"block hover:bg-gray-50\">\n    //                                     <ChevronRightIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                                 </a>\n    //                             </div>\n    //                         </div>\n\n    //                     </li>\n    //                 ))}\n    //             </ul>\n    //         </div>\n    //     )\n    // }\n\n    function RenderPosition() {\n        if (viewUser.accountType === 'STAFF') {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <BriefcaseIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Staff\n                    </div>\n\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <LibraryIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        {viewUser.faculty}\n                    </div>\n                </div>\n            )\n        } else if (viewUser.accountType === 'ADMIN') {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <UserCircleIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Administrator\n                    </div>\n\n                </div>\n            )\n\n        } else {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <AcademicCapIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Student\n                    </div>\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <LibraryIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        {viewUser.faculty}\n                    </div>\n                </div>\n            )\n        }\n\n\n\n    }\n\n    function RenderTabs() {\n        if (!editMode) {\n            let finalTabs = []\n            const newTabs = tabs.filter((t) => t.name !== 'Password')\n            if (viewUser.accountType === 'STUDENT') {\n                finalTabs = newTabs.filter((t) => t.name !== 'Guides')\n            } else {\n                finalTabs = newTabs\n            }\n            return (\n                <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                    {finalTabs.map((tab) => (\n                        <a\n                            key={tab.name}\n                            href={tab.href}\n                            className={classNames(\n                                tab.current\n                                    ? 'border-pink-500 text-gray-900'\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                            )}\n                            aria-current={tab.current ? 'page' : undefined}\n                            onClick={() => {\n                                resetTabState(tab.name)\n                            }}\n                        >\n                            {tab.name}\n                        </a>\n                    ))}\n                </nav>\n            )\n        } else {\n            if (user.accountType === 'STUDENT') {\n                const newTabs = tabs.filter((t) => t.name !== 'Guides')\n                return (\n                    <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        {newTabs.map((tab) => (\n                            <a\n                                key={tab.name}\n                                href={tab.href}\n                                className={classNames(\n                                    tab.current\n                                        ? 'border-pink-500 text-gray-900'\n                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                    'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                                )}\n                                aria-current={tab.current ? 'page' : undefined}\n                                onClick={() => {\n                                    resetTabState(tab.name)\n                                }}\n                            >\n                                {tab.name}\n                            </a>\n                        ))}\n                    </nav>\n                )\n            } else {\n                return (\n                    <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        {tabs.map((tab) => (\n                            <a\n                                key={tab.name}\n                                href={tab.href}\n                                className={classNames(\n                                    tab.current\n                                        ? 'border-pink-500 text-gray-900'\n                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                    'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                                )}\n                                aria-current={tab.current ? 'page' : undefined}\n                                onClick={() => {\n                                    resetTabState(tab.name)\n                                }}\n                            >\n                                {tab.name}\n                            </a>\n                        ))}\n                    </nav>\n                )\n            }\n        }\n    }\n\n    function EditMode() {\n        return (\n            user &&\n            <main className=\"lg:col-span-9 xl:col-span-9 bg-white rounded-md\">\n                <article>\n                    <div>\n                        {user.coverImage !== 'default'\n                            ? <div className=\"h-18 w-full object-cover lg:h-28 xl:h-40 rounded-md\">\n                                <img className=\"h-32 w-full object-cover lg:h-48 xl:h-56 rounded-md\" src={user.coverImage} alt=\"\" />\n                            </div>\n                            :\n                            <div className=\"h-10 w-full object-cover lg:h-28 xl:h-20 rounded-md\">\n\n                            </div>\n                        }\n                        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5\">\n                                <div className=\"flex\">\n                                    {profilePic === \"default\"\n                                        ?\n                                        <div class=\"max-w-md mx-auto my-3\">\n                                            <div class=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 shadow-md h-24 w-24 rounded-full fill-current text-white\">\n                                                <h2 style={{ fontSize: 24 }}>{user.username.substring(0, 1)}</h2>\n                                            </div>\n                                        </div>\n                                        :\n                                        <img\n                                            className=\"h-24 w-24 rounded-full sm:h-32 sm:w-32\"\n                                            src={profilePic}\n                                            alt={user.username.substring(0, 1)}\n                                        />\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                                <h2 className=\"p-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">{user.username}</h2>\n                                <RenderPosition />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mt-6 sm:mt-2 2xl:mt-5\">\n                        <div className=\"border-b border-gray-200\">\n                            <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <RenderTabs />\n                            </div>\n                        </div>\n                    </div>\n                    <CurrentTab />\n                </article>\n            </main>\n        )\n    }\n\n    function ViewMode() {\n        return (\n            viewUser &&\n            <main className=\"lg:col-span-9 xl:col-span-9 bg-white rounded-md\">\n                <article>\n                    <div>\n                        {viewUser.coverImage !== 'default'\n                            ? <div className=\"h-18 w-full object-cover lg:h-28 xl:h-40 rounded-md\">\n                                <img className=\"h-32 w-full object-cover lg:h-48 xl:h-56 rounded-md\" src={viewUser.coverImage} alt=\"\" />\n                            </div>\n                            :\n                            <div className=\"h-10 w-full object-cover lg:h-28 xl:h-20 rounded-md\">\n\n                            </div>\n                        }\n                        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5\">\n                                <div className=\"flex\">\n                                    {viewUser.profilePicture === \"default\"\n                                        ?\n                                        <div class=\"max-w-md mx-auto my-3\">\n                                            <div class=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 shadow-md hover:shadow-lg h-24 w-24 rounded-full fill-current text-white\">\n                                                <h2 style={{ fontSize: 24 }}>{viewUser.username.substring(0, 1)}</h2>\n                                            </div>\n                                        </div>\n                                        :\n                                        <img\n                                            className=\"h-24 w-24 rounded-full sm:h-32 sm:w-32\"\n                                            src={viewUser.profilePicture}\n                                            alt={viewUser.username.substring(0, 1)}\n                                        />\n                                    }\n                                </div>\n                                <div className=\"flex-1 min-w-0\">\n                                    <h2 className=\"p-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">{viewUser.username}</h2>\n                                    <RenderPosition />\n                                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                                        {\n                                            viewUser.accountStatus === 'ACTIVE'\n                                                ?\n                                                <>\n                                                    <CheckCircleIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                                    {viewUser.accountStatus}\n                                                </>\n                                                : null\n                                        }\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"mt-6 sm:mt-2 2xl:mt-5\">\n                        <div className=\"border-b border-gray-200\">\n                            <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <RenderTabs />\n                            </div>\n                        </div>\n                    </div>\n                    <CurrentTab />\n                </article>\n            </main>\n        )\n    }\n\n    return (\n        user && viewUser &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                disableButton={true}\n                disableSearch={true}\n                user={user}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    {editMode ? <EditMode /> : <ViewMode />}\n                </div>\n            </div>\n        </div>\n    )\n}","import { Link } from \"react-router-dom\"\n\nexport default function NewButton({content, path}) {\n  return (\n    <Link to={path}>\n      <button\n      className=\"ml-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n    >\n      New {content.charAt(0).toUpperCase() + content.slice(1)}\n    </button>\n    </Link>\n  )\n}","import { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon, XIcon } from '@heroicons/react/outline'\n\nexport default function ConfirmDialog({open, action=\"delete\", params=[], ...props}) {\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={() => props.setOpen(false)}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n              <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                  onClick={() => props.setOpen(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n              </div>\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                  <ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    {action.charAt(0).toUpperCase() + action.slice(1) + \" \" + props.title}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">\n                    <p className=\"text-sm text-gray-500\">\n                      Are you sure you want to {action} {props.title}?\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                  onClick={() => {\n                    props.onConfirm(...params);\n                    props.setOpen(false);\n                  }}\n                >\n                  {action.charAt(0).toUpperCase() + action.slice(1)}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:w-auto sm:text-sm\"\n                  onClick={() => props.setOpen(false)}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import { Fragment, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport TextArea from '../../components/textArea'\n\n\nexport default function EditForumModal({ forum, setForums, open, setOpen }) {\n  const [title, setTitle] = useState(forum.title)\n  const [description, setDescription] = useState(forum.description)\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (title !== '' && description !== '') {\n      editForum()\n      setOpen(false)\n      alert(\"Successfully edited forum.\")\n    }\n  }\n\n  function editForum() {\n    forum.title = title\n    forum.description = description\n    axios\n      .put(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forum.id}`, forum)\n      .then(() => {\n        axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/forums\")\n          .then((response) => setForums(response.data))\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-50 inset-0 overflow-y-auto\" onClose={() => {\n        setTitle(forum.title)\n        setDescription(forum.description)\n        setOpen(false)\n      }}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit forum\n                  </Dialog.Title>\n                  <div className=\"grid grid-cols-3 gap-6 text-left\">\n                    <div className=\"col-span-3\">\n                      <InputText\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        label=\"Title\"\n                        placeholder=\"Enter a forum title\"\n                        autoComplete=\"title\"\n                        required={true}\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-span-3\">\n                      <TextArea\n                        name=\"desc\"\n                        id=\"desc\"\n                        label=\"Description\"\n                        required={true}\n                        helpText=\"Enter a description for this forum.\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","import axios from 'axios'\nimport { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport {\n  DotsVerticalIcon,\n  PencilIcon,\n} from '@heroicons/react/solid'\nimport { TrashIcon } from '@heroicons/react/outline'\nimport ConfirmDialog from '../../components/confirmDialog'\nimport EditForumModal from './editForum'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function ForumOptions({forum, setForums}) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n\n  function deleteForum() {\n    axios.delete(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forum.id}`)\n      .then(() =>\n        axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/forums\")\n          .then((response) => setForums(response.data))\n      )\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"relative inline-block text-left z-10\">\n        <div>\n          <Menu.Button className=\"-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex px-4 py-2 text-sm'\n                    )}\n                    onClick={() => setOpenEdit(true)}\n                  >\n                    <PencilIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Edit forum</span>\n                  </button>\n                )}\n              </Menu.Item>\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex px-4 py-2 text-sm'\n                    )}\n                    onClick={() => setOpen(true)}\n                  >\n                    <TrashIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Delete forum</span>\n\n                  </button>\n                )}\n              </Menu.Item>\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"forum\"\n        item={forum}\n        open={open}\n        setOpen={setOpen}\n        onConfirm={deleteForum}\n      />\n      <EditForumModal forum={forum} setForums={setForums} open={openEdit} setOpen={setOpenEdit} />\n    </Fragment>\n\n  )\n}","import { Link, useRouteMatch } from \"react-router-dom\"\nimport ForumOptions from \"./forumOptions\"\nimport NewButton from \"../../components/newButton\"\n\nexport default function ForumList({ items, contentType, setForums, user }) {\n  const { url } = useRouteMatch()\n  return (\n    <div>\n      {!items || !items.length\n        ? (\n          <div className=\"text-center\">\n            <svg\n              className=\"mx-auto h-12 w-12 text-gray-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              aria-hidden=\"true\"\n            >\n              <path\n                vectorEffect=\"non-scaling-stroke\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n              />\n            </svg>\n            <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No {contentType}</h3>\n\n            {user.accountType === 'ADMIN' &&\n              <>\n                <p className=\"mt-1 text-sm text-gray-500\">Get started by creating a new forum.</p>\n                <div className=\"mt-6\">\n                  <NewButton content='forum' path='/create' />\n                </div>\n              </>\n            }\n          </div>\n        )\n        : (\n          <div className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\n            {items.map((item) => (\n              <div\n                key={item.id}\n                className=\"relative rounded-lg border border-gray-300 bg-white px-6 py-5 shadow-sm flex items-center space-x-3 hover:border-gray-400 focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-rose-500\"\n              >\n                <div className=\"flex-1 min-w-0\">\n                  <Link\n                    to={`${url}${url === '/' ? '' : '/'}${item.id}/threads`}\n                    className=\"focus:outline-none\">\n                    <span className=\"absolute inset-0\" aria-hidden=\"true\" />\n                    <p className=\"text-sm font-medium text-gray-900\">{item.title}</p>\n                    <p className=\"text-sm text-gray-500 truncate\">{item.description}</p>\n                  </Link>\n                </div>\n                {(user && user.accountType === \"ADMIN\") &&\n                  <div className=\"flex-shrink-0 self-center flex\">\n                    <ForumOptions\n                      forum={item}\n                      setForums={setForums} />\n                  </div>\n                }\n\n              </div>\n            )\n            )}\n          </div>\n        )\n      }\n    </div>\n  )\n}","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function SortSelectMenu({ options, sortType, setSortType }) {\n  return (\n    sortType &&\n    <Listbox value={sortType} onChange={setSortType}>\n      {({ open }) => (\n        <>\n          <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Sort by</Listbox.Label>\n          <div className=\"relative\">\n            <Listbox.Button className=\"mt-1 bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n              <span className=\"block truncate\">{sortType.name.charAt(0) + sortType.name.slice(1)}</span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                {!options.length ?\n                  <Listbox.Option\n                    key=\"No sort types\"\n                    className={({ active }) =>\n                      classNames(\n                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={null}\n                  >\n                    No categories\n                  </Listbox.Option>\n                  : options.map((person) => (\n                    <Listbox.Option\n                      key={person.id}\n                      className={({ active }) =>\n                        classNames(\n                          active ? 'text-white bg-rose-600' : 'text-gray-900',\n                          'cursor-default select-none relative py-2 pl-3 pr-9'\n                        )\n                      }\n                      value={person}\n                    >\n                      {({ selected, active }) => (\n                        <>\n                          <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                            {person.name}\n                          </span>\n\n                          {selected ? (\n                            <span\n                              className={classNames(\n                                active ? 'text-white' : 'text-rose-600',\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\n                              )}\n                            >\n                              <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </span>\n                          ) : null}\n                        </>\n                      )}\n                    </Listbox.Option>\n                  ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </>\n      )}\n    </Listbox>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport ForumList from './forumList'\nimport api from '../../util/api'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Title', sortType: 'title', reverse: true },\n]\n\nconst searchTypes = [\n    { id: 1, name: 'Title', searchType: 'title' },\n    { id: 2, name: 'Creator', searchType: 'creator'},\n]\n\nexport default function ForumsPage() {\n    const [user, setUser] = useState(null)\n    const [forums, setForums] = useState([])\n    const [error, setError] = useState(null)\n    const [sortType, setSortType] = useState(sortTypes[0])\n    const [searchString, setSearchString] = useState(\"\")\n    const [searchType, setSearchType] = useState(searchTypes[0])\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => setUser(response.data))\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    useEffect(() => {\n        api.getForums()\n            .then((response) => {\n                const sortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        title: 'title',\n                    }\n                    const searchTypes = {\n                        title: 'title',\n                        creator: 'creator',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data]\n                        .filter((forum) => {\n                            if (searchString === '') {\n                                return forum\n                            } else if (searchProperty === \"creator\") {\n                                if (forum[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                                    return forum\n                                }\n                            } else if (forum[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return forum\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setForums(sorted)\n                }\n                sortItems(sortType.sortType, searchString, searchType.searchType)\n            }\n            )\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    if (error) return `Error: ${error.message}`\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"forum\"\n                disableButton={user.accountType !== \"ADMIN\"}\n                component={<NewButton content='forum' path='/create'/>}\n                user={user}\n                searchString={searchString}\n                setSearchString={setSearchString}\n                searchTypes={searchTypes}\n                searchType={searchType}\n                setSearchType={setSearchType}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user}/>\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-10\">\n                        <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n                        <div className=\"mt-4\">\n                            <h1 className=\"sr-only\">Forums</h1>\n                            <ForumList\n                                items={forums}\n                                contentType=\"forums\"\n                                path=\"/forumDetails\"\n                                setForums={setForums}\n                                user={user}\n                            />\n                        </div>\n                    </main>\n                </div>\n            </div>\n        </div>\n\n    )\n}","import { CalendarIcon, UserIcon } from '@heroicons/react/solid'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport moment from \"moment\"\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Thread({ thread }) {\n  const { url } = useRouteMatch()\n\n  return (\n    <li key={thread.id}>\n      <Link\n        to={`${url}/${thread.id}/posts`}\n        className=\"block hover:bg-gray-50\"\n      >\n        <div className={classNames(\n          thread.pinned && \"bg-indigo-50\",\n          \"px-4 py-4 sm:px-6\")}>\n          <div className=\"flex items-center justify-between\">\n            <p className=\"text-sm font-medium truncate\">{thread.title}</p>\n            <div className=\"ml-2 flex-shrink-0 flex\">\n              <p className={classNames(\n                thread.closed ? \"bg-red-100 text-red-800\" : \"bg-green-100 text-green-800\",\n                \"px-2 inline-flex text-xs leading-5 font-semibold rounded-full\")}>\n                {thread.closed ? \"Closed\" : \"Open\"}\n              </p>\n            </div>\n          </div>\n          <div className=\"mt-2 sm:flex sm:justify-between\">\n            <div className=\"sm:flex\">\n              <p className=\"flex items-center text-sm text-gray-500\">\n                <UserIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                {thread.creator.username}\n              </p>\n              <p className=\"mt-2 flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-6\">\n                <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                {moment().subtract(moment().diff(thread.created.slice(0, -5))).calendar()}\n              </p>\n            </div>\n            <div className=\"mt-2 flex items-center text-sm text-gray-500 sm:mt-0\">\n              <p>\n                {thread.posts.length} post{thread.posts.length !== 1 && 's'}\n              </p>\n            </div>\n          </div>\n        </div>\n      </Link>\n    </li>\n  )\n}","import { useRouteMatch } from 'react-router-dom'\nimport NewButton from '../../components/newButton'\nimport Thread from '../../components/thread'\n\nexport default function ThreadList({ items }) {\n  const { url } = useRouteMatch()\n\n  return (\n    !items || !items.length\n      ? (\n        <div className=\"text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              vectorEffect=\"non-scaling-stroke\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No threads</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">Get started by creating a new thread.</p>\n          <div className=\"mt-6\">\n            <NewButton content='thread' path={`${url}/create`} />\n          </div>\n        </div>\n      )\n      : (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-t-md\">\n          <ul className=\"divide-y divide-gray-200\">\n            {items.map((thread) => (\n              <Thread thread={thread} />\n            ))}\n          </ul>\n        </div>\n      )\n  )\n}","import { Link, useRouteMatch } from 'react-router-dom'\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/solid'\n\nexport default function Breadcrumb({ pages }) {\n  const {url} = useRouteMatch()\n  return (\n    // <nav className=\"flex\" aria-label=\"Breadcrumb\">\n    //   <ol role=\"list\" className=\"flex items-center space-x-4\">\n    //     <li>\n    //       <div>\n    //         <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n    //           <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n    //           <span className=\"sr-only\">Home</span>\n    //         </Link>\n    //       </div>\n    //     </li>\n    //     {props.pages && props.pages.map((page) => (\n    //       <li key={page.name}>\n    //         <div className=\"flex items-center\">\n    //           <ChevronRightIcon className=\"flex-shrink-0 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //           <Link to={{\n    //             pathname: page.path.pathname,\n    //             state: page.path.state,\n    //           }}\n    //             className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n    //             aria-current={page.current ? 'page' : undefined}\n    //           >\n    //             {page.name}\n    //           </Link>\n    //         </div>\n    //       </li>\n    //     ))}\n    //   </ol>\n    // </nav>\n    <nav className=\"bg-white border-b border-gray-200 flex\" aria-label=\"Breadcrumb\">\n      <ol className=\"max-w-screen-xl w-full mx-auto px-4 flex space-x-4 sm:px-6 lg:px-8\">\n        <li className=\"flex\">\n          <div className=\"flex items-center\">\n            <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n              <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Home</span>\n            </Link>\n          </div>\n        </li>\n        {pages && pages.map((page) => (\n          <li key={page.name} className=\"flex\">\n            <div className=\"flex items-center\">\n              <svg\n                className=\"flex-shrink-0 w-6 h-full text-gray-200\"\n                viewBox=\"0 0 24 44\"\n                preserveAspectRatio=\"none\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden=\"true\"\n              >\n                <path d=\"M.293 0l22 22-22 22h1.414l22-22-22-22H.293z\" />\n              </svg>\n              <Link to={page.path}\n                className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n                aria-current={page.path === url ? 'page' : undefined}\n              >\n                {page.name}\n              </Link>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  )\n}\n","import { Fragment, useState, useEffect } from 'react'\n\nexport default function ThreadsPaginator({ data, component: Component, dataLimit, ...rest }) {\n  const [pages, setPages] = useState(Math.ceil(data.length / dataLimit))\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const startIndex = currentPage * dataLimit - dataLimit\n  const endIndex = startIndex + dataLimit\n\n  const goToNextPage = () => setCurrentPage((page) => page + 1)\n  const goToPreviousPage = () => setCurrentPage((page) => page - 1)\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit\n    const endIndex = startIndex + dataLimit\n    return data.slice(startIndex, endIndex)\n  }\n  useEffect(() => {\n    setPages(Math.ceil(data.length / dataLimit))\n  }, [data.length, dataLimit])\n\n  return (\n    <Fragment>\n      <div className=\"dataContainer\">\n        <Component items={getPaginatedData()} {...rest}/>\n      </div>\n      {data.length > 0 && <nav\n        className=\"bg-white shadow overflow-hidden px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:rounded-b-md sm:px-6\"\n        aria-label=\"Pagination\"\n      >\n        <div className=\"hidden sm:block\">\n          <p className=\"text-sm text-gray-700\">\n            Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{data.length > endIndex ? (endIndex) : data.length}</span> of{' '}\n            <span className=\"font-medium\">{data.length}</span> results\n          </p>\n        </div>\n        <div className=\"flex-1 flex justify-between sm:justify-end\">\n          {currentPage !== 1 &&\n            <button\n              className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n              onClick={goToPreviousPage}\n            >\n              Previous\n            </button>\n          }\n          {(currentPage !== pages && pages > 1) &&\n            <button\n              className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n              onClick={goToNextPage}\n            >\n              Next\n            </button>\n            }\n        </div>\n      </nav>}\n\n    </Fragment>\n\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { useParams, useRouteMatch } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport ThreadList from './threadList';\nimport Breadcrumb from '../../components/breadcrumb';\nimport api from '../../util/api';\nimport NewButton from '../../components/newButton';\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu';\n\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n  { id: 2, name: 'Topic', sortType: 'title', reverse: true },\n  { id: 3, name: 'Most Posts', sortType: 'posts', reverse: false },\n]\n\nexport default function ForumDetailsPage() {\n  const { id } = useParams()\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [forum, setForum] = useState(null)\n  const [error, setError] = useState(null)\n  const [threads, setThreads] = useState([])\n  const [sortType, setSortType] = useState(sortTypes[0])\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getForum(id)\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            created: 'created',\n            title: 'title',\n            posts: 'posts'\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          console.log(sortProperty)\n          const filtered = [...response.data.threads]\n            .filter((thread) => {\n              if (searchString === '') {\n                return thread\n              } else if (searchProperty === \"creator\") {\n                if (thread[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return thread\n                }\n              } else if (thread[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                return thread\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) =>\n              sortProperty === 'posts'\n                ? y['posts'].length - x['posts'].length\n                : y[sortProperty].localeCompare(x[sortProperty])\n                || y['created'].localeCompare(x['created']))\n            .sort((x, y) => y['pinned'] - x['pinned'])\n          setThreads(sorted)\n        }\n        setForum(response.data)\n        searchSortItems(sortType.sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return (error.message)\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"thread\"\n        component={<NewButton content='thread' path={`${url}/create`} />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <Breadcrumb />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          {forum &&\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n\n              <div className=\"pb-5 border-b border-gray-200\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{forum.title}</h3>\n                <p className=\"mt-2 max-w-4xl text-sm text-gray-500\">\n                  {forum.description}\n                </p>\n              </div>\n              <div className=\"mt-5\">\n              <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n              </div>\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Threads</h1>\n                <ThreadPaginator\n                  data={threads}\n                  component={ThreadList}\n                  dataLimit={8}\n                />\n              </div>\n            </main>\n          }\n\n        </div>\n      </div>\n    </div>\n  )\n}","import { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\"\nimport { XCircleIcon } from \"@heroicons/react/solid\"\n\nimport { setUserSession } from \"../../util/Common\";\nimport api from \"../../util/api\";\n\nexport default function LoginPage() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(null);\n  const history = useHistory()\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    login()\n  }\n\n  function login() {\n    api.login({\n      email: email,\n      password: password\n    })\n      //response returns userId. set to userSession\n      .then((response) => {\n        setUserSession({ userId: response.data })\n      })\n      .then(() => history.push(\"/\"))\n      .catch(error => {\n        if (!error.response) setError(new Error(\"Failed to connect to server\"))\n        else if (error.response.status === 404) setError(new Error(error.response.data.error))\n        else setError(\"Something went wrong. Please try again later.\")\n      })\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <img\n          className=\"mx-auto h-12 w-auto\"\n          src=\"https://nustart.s3.ap-southeast-1.amazonaws.com/nustartlogo.png\"\n          alt=\"Workflow\"\n        />\n        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Sign in to your account</h2>\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\n          Or{' '}\n          <Link\n            key=\"register\"\n            to=\"/register\"\n            className=\"font-medium text-rose-600 hover:text-rose-500\">\n            create an account\n          </Link>\n        </p>\n      </div>\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          {error &&\n            <div className=\"rounded-md bg-red-50 p-4\">\n              <div className=\"flex\">\n                <div className=\"flex-shrink-0\">\n                  <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"ml-3\">\n                  <h3 className=\"text-sm font-medium text-red-800\">There were errors when attempting to sign in</h3>\n                  <div className=\"mt-2 text-sm text-red-700\">\n                    {error.message}\n                  </div>\n                </div>\n              </div>\n            </div>\n          }\n          <form className=\"space-y-6\" onSubmit={handleSubmit}>\n            <div>\n              <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700\">\n                Email address\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autoComplete=\"email\"\n                  autoFocus\n                  required\n                  value={email}\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700\">\n                Password\n              </label>\n              <div className=\"mt-1\">\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autoComplete=\"current-password\"\n                  required\n                  value={password}\n                  className=\"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"submit\"\n                className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n              >\n                Sign in\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}","import { Fragment, useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, ExclamationCircleIcon, SelectorIcon, XCircleIcon } from '@heroicons/react/solid'\nimport ContactForm from '../../components/contacts/ContactForm'\nimport ContactList from '../../components/contacts/ContactList'\nimport api from '../../util/api'\nimport { setUserSession } from '../../util/Common'\n\nconst accountType = [\n    { id: 1, name: 'Student' },\n    { id: 2, name: 'Staff' },\n]\n\nconst faculties = [\n    { id: 1, name: 'Arts & Social Sciences' },\n    { id: 2, name: 'Business' },\n    { id: 3, name: 'Computing' },\n    { id: 4, name: 'Continuing and Lifelong Education' },\n    { id: 5, name: 'Dentistry' },\n    { id: 6, name: 'Design & Environment' },\n    { id: 7, name: 'Duke-NUS' },\n    { id: 8, name: 'Engineering' },\n    { id: 9, name: 'Integrative Sciences & Engineering' },\n    { id: 10, name: 'Law' },\n    { id: 11, name: 'Medicine' },\n    { id: 12, name: 'Music' },\n    { id: 13, name: 'Public Health' },\n    { id: 14, name: 'Public Policy' },\n    { id: 15, name: 'Science' },\n    { id: 16, name: 'University Scholars Program' },\n    { id: 17, name: 'Yale-NUS' },\n]\n\nconst years = [\n    { id: 1, name: '1' },\n    { id: 2, name: '2' },\n    { id: 3, name: '3' },\n    { id: 4, name: '4' },\n    { id: 5, name: '5' },\n    { id: 6, name: 'Part-time' },\n    { id: 7, name: 'Graduate' },\n    { id: 8, name: 'PhD' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function RegisterPage() {\n    const history = useHistory()\n    const [position, setPosition] = useState(accountType[0])\n    const [faculty, setFaculty] = useState(faculties[0])\n    const [year, setYear] = useState(years[0])\n    const [course, setCourse] = useState(\"\")\n    const [contactList, setContactsList] = useState({ contacts: [], currentId: 0 })\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState(null)\n    const [submitError, setSubmitError] = useState(null)\n\n    useEffect(async () => {\n        const size = await api.getContactSize()\n        setContactsList({ contacts: [], currentId: size.data + 1 })\n    }, [])\n\n    function handleEdit(id, editMode) {\n        const { contacts } = contactList;\n        const updatedContacts = contacts.map((n) => {\n            if (n.id === id) {\n                n.editMode = editMode;\n            }\n            return n;\n        });\n\n        setContactsList((oldContactList) => ({\n            currentId: oldContactList.currentId,\n            contacts: updatedContacts,\n        }));\n    } //end handleEdit\n\n    function handleDelete(id) {\n        const { contacts } = contactList;\n        const updatedContacts = contacts.filter((n) => {\n            return n.id !== id;\n        });\n\n        setContactsList((oldContactList) => ({\n            currentId: oldContactList.currentId,\n            contacts: updatedContacts,\n        }));\n\n    } //end handleDelete\n\n    function handleAddEdit(contact) {\n        const { currentId, contacts } = contactList;\n        if (contact.id === 0) {\n            //add action\n            if (contact.value.trim() === \"\") return;\n\n            contact.id = currentId + 1;\n\n            setContactsList({\n                currentId: contact.id,\n                contacts: [...contacts, contact],\n            });\n        } else {\n            //edit action\n            if (contact.value.trim() === \"\") {\n                //cancel edit\n                handleEdit(contact.id, false);\n                return;\n            } else {\n                //find the note\n                const updatedContacts = contacts.map((n) => {\n                    if (n.id === contact.id) {\n                        contact.editMode = false;\n                        return contact;\n                    } else {\n                        return n;\n                    }\n                });\n\n                setContactsList((oldContactList) => ({\n                    currentId: oldContactList.currentId,\n                    contacts: updatedContacts,\n                }));\n            }\n        }\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault()\n        if (password !== confirmPassword) {\n            setError(new Error(\"Passwords do not match.\"))\n        } else if (!password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\")) {\n            setError(new Error(\"Passwords must be minimum eight characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.\"))\n        } else {\n            register()\n        }\n    }\n\n    function register() {\n        api.register({\n            email: email,\n            password: password,\n            username: `${firstName} ${lastName}`,\n            accountType: position.id === 1 ? 'STUDENT' : 'STAFF',\n            accountStatus: position.id === 1 ? 'ACTIVE' : 'UNAPPROVED',\n            faculty: faculty.name,\n            yr: year.name,\n            course: course,\n            contacts: contactList.contacts\n        })\n            .then((response) => {\n                if (position.id === 1) setUserSession({ userId: response.data })\n            })\n            .then(() => {\n                if (position.id === 1) history.push(\"/\")\n                else if (position.id === 2) history.push(\"/pending-approval\")\n            })\n            .catch(error => {\n                if (!error.response) setSubmitError(new Error(\"Failed to connect to server\"))\n                if (error.response.status === 404) setSubmitError(new Error(\"Account already exists\"))\n                else setSubmitError(new Error(\"Something went wrong. Please try again later.\"))\n            })\n            /** new */\n            .then(() => history.push(\"/pending-approval\"))\n            .catch(error => {\n                if (error.response.accountStatus === 'UNAPPROVED') setSubmitError(new Error(\"Account is yet to be approved, please wait\"))\n            })\n            /** */\n    }\n    const { contacts } = contactList;\n\n    return (\n        <>\n            <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n                <div className=\"max-w-md w-full space-y-8\">\n                    <div>\n                        <img\n                            className=\"mx-auto h-12 w-auto\"\n                            src=\"https://nustart.s3.ap-southeast-1.amazonaws.com/nustartlogo.png\"\n                            alt=\"Workflow\"\n                        />\n                        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Register a new account</h2>\n                        <p className=\"mt-2 text-center text-sm text-gray-600\">\n                            Or{' '}\n                            <Link to=\"/login\" className=\"font-medium text-rose-600 hover:text-rose-500\">\n                                log in\n                            </Link>\n                        </p>\n                    </div>\n                    {submitError &&\n                        <div className=\"py-4\">\n                            <div className=\"rounded-md bg-red-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">There were errors when attempting to create account</h3>\n                                        <div className=\"mt-2 text-sm text-red-700\">\n                                            {submitError.message}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n                        <Listbox value={position} onChange={setPosition}>\n                            <div className=\"mt-1 relative\">\n                                <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Position</Listbox.Label>\n                                <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                    <span className=\"block truncate\">{position.name}</span>\n                                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                        <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                    </span>\n                                </Listbox.Button>\n\n                                <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                    <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                        {accountType.map((type) => (\n                                            <Listbox.Option\n                                                key={type.id}\n                                                className={({ active }) =>\n                                                    classNames(\n                                                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                        'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                    )\n                                                }\n                                                value={type}\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                            {type.name}\n                                                        </span>\n\n                                                        {selected ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    active ? 'text-white' : 'text-rose-600',\n                                                                    'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                )}\n                                                            >\n                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                            </span>\n                                                        ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                        ))}\n                                    </Listbox.Options>\n                                </Transition>\n                            </div>\n                        </Listbox>\n                        <Listbox value={faculty} onChange={setFaculty}>\n                            <div className=\"mt-1 relative\">\n                                <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Faculty</Listbox.Label>\n                                <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                    <span className=\"block truncate\">{faculty.name}</span>\n                                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                        <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                    </span>\n                                </Listbox.Button>\n\n                                <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                    <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                        {faculties.map((faculty) => (\n                                            <Listbox.Option\n                                                key={faculty.id}\n                                                className={({ active }) =>\n                                                    classNames(\n                                                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                        'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                    )\n                                                }\n                                                value={faculty}\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                            {faculty.name}\n                                                        </span>\n\n                                                        {selected ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    active ? 'text-white' : 'text-rose-600',\n                                                                    'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                )}\n                                                            >\n                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                            </span>\n                                                        ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                        ))}\n                                    </Listbox.Options>\n                                </Transition>\n                            </div>\n                        </Listbox>\n\n                        {position.id === 1\n                            ? <div>\n                                <Listbox value={year} onChange={setYear}>\n                                    <div className=\"mt-1 relative\">\n                                        <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Year</Listbox.Label>\n                                        <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                            <span className=\"block truncate\">{year.name}</span>\n                                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                            </span>\n                                        </Listbox.Button>\n\n                                        <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                            <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                                {years.map((y) => (\n                                                    <Listbox.Option\n                                                        key={y.id}\n                                                        className={({ active }) =>\n                                                            classNames(\n                                                                active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                            )\n                                                        }\n                                                        value={y}\n                                                    >\n                                                        {({ selected, active }) => (\n                                                            <>\n                                                                <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                    {y.name}\n                                                                </span>\n\n                                                                {selected ? (\n                                                                    <span\n                                                                        className={classNames(\n                                                                            active ? 'text-white' : 'text-rose-600',\n                                                                            'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                        )}\n                                                                    >\n                                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                    </span>\n                                                                ) : null}\n                                                            </>\n                                                        )}\n                                                    </Listbox.Option>\n                                                ))}\n                                            </Listbox.Options>\n                                        </Transition>\n                                    </div>\n                                </Listbox>\n\n                                <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                                <div className=\"mt-2 rounded-md shadow-sm -space-y-px\">\n                                    <div>\n                                        <label htmlFor=\"course\" className=\"sr-only\">\n                                            Course\n                                        </label>\n                                        <input\n                                            id=\"course\"\n                                            name=\"course\"\n                                            required\n                                            className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                            placeholder=\"Course\"\n                                            value={course}\n                                            onChange={(e) => setCourse(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            : null\n                        }\n\n\n                        <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\n                            <div>\n                                <label htmlFor=\"first-name\" className=\"sr-only\">\n                                    First name\n                                </label>\n                                <input\n                                    id=\"first-name\"\n                                    name=\"firstName\"\n                                    required\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                    placeholder=\"First name\"\n                                    value={firstName}\n                                    onChange={(e) => setFirstName(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"last-name\" className=\"sr-only\">\n                                    Last name\n                                </label>\n                                <input\n                                    id=\"last-name\"\n                                    name=\"lastName\"\n                                    required\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                    placeholder=\"Last name\"\n                                    value={lastName}\n                                    onChange={(e) => setLastName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-span-3 sm:col-span-2\">\n                                <div className=\"flex rounded-md shadow-sm\">\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                        placeholder='@'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    {/* <span className=\"inline-flex items-center px-3 rounded-br-md border border-l-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                        @u.nus.edu\n                                    </span> */}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"rounded-md -space-y-px\">\n                            <div>\n                                <label htmlFor=\"password\" className=\"sr-only\">\n                                    Password\n                                </label>\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                                    <input\n                                        id=\"password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        autoComplete=\"current-password\"\n                                        required\n                                        className={classNames(\n                                            !error\n                                                ? \"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                                                : \"block w-full pr-10 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n                                        )}\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    {error &&\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                                            <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <label htmlFor=\"confirm-password\" className=\"sr-only\">\n                                    Confirm password\n                                </label>\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                                    <input\n                                        id=\"confirm-password\"\n                                        name=\"confirm-password\"\n                                        type=\"password\"\n                                        autoComplete=\"password\"\n                                        required\n                                        className={classNames(\n                                            !error\n                                                ? \"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                                                : \"block w-full pr-10 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n                                        )}\n                                        placeholder=\"Confirm password\"\n                                        value={confirmPassword}\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    />\n                                    {error &&\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                                            <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n                                        </div>\n                                    }\n                                </div>\n                                {error &&\n                                    <p className=\"mt-2 text-sm text-red-600\" id=\"input-error\">\n                                        {error.message}\n                                    </p>\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\n                            <div className=\"bg-white shadow sm:rounded-lg\">\n                                <div className=\"px-4 py-5 sm:p-6\">\n                                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Add contacts</h3>\n                                    <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n                                        Optional\n                                    </span>\n                                    <br />\n                                    <div className=\"note-container\">\n                                        <ContactForm onDone={handleAddEdit} />\n                                        <br />\n                                        <ContactList\n                                            contacts={contacts}\n                                            onDelete={handleDelete}\n                                            onDone={handleAddEdit}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n                        </div>\n\n                        <div>\n                            <button\n                                type=\"submit\"\n                                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                            >\n                                Register\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}","import { Fragment, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport TextArea from '../../components/textArea'\nimport api from '../../util/api'\nimport htmlToDraft from 'html-to-draftjs'\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, ContentState, convertToRaw } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst htmlToDraftBlocks = (html) => {\n  const blocksFromHtml = htmlToDraft(html);\n  const { contentBlocks, entityMap } = blocksFromHtml;\n  const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n  const editorState = EditorState.createWithContent(contentState)\n  return editorState\n}\n\nexport default function EditPostModal({ forumId, threadId, setThread, post, open, setOpen }) {\n  // const [content, setContent] = useState(post.content)\n\n  const [editorState, setEditorState] = useState()\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (editorState.getCurrentContent().hasText()) {\n      editPost()\n      setOpen(false)\n      alert(\"Successfully edited thread.\")\n    }\n    else {\n      alert(\"Content cannot be empty\")\n    }\n  }\n\n  function editPost() {\n    post.content = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n    api.editPost(forumId, threadId, post)\n      .then((response) => {\n        setThread(response.data)\n      })\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    const editorState = htmlToDraftBlocks(post.content)\n    setEditorState(() => editorState)\n\n  }, [post.content])\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit post\n                  </Dialog.Title>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    {/* <TextArea\n                      name=\"content\"\n                      id=\"content\"\n                      label=\"Post\"\n                      required={true}\n                      autoFocus={true}\n                      value={content}\n                      onChange={(e) => setContent(e.target.value)}\n                    /> */}\n                    <div>\n                      <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                        Post\n                      </label>\n                      <div>\n                        <div style={{ border: \"1px solid black\", padding: '2px', minHeight: '400px' }}>\n                          <Editor\n                            editorState={editorState}\n                            onEditorStateChange={setEditorState}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport {\n  PencilIcon,\n  DotsVerticalIcon,\n  TrashIcon,\n} from '@heroicons/react/solid'\nimport ConfirmDialog from '../../components/confirmDialog'\nimport EditPostModal from './editPost'\nimport api from '../../util/api'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function PostOptions({ forumId, threadId, setThread, post, setPosts }) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n\n  function deletePost() {\n    api.deletePost(forumId, threadId, post.id)\n      .then((response) => {\n        setThread(response.data)\n        setPosts(response.data.posts)\n      })\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button className=\"-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpenEdit(true)\n                    }}\n                  >\n                    <PencilIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Edit post</span>\n                  </button>\n                )}\n              </Menu.Item>\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpen(true)\n                    }}\n                  >\n                    <TrashIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Delete post</span>\n                  </button>\n                )}\n              </Menu.Item>\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"post\"\n        open={open}\n        setOpen={setOpen}\n        onConfirm={deletePost}\n      />\n      <EditPostModal\n        forumId={forumId}\n        threadId={threadId}\n        setThread={setThread}\n        post={post}\n        open={openEdit}\n        setOpen={setOpenEdit}\n      />\n    </Fragment>\n\n  )\n}","import moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport {\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\nimport PostOptions from \"../../containers/ThreadDetailsPage/postOptions\"\nimport api from \"../../util/api\"\n\nexport default function Post({ user, setUser, post, forumId, threadId, setThread, setPosts }) {\n  function toggleLike() {\n    // console.log(post.id)\n    let likedPosts = user.likedPosts\n    if (likedPosts.includes(post.id)) {\n      likedPosts = [...likedPosts].filter((p) => p != post.id)\n      post.likes = post.likes - 1\n    } else {\n      likedPosts = [...likedPosts].push(post.id)\n      post.likes = post.likes + 1\n    }\n    user.likedPosts = likedPosts\n    api.editUser(user.id, user)\n      .then((response) => {\n        setUser(response.data)\n      })\n    api.editPost(forumId, threadId, post)\n      .then((response) => {\n        setThread(response.data)\n      })\n  }\n  return (\n    <li key={post.id} className=\"bg-white px-4 py-6 shadow sm:p-6 sm:rounded-lg\">\n      <article aria-labelledby={'post-title-' + post.id}>\n        <div>\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-shrink-0\">\n              {post.creator.profilePicture === \"default\"\n                ?\n                <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                  <h2 className=\"text-xs\">{post.creator.username.substring(0, 1)}</h2>\n                </div>\n                :\n                <img\n                  className=\"h-10 w-10 rounded-full\"\n                  src={post.creator.profilePicture}\n                  alt={post.creator.username.substring(0, 1)}\n                />\n              }\n            </div>\n            <div className=\"min-w-0 flex-1\">\n              <p className=\"text-sm font-medium text-gray-900\">\n                <Link to={`/profile/${post.creator.id}`} className=\"hover:underline\">\n                  {post.creator.username}\n                </Link>\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                {moment().subtract(moment().diff(post.createdAt.slice(0, -5))).calendar()}\n              </p>\n            </div>\n            {(post.creator.id === user.id || user.accountType === 'ADMIN') &&\n              <div className=\"flex-shrink-0 self-center flex\">\n                <PostOptions\n                  forumId={forumId}\n                  threadId={threadId}\n                  post={post}\n                  setThread={setThread}\n                  setPosts={setPosts}\n                />\n              </div>\n            }\n          </div>\n          <h2 id={'post-title-' + post.id} className=\"mt-4 text-base font-medium text-gray-900\">\n            <div dangerouslySetInnerHTML={{ __html: post.content }} />\n          </h2>\n        </div>\n\n        {/* <div className=\"mt-6 flex justify-between space-x-8\">\n          <div className=\"flex space-x-6\">\n            <span className=\"inline-flex items-center text-sm\">\n              <button\n                type=\"button\"\n                className=\"inline-flex space-x-2 text-gray-400 hover:text-gray-500\"\n                onClick={toggleLike}\n              >\n                <ThumbUpIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                <span className=\"font-medium text-gray-900\">{post.likes}</span>\n                <span className=\"sr-only\">likes</span>\n              </button>\n            </span>\n          </div>\n        </div> */}\n      </article>\n    </li>\n  )\n}","import moment from 'moment'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport {\n  ChatAltIcon,\n  EyeIcon,\n  PlusIcon,\n  ShareIcon,\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\n\nimport PostOptions from \"./postOptions\"\nimport Post from '../../components/post'\nexport default function PostList({ user, setUser, items, forumId, threadId, setThread, setPosts }) {\n  const { url } = useRouteMatch()\n  return (\n    !items || !items.length\n      ? (\n        <div className=\"text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              vectorEffect=\"non-scaling-stroke\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No posts</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">Get started by creating a new post.</p>\n          <div className=\"mt-6\">\n            <Link\n              to={`${url}/create`}>\n              <button\n                className=\"ml-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n              >\n                <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                New Post\n              </button>\n            </Link>\n          </div>\n        </div>\n      )\n      : (\n        <div className=\"mt-4\">\n          <h1 className=\"sr-only\">Posts</h1>\n          <ul className=\"space-y-4\">\n            {items.map((post) => (\n              <Post\n              user={user}\n              setUser={setUser}\n                forumId={forumId}\n                threadId={threadId}\n                post={post}\n                setThread={setThread}\n                setPosts={setPosts}\n              />\n            ))}\n          </ul>\n        </div>\n      )\n  )\n}","import { CalendarIcon, UserIcon } from \"@heroicons/react/solid\"\nexport default function SectionHeadDrop({ title, creator, date, open, menu, disableMenu }) {\n  return (\n    <div className=\"pb-5 border-b border-gray-200\">\n      <div className=\"sm:flex sm:justify-between sm:items-baseline\">\n        <div className=\"sm:w-0 sm:flex-1\">\n          <h1 id=\"message-heading\" className=\"text-lg font-medium text-gray-900\">\n            {title}\n          </h1>\n          <div className=\"sm:flex\">\n            <p className=\"flex items-center text-sm text-gray-500\">\n              <UserIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              {creator}\n            </p>\n            <p className=\"mt-2 flex items-center text-sm text-gray-500 sm:mt-0 sm:ml-6\">\n              <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              {date}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"mt-4 flex items-center justify-between sm:mt-0 sm:ml-6 sm:flex-shrink-0 sm:justify-start\">\n          {open\n            ? (\n              <span className=\"inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-green-100 text-green-800\">\n                Open\n              </span>\n            ) : (\n              <span className=\"inline-flex items-center px-3 py-0.5 rounded-full text-sm font-medium bg-red-100 text-red-800\">\n                Closed\n              </span>\n            )}\n          {!disableMenu && menu}\n        </div>\n      </div>\n    </div>\n  )\n}","import { Fragment, useState } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport api from '../../util/api'\n\n\nexport default function EditThreadModal({forumId, thread, setThread, open, setOpen}) {\n  const [title, setTitle] = useState(thread.title)\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (title !== '') {\n      editThread()\n      setOpen(false)\n      alert(\"Successfully edited thread.\")\n    }\n  }\n\n  function editThread() {\n    thread.title = title\n    api.editThread(forumId, thread)\n      .then((response) => {\n        setThread(response.data)\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit thread\n                  </Dialog.Title>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    <InputText\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"title\"\n                      label=\"Title\"\n                      placeholder=\"Enter a forum title\"\n                      autoComplete=\"title\"\n                      required={true}\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Create\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon, PencilIcon } from '@heroicons/react/solid'\nimport { TrashIcon } from '@heroicons/react/outline'\nimport ConfirmDialog from '../../components/confirmDialog'\nimport { useHistory } from 'react-router'\nimport EditThreadModal from './editThread'\nimport api from '../../util/api'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function ThreadOptions({ user, forumId, thread, setThread }) {\n  const history = useHistory()\n  const [action, setAction] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [error, setError] = useState(null);\n\n  function deleteThread() {\n    api.deleteThread(forumId, thread.id)\n      .then(() => history.push(`/${forumId}/threads`))\n  }\n\n  function toggleClosed(thread) {\n    thread.closed = !thread.closed\n    updateThread(thread)\n  }\n\n  function togglePinned(thread) {\n    thread.pinned = !thread.pinned\n    updateThread(thread)\n  }\n\n  function updateThread(thread) {\n    api.editThread(forumId, thread)\n      .then((response) => setThread(response.data))\n      .catch(error => setError(error))\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"ml-3 relative inline-block text-left z-50\">\n        <div>\n          <Menu.Button className=\"-my-2 p-2 rounded-full bg-white flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-rose-500\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-right px-4 py-2 text-sm'\n                    )}\n                    onClick={() => setOpenEdit(true)}\n                  >\n                    <span>Edit thread</span>\n                  </button>\n                )}\n              </Menu.Item>\n              {!thread.posts.length &&\n                <Menu.Item>\n                  {({ active }) => (\n                    <button\n                      className={classNames(\n                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                        'w-full flex justify-right px-4 py-2 text-sm'\n                      )}\n                      onClick={() => {\n                        setAction(\"delete\")\n                        setOpen(true)\n                      }}\n                    >\n                      <span>Delete thread</span>\n                    </button>\n                  )}\n                </Menu.Item>}\n              { user.accountType === 'ADMIN' &&\n                <>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                          'w-full flex justify-right px-4 py-2 text-sm'\n                        )}\n                        onClick={() => {\n                          setAction(thread.closed ? \"open\" : \"close\")\n                          setOpen(true)\n                        }}\n                      >\n                        <span>{thread.closed ? \"Open\" : \"Close\"} thread</span>\n                      </button>\n                    )}\n                  </Menu.Item>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                          'w-full flex justify-right px-4 py-2 text-sm'\n                        )}\n                        onClick={() => {\n                          togglePinned(thread)\n                        }}\n                      >\n                        <span>{thread.pinned ? \"Unpin\" : \"Pin\"} thread</span>\n                      </button>\n                    )}\n                  </Menu.Item>\n                </>}\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"thread\"\n        open={open}\n        setOpen={setOpen}\n        params={[thread]}\n        action={action}\n        onConfirm={action === \"delete\" ? deleteThread : toggleClosed}\n      />\n      <EditThreadModal open={openEdit} setOpen={setOpenEdit} forumId={forumId} thread={thread} setThread={setThread} />\n    </Fragment>\n  )\n}","import { Fragment, useEffect, useState } from 'react'\nimport { ArrowNarrowLeftIcon, ArrowNarrowRightIcon } from '@heroicons/react/solid'\n\nexport default function PostsPaginator({ data, component: Component, dataLimit, ...rest }) {\n  const [pages, setPages] = useState(1)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const goToNextPage = () => setCurrentPage((page) => page + 1)\n  const goToPreviousPage = () => setCurrentPage((page) => page - 1)\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit;\n    const endIndex = startIndex + dataLimit;\n    return data.slice(startIndex, endIndex);\n  }\n  useEffect(() => {\n    setPages(Math.ceil(data.length / dataLimit))\n  }, [data.length, dataLimit])\n\n  return (\n    <Fragment>\n      <Component items={getPaginatedData()} {...rest} />\n      {pages > 1 &&\n        <nav className=\"mt-5 border-t border-gray-200 px-4 flex items-center justify-between sm:px-0\">\n          <div className=\"-mt-px w-0 flex-1 flex\">\n            {currentPage !== 1 &&\n              <button\n                className=\"border-t-2 border-transparent pt-4 pr-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                onClick={goToPreviousPage}\n              >\n                <ArrowNarrowLeftIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                Previous\n              </button>\n            }\n          </div>\n          <div className=\"-mt-px w-0 flex-1 flex justify-end\">\n            {currentPage !== pages &&\n              <button\n                className=\"border-t-2 border-transparent pt-4 pl-1 inline-flex items-center text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300\"\n                onClick={goToNextPage}\n              >\n                Next\n                <ArrowNarrowRightIcon className=\"ml-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              </button>\n            }\n          </div>\n        </nav>}\n    </Fragment>\n\n  )\n}\n","import moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport PostList from './postList'\nimport SectionHeadDrop from '../../components/sectionHeadDrop'\nimport Breadcrumb from '../../components/breadcrumb'\nimport ThreadOptions from './threadOptions'\nimport api from '../../util/api'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'createdAt', reverse: false },\n  { id: 2, name: 'Content', sortType: 'content', reverse: true },\n]\n\nconst searchTypes = [\n  { id: 1, name: 'Content', searchType: 'content' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function ThreadDetailsPage() {\n  const { forumId, threadId } = useParams()\n  const [user, setUser] = useState(null)\n  const [forum, setForum] = useState(null)\n  const [thread, setThread] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [error, setError] = useState(null)\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n  const [sortType, setSortType] = useState(sortTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getForum(forumId)\n      .then((response) => {\n        setForum(response.data)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [forumId])\n\n  useEffect(() => {\n    api.getThread(threadId)\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            createdAt: 'createdAt',\n            content: 'content',\n          }\n          const searchTypes = {\n            creator: 'creator',\n            content: 'content',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.posts]\n            .filter((post) => {\n              if (searchString === '') {\n                return post\n              } else if (searchProperty === \"creator\") {\n                if (post[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return post\n                }\n              } else if (post[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return post\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]))\n          setPosts(sorted)\n        }\n        setThread(response.data)\n        searchSortItems(sortType.sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [threadId, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && forum && thread) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      {/* When the mobile menu is open, add `overflow-hidden` to the `body` element to prevent double scrollbars */}\n      <NavBar\n        buttonContent=\"post\"\n        disableButton={thread.closed}\n        user={user}\n        component={<NewButton content='post' path={`/${forumId}/threads/${threadId}/posts/create`} />}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType} />\n\n      <Breadcrumb pages={[\n        {\n          name: forum.title,\n          path: {\n            pathname: `/${forumId}/threads`,\n          }\n        },\n      ]} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          {thread &&\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <SectionHeadDrop\n                title={thread.title}\n                creator={thread.creator.username}\n                date={moment().subtract(moment().diff(thread.created.slice(0, -5))).calendar()}\n                open={!thread.closed}\n                disableMenu={thread.creator.id !== user.id && user.accountType !== 'ADMIN'}\n                menu={\n                  <ThreadOptions user={user} forumId={forumId} thread={thread} setThread={setThread} />\n                }\n              />\n              <div className=\"mt-5\">\n              <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n              </div>\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Posts</h1>\n                <PostPaginator\n                  data={posts}\n                  component={PostList}\n                  dataLimit={10}\n                  forumId={forumId}\n                  threadId={threadId}\n                  setThread={setThread}\n                  setPosts={setPosts}\n                  contentType=\"posts\"\n                  user={user}\n                />\n              </div>\n            </main>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","import moment from 'moment'\nimport {\n    CalendarIcon,\n    ExclamationIcon\n} from '@heroicons/react/outline'\nimport { Transition, Dialog } from '@headlessui/react'\nimport { Fragment, useState, useEffect, useRef } from 'react'\n\nexport default function UserList({ items }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {(!items || !items.length) ?\n                    <li key='No users'>\n                        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                <div className=\"truncate\">\n                                    <div className=\"flex text-sm items-center\">\n                                        <p className=\"text-xl font-medium text-rose-500 truncate\">No users</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                    : items.map((user) => (\n                        <li key={user.id}>\n                            <a href={`/profile/${user.id}`}>\n                                <div className=\"px-4 py-4 flex items-center sm:px-6 hover:bg-gray-50\">\n                                    <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                        <div className=\"truncate\">\n                                            <div className=\"flex text-sm items-center\">\n                                                <p className=\"text-xl font-medium text-rose-500 truncate\">{user.email}</p>\n                                                <p className=\"ml-3 flex-shrink-0 font-normal text-gray-500\">{user.accountType}</p>\n                                            </div>\n                                            <div className=\"mt-2 flex\">\n                                                <div className=\"flex items-center text-sm text-gray-500\">\n                                                    {user.accountStatus}\n                                                    <CalendarIcon className=\"ml-2 flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                    {moment(user.created.slice(0, -5)).format('MMMM Do YYYY [at] h:mm a')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                                            <div className=\"flex overflow-hidden -space-x-1\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"ml-5 flex items-center\">\n                                    </div>\n                                </div>\n                            </a>\n                            {/* <ConfirmationDialog /> */}\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    )\n}","import { Fragment, useState, useEffect, useRef } from 'react'\nimport { Transition, Dialog } from '@headlessui/react'\nimport moment from 'moment'\nimport {\n    CalendarIcon,\n    ExclamationIcon\n} from '@heroicons/react/outline'\nimport api from '../../util/api'\nimport UserList from './userList'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Role', sortType: 'accountType', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function AllUsersTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [open, setOpen] = useState(false)\n    const [sortType, setSortType] = useState(sortTypes[0])\n    const cancelButtonRef = useRef(null)\n\n    useEffect(() => {\n        let isMounted = true;\n        api.getUsers().then(response => {\n            const searchSortItems = (type, searchString, searchType) => {\n                const types = {\n                    created: 'created',\n                    accountType: 'accountType',\n                    accountStatus: 'accountStatus',\n                    email: 'email',\n                    username: 'username',\n                }\n                const searchTypes = {\n                    username: 'username',\n                    email: 'email',\n                }\n                const sortProperty = types[type]\n                const searchProperty = searchTypes[searchType]\n                const filtered = [...response.data]\n                    .filter((user) => {\n                        if (searchString === '') {\n                            return user\n                        } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                            return user\n                        }\n                    })\n                const sorted = [...filtered]\n                    .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                        || y['created'].localeCompare(x['created']))\n                if (isMounted) setAllUsers(sorted);    // add conditional check\n            }\n            searchSortItems(sortType.sortType, searchString, searchType.searchType)\n        })\n        return () => { isMounted = false };\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function ConfirmationDialog() {\n        return (\n            <Transition.Root show={open} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={setOpen}>\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        >\n                            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                                    <div className=\"sm:flex sm:items-start\">\n                                        <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                                            <ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                            <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                                Deactivate account\n                                            </Dialog.Title>\n                                            <div className=\"mt-2\">\n                                                <p className=\"text-sm text-gray-500\">\n                                                    Are you sure you want to deactivate your account? All of your data will be permanently removed.\n                                                    This action cannot be undone.\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                                        onClick={() => setOpen(false)}\n                                    >\n                                        Deactivate\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                                        onClick={() => setOpen(false)}\n                                        ref={cancelButtonRef}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n        )\n    }\n\n    return (\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={UserList}\n                dataLimit={5}\n            />\n\n        </div>\n    )\n}","import {\n    BanIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\n\nexport default function BlockUserList({ items, toggleBlock }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul className=\"divide-y divide-gray-200\">\n                {(!items || !items.length) ?\n                    <li key='No users to block'>\n                        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                <div className=\"truncate\">\n                                    <div className=\"flex text-sm items-center\">\n                                        <p className=\"text-xl font-medium text-rose-500 truncate\">No users to block</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                    : items.map((user) => (\n                        <li key={user.id}>\n                            <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                                <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                    <div className=\"truncate\">\n                                        <div className=\"flex text-sm items-center\">\n                                            <p className=\"text-xl font-medium text-rose-500 truncate\">{user.email}</p>\n                                            <p className=\"ml-3 flex-shrink-0 font-normal text-gray-500\">{user.accountType}</p>\n                                        </div>\n                                        <div className=\"mt-2 flex\">\n                                            <div className=\"flex items-center text-sm text-gray-500\">\n                                                {user.accountStatus}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                                        <div className=\"flex overflow-hidden -space-x-1\">\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"ml-5 flex items-center\">\n                                    {user.accountStatus === \"BLOCKED\"\n                                        ?\n                                        <button\n                                            type=\"button\"\n                                            className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-rose-500 hover:bg-rose-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                            onClick={() => {\n                                                toggleBlock(user);\n                                            }}\n                                        >\n                                            <CheckCircleIcon className=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\n                                            Unblock\n                                        </button>\n                                        :\n                                        <button\n                                            type=\"button\"\n                                            className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-rose-500 hover:bg-rose-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                            onClick={() => {\n                                                toggleBlock(user);\n                                            }}\n                                        >\n                                            <BanIcon className=\"mr-3 h-4 w-4\" aria-hidden=\"true\"\n                                            />\n                                            Block\n                                        </button>\n\n                                    }\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n            </ul>\n        </div>)\n}","import { useState, useEffect } from 'react'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\nimport api from '../../util/api'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport BlockUserList from './blockUserList'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Role', sortType: 'accountType', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function BlockTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [sortType, setSortType] = useState(sortTypes[0])\n\n    useEffect(() => {\n        api.getUsers()\n            .then(response => {\n                const searchSortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        accountType: 'accountType',\n                        accountStatus: 'accountStatus',\n                        email: 'email',\n                        username: 'username',\n                    }\n                    const searchTypes = {\n                        username: 'username',\n                        email: 'email',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\")]\n                        .filter((user) => {\n                            if (searchString === '') {\n                                return user\n                            } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return user\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setAllUsers(sorted);\n                }\n                searchSortItems(sortType.sortType, searchString, searchType.searchType)\n                // setAllUsers(users.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\"));\n            })\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function toggleBlock(user) {\n        user.accountStatus = user.accountStatus === 'BLOCKED' ? 'ACTIVE' : 'BLOCKED'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\")))\n            })\n    }\n\n    return (\n        allUsers &&\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={BlockUserList}\n                dataLimit={8}\n                toggleBlock={toggleBlock}\n            />\n        </div>\n    )\n}","import {\n    BanIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\n\n\nexport default function ApproveUserList({ items, approve, reject }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul className=\"divide-y divide-gray-200\">\n                {(!items || !items.length) ?\n                    <li key='No users to approve'>\n                        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                <div className=\"truncate\">\n                                    <div className=\"flex text-sm items-center\">\n                                        <p className=\"text-xl font-medium text-rose-500 truncate\">No users to approve</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                    : items.map((user) => (\n                        <li key={user.id}>\n                            <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                                <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                    <div className=\"truncate\">\n                                        <div className=\"flex text-sm items-center\">\n                                            <p className=\"text-xl font-medium text-rose-500 truncate\">{user.email}</p>\n                                            <p className=\"ml-3 flex-shrink-0 font-normal text-gray-500\">{user.accountType}</p>\n                                        </div>\n                                        <div className=\"mt-2 flex\">\n                                            <div className=\"flex items-center text-sm text-gray-500\">\n                                                {user.accountStatus}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                                        <div className=\"flex overflow-hidden -space-x-1\">\n\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"ml-5 flex items-center\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-rose-500 hover:bg-rose-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                        onClick={() => {\n                                            approve(user);\n                                        }}\n                                    >\n                                        <CheckCircleIcon className=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\n                                        Approve\n                                    </button>\n                                    {user.accountStatus !== 'REJECTED' &&\n                                        <button\n                                            type=\"button\"\n                                            className=\"ml-5 inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-rose-500 hover:bg-rose-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                            onClick={() => {\n                                                reject(user);\n                                            }}\n                                        >\n                                            <BanIcon className=\"mr-3 h-4 w-4\" aria-hidden=\"true\"\n                                            />\n                                            Reject\n                                        </button>}\n                                </div>\n                            </div>\n                        </li>\n                    ))}\n            </ul>\n        </div>)\n}","import { useState, useEffect } from 'react'\nimport {\n    BanIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\nimport api from '../../util/api'\nimport ApproveUserList from './approveUserList'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\n\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function ApproveTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [sortType, setSortType] = useState(sortTypes[0])\n\n    useEffect(() => {\n        api.getUsers()\n            .then(response => {\n                const searchSortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        accountStatus: 'accountStatus',\n                        email: 'email',\n                        username: 'username',\n                    }\n                    const searchTypes = {\n                        username: 'username',\n                        email: 'email',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data]\n                        .filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")\n                        .filter((user) => {\n                            if (searchString === '') {\n                                return user\n                            } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return user\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setAllUsers(sorted)\n                }\n                searchSortItems(sortType.sortType, searchString, searchType.searchType)\n                // setAllUsers(users.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\"));\n            })\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function approve(user) {\n        user.accountStatus = 'ACTIVE'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")))\n            })\n    }\n\n    function disapprove(user) {\n        user.accountStatus = 'REJECTED'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")))\n            })\n    }\n\n    return (\n        allUsers &&\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={ApproveUserList}\n                dataLimit={8}\n                approve={approve}\n                reject={disapprove}\n            />\n        </div>\n    )\n}","import { useState, useEffect } from 'react'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport api from '../../util/api'\nimport AllUsersTab from './allUsersTab'\nimport BlockTab from './BlockTab'\nimport ApproveTab from './ApproveTab'\n\nconst tabs = [\n    { name: 'All Users', href: '#', current: true },\n    { name: 'To Approve', href: '#', current: false },\n    { name: 'Block', href: '#', current: false },\n]\n\nconst searchTypes = [\n    { id: 1, name: 'Name', searchType: 'username' },\n    { id: 2, name: 'Email', searchType: 'email' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function UsersPage() {\n    const [tab, setTab] = useState(tabs[0])\n    const [user, setUser] = useState(null)\n    const [error, setError] = useState(null)\n    const [searchString, setSearchString] = useState(\"\")\n    const [searchType, setSearchType] = useState(searchTypes[0])\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => {\n                setUser(response.data)\n            })\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    function resetTabState(tabName) {\n        tabs.filter((t) => t.current === true).map((t) => t.current = false)\n        const currentTab = tabs.filter((t) => t.name === tabName).map((t) => t.current = true)\n        setTab(currentTab)\n    }\n\n    function CurrentTab() {\n        const activeTab = tabs.filter((t) => t.current === true)\n        if (activeTab[0].name === 'All Users') {\n            return <AllUsersTab searchString={searchString} searchType={searchType}/>\n        } else if (activeTab[0].name === 'To Approve') {\n            return <ApproveTab searchString={searchString} searchType={searchType}/>\n        } else if (activeTab[0].name === 'Block') {\n            return <BlockTab user={user} searchString={searchString} searchType={searchType} />\n        } else {\n            return null\n        }\n    }\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"users\"\n                disableButton={user.accountType !== \"ADMIN\"}\n                component={<NewButton content='admin' path='/users/create' />}\n                user={user}\n                searchString={searchString}\n                setSearchString={setSearchString}\n                searchTypes={searchTypes}\n                searchType={searchType}\n                setSearchType={setSearchType}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-9\">\n                        <>\n                            <div>\n                                <div className=\"sm:hidden\">\n                                    <label htmlFor=\"tabs\" className=\"sr-only\">\n                                        Select a tab\n                                    </label>\n                                    {/* Use an \"onChange\" listener to redirect the user to the selected tab URL. */}\n                                    <select\n                                        id=\"tabs\"\n                                        name=\"tabs\"\n                                        className=\"mb-5 block w-full focus:ring-rose-500 focus:border-rose-500 border-gray-300 rounded-md\"\n                                        defaultValue={tabs.find((tab) => tab.current).name}\n                                    >\n                                        {tabs.map((tab) => (\n                                            <option key={tab.name}>{tab.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"hidden sm:block\">\n                                    <nav className=\"relative z-0 rounded-lg shadow flex divide-x divide-gray-200\" aria-label=\"Tabs\">\n                                        {tabs.map((tab, tabIdx) => (\n                                            <button\n                                                key={tab.name}\n                                                // href={tab.href}\n                                                className={classNames(\n                                                    tab.current ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700',\n                                                    tabIdx === 0 ? 'rounded-l-lg' : '',\n                                                    tabIdx === tabs.length - 1 ? 'rounded-r-lg' : '',\n                                                    'group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-4 text-sm font-medium text-center hover:bg-gray-50 focus:z-10'\n                                                )}\n                                                aria-current={tab.current ? 'page' : undefined}\n                                                onClick={() => {\n                                                    resetTabState(tab.name)\n                                                }}\n                                            >\n                                                <span>{tab.name}</span>\n                                                <span\n                                                    aria-hidden=\"true\"\n                                                    className={classNames(\n                                                        tab.current ? 'bg-rose-500' : 'bg-transparent',\n                                                        'absolute inset-x-0 bottom-0 h-0.5'\n                                                    )}\n                                                />\n                                            </button>\n                                        ))}\n                                    </nav>\n                                </div>\n                            </div>\n                            <CurrentTab />\n                        </>\n                    </main>\n                </div>\n            </div>\n        </div>\n    )\n\n}","import { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function GuideCategories({ categories, selected, setSelected }) {\n  return (\n    categories.length && selected ?\n      <Listbox value={selected} onChange={setSelected}>\n        {({ open }) => (\n          <>\n            <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Category</Listbox.Label>\n            <div className=\"mt-1 relative\">\n              <Listbox.Button className=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                <span className=\"block truncate\">{selected.name}</span>\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                  <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                </span>\n              </Listbox.Button>\n\n              <Transition\n                show={open}\n                as={Fragment}\n                leave=\"transition ease-in duration-100\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                  {categories.map((category) => (\n                    <Link to={`/categories/${category.id}/guides`}>\n                      <Listbox.Option\n                        key={category.id}\n                        className={({ active }) =>\n                          classNames(\n                            active ? 'text-white bg-rose-600' : 'text-gray-900',\n                            'cursor-default select-none relative py-2 pl-3 pr-9'\n                          )\n                        }\n                        value={category}\n                      >\n                        {({ selected, active }) => (\n                          <>\n                            <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                              {category.name}\n                            </span>\n\n                            {selected ? (\n                              <span\n                                className={classNames(\n                                  active ? 'text-white' : 'text-rose-600',\n                                  'absolute inset-y-0 right-0 flex items-center pr-4'\n                                )}\n                              >\n                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              </span>\n\n                            ) : null}\n                          </>\n                        )}\n                      </Listbox.Option>\n                    </Link>\n                  ))}\n                </Listbox.Options>\n              </Transition>\n            </div>\n          </>\n        )}\n      </Listbox>\n      : <div>No categories</div>\n  )\n}\n","import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport api from '../../util/api'\nimport GuideCategories from '../../components/guideCategories'\n\nexport default function GuidesPage() {\n    const [user, setUser] = useState(null)\n    const [categories, setCategories] = useState([])\n    const [error, setError] = useState(null)\n    const [selected, setSelected] = useState(null)\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => setUser(response.data))\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    useEffect(() => {\n        api.getCategories()\n            .then((response) => {\n                setCategories(response.data)\n                setSelected(response.data[0])\n            })\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    if (error) return `Error: ${error.message}`\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"guide\"\n                disableButton={user.accountType === \"STUDENT\" || !categories.length}\n                component={<NewButton content='guide' path='/createGuide' />}\n                disableSearch={true}\n                user={user}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-10\">\n                        {categories.length && selected ?\n                            <GuideCategories categories={categories} selected={selected} setSelected={setSelected} />\n                            : <div className=\"text-center\">\n                                <svg\n                                    className=\"mx-auto h-12 w-12 text-gray-400\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                    aria-hidden=\"true\"\n                                >\n                                    <path\n                                        vectorEffect=\"non-scaling-stroke\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                                    />\n                                </svg>\n                                <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No categories</h3>\n                            </div>\n                        }\n                    </main>\n                </div>\n            </div>\n        </div>\n\n    )\n}","import { Fragment } from 'react'\nimport { Transition } from '@headlessui/react'\nimport { CheckCircleIcon } from '@heroicons/react/outline'\nimport { XIcon } from '@heroicons/react/solid'\n\nexport default function Notification({action, description='', show, setShow}) {\n  // const [show, setShow] = useState(true)\n\n  return (\n    <>\n      {/* Global notification live region, render this permanently at the end of the document */}\n      <div\n        aria-live=\"assertive\"\n        className=\"fixed inset-0 flex items-end px-4 py-6 pointer-events-none sm:p-6 sm:items-start\"\n      >\n        <div className=\"w-full flex flex-col items-center space-y-4 sm:items-end\">\n          {/* Notification panel, dynamically insert this into the live region when it needs to be displayed */}\n          <Transition\n            show={show}\n            as={Fragment}\n            enter=\"transform ease-out duration-300 transition\"\n            enterFrom=\"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n            enterTo=\"translate-y-0 opacity-100 sm:translate-x-0\"\n            leave=\"transition ease-in duration-100\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <div className=\"max-w-sm w-full bg-white shadow-lg rounded-lg pointer-events-auto ring-1 ring-black ring-opacity-5 overflow-hidden\">\n              <div className=\"p-4\">\n                <div className=\"flex items-start\">\n                  <div className=\"flex-shrink-0\">\n                    <CheckCircleIcon className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\" />\n                  </div>\n                  <div className=\"ml-3 w-0 flex-1 pt-0.5\">\n                    <p className=\"text-sm font-medium text-gray-900\">Successfully {action}!</p>\n                    <p className=\"mt-1 text-sm text-gray-500\">{description}</p>\n                  </div>\n                  <div className=\"ml-4 flex-shrink-0 flex\">\n                    <button\n                      className=\"bg-white rounded-md inline-flex text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                      onClick={() => {\n                        setShow(false)\n                      }}\n                    >\n                      <span className=\"sr-only\">Close</span>\n                      <XIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Transition>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { Fragment, useState , useEffect } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../inputText'\nimport api from '../../../util/api'\nimport htmlToDraft from 'html-to-draftjs'\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, ContentState ,convertToRaw} from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst htmlToDraftBlocks = (html) => {\n  const blocksFromHtml = htmlToDraft(html);\n  const { contentBlocks, entityMap } = blocksFromHtml;\n  const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n  const editorState = EditorState.createWithContent(contentState)\n  return editorState\n}\n\nexport default function EditGuideModal({ categoryId, guide, setGuide, open, setOpen, setNotifTitle, triggerNotification }) {\n  const [editorState, setEditorState] = useState()\n  const [title, setTitle] = useState(guide.title)\n  const [error, setError] = useState(null);\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (title !== '' && editorState.getCurrentContent().hasText()) {\n      editGuide()\n      setNotifTitle(\"saved guide\")\n      triggerNotification()\n      setOpen(false)\n      window.location.reload()\n    }\n    else if(title === ''){\n      alert(\"Title cannot be empty\")\n    }\n    else{\n      alert(\"Content cannot be empty\")\n    }\n  }\n\n  function editGuide() {\n    guide.title = title\n    guide.content = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n    api.editGuide(categoryId, guide)\n      .then((response) =>{\n        setGuide(response.data)\n      })\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    const editorState = htmlToDraftBlocks(guide.content)\n    setEditorState(() => editorState)\n  }, [guide.content])\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={() => {\n        setTitle(guide.title)\n        setOpen(false)\n      }}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit guide\n                  </Dialog.Title>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    <InputText\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"title\"\n                      label=\"Title\"\n                      placeholder=\"Enter a forum title\"\n                      autoComplete=\"title\"\n                      required={true}\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                      Guide\n                    </label>\n                    <div>\n                      <div style={{ border: \"1px solid black\", padding: '2px', minHeight: '400px' }}>\n                        <Editor\n                          editorState={editorState}\n                          onEditorStateChange={setEditorState}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport {\n  PencilIcon,\n  DotsVerticalIcon,\n  TrashIcon,\n} from '@heroicons/react/solid'\nimport ConfirmDialog from '../../confirmDialog'\nimport Notification from '../../notification'\nimport api from '../../../util/api'\nimport EditGuideModal from '../editGuideModal'\nimport { useHistory } from 'react-router'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function GuideOptions({ categoryId, guide, setGuide }) {\n  const history = useHistory()\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [show, setShow] = useState(false)\n  const [notifTitle, setNotifTitle] = useState(\"\")\n\n  function deleteGuide() {\n    api.deleteGuide(categoryId, guide.id)\n      .then(() => history.goBack())\n  }\n\n  function triggerNotification() {\n    setShow(true)\n    setTimeout(() => setShow(false), 3000)\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button className=\"-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpenEdit(true)\n                    }}\n                  >\n                    <PencilIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Edit guide</span>\n                  </button>\n                )}\n              </Menu.Item>\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpen(true)\n                    }}\n                  >\n                    <TrashIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Delete guide</span>\n                  </button>\n                )}\n              </Menu.Item>\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"guide\"\n        item={guide}\n        open={open}\n        setOpen={setOpen}\n        onConfirm={deleteGuide}\n      />\n      <EditGuideModal\n        categoryId={categoryId}\n        guide={guide}\n        setGuide={setGuide}\n        open={openEdit}\n        setOpen={setOpenEdit}\n        setNotifTitle={setNotifTitle}\n        triggerNotification={triggerNotification}\n      />\n      <Notification show={show} setShow={setShow} action={notifTitle} />\n    </Fragment>\n  )\n}","import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport {\n  PencilIcon,\n  DotsVerticalIcon,\n  TrashIcon,\n} from '@heroicons/react/solid'\nimport ConfirmDialog from '../confirmDialog'\nimport EditPostModal from '../../containers/ThreadDetailsPage/editPost'\nimport Notification from '../notification'\nimport api from '../../util/api'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CommentOptions({ guideId, setGuide, comment, setComments, edit, setEdit }) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [show, setShow] = useState(false)\n  const [notifTitle, setNotifTitle] = useState(\"\")\n\n  function deleteComment() {\n    api.deleteComment(guideId, comment.id)\n      .then((response) => {\n        setGuide(response.data)\n        setComments(response.data.comments)\n      })\n  }\n\n  function triggerNotification() {\n    setShow(true)\n    setTimeout(() => setShow(false), 3000)\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button className=\"-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setEdit(true)\n                    }}\n                  >\n                    <PencilIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Edit comment</span>\n                  </button>\n                )}\n              </Menu.Item>\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpen(true)\n                    }}\n                  >\n                    <TrashIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Delete comment</span>\n                  </button>\n                )}\n              </Menu.Item>\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"comment\"\n        open={open}\n        setOpen={setOpen}\n        onConfirm={deleteComment}\n      />\n      {/* <EditPostModal\n        forum={forum}\n        thread={thread}\n        setPosts={setPosts}\n        post={post}\n        open={openEdit}\n        setOpen={setOpenEdit}\n        setNotifTitle={setNotifTitle}\n        triggerNotification={triggerNotification}\n      /> */}\n      <Notification show={show} setShow={setShow} action={notifTitle} />\n    </Fragment>\n  )\n}","import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport CommentOptions from \"../commentOptions\"\nimport api from \"../../util/api\"\n\nexport default function Comment({ user, comment, guideId, setGuide, setComments }) {\n  const [edit, setEdit] = useState(false)\n  const [editComment, setEditComment] = useState(comment.content)\n  const [error, setError] = useState(null)\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    updateComment()\n    setEdit(false)\n  }\n\n  function updateComment() {\n    comment.content = editComment\n    // console.log(comment)\n    api.editComment(guideId, comment)\n      .then((response) => {\n        setGuide(response.data)\n        // console.log(response.data)\n        setComments(response.data.comments)\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <li key={comment.id}>\n      <div className=\"flex space-x-3\">\n        {!edit ?\n          <>\n            <div className=\"flex-shrink-0\">\n              {comment.creator.profilePicture === \"default\"\n                ?\n                <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                  <h2 className=\"text-xs\">{comment.creator.username.substring(0, 1)}</h2>\n                </div>\n                :\n                <img\n                  className=\"h-10 w-10 rounded-full\"\n                  src={comment.creator.profilePicture}\n                  alt={comment.creator.username.substring(0, 1)}\n                />\n              }\n            </div>\n            <div className=\"min-w-0 flex-1\">\n              <div>\n                <div className=\"text-sm\">\n                  <Link to={`/profile/${comment.creator.id}`} className=\"font-medium text-gray-900\">\n                    {comment.creator.username}\n                  </Link>\n                </div>\n                <div className=\"mt-1 text-sm text-gray-700\">\n                  <p>{comment.content}</p>\n                </div>\n                <div className=\"mt-2 text-sm space-x-2\">\n                  <span className=\"text-gray-500 font-medium\">{moment().subtract(moment().diff(comment.created.slice(0, -5))).calendar()}</span>{' '}\n                </div>\n              </div>\n            </div>\n          </>\n          :\n          <div className=\"min-w-0 flex-1\">\n            <form onSubmit={handleSubmit}>\n              <textarea\n                id=\"comment\"\n                name=\"comment\"\n                rows={3}\n                className=\"shadow-sm block w-full focus:ring-rose-500 focus:border-rose-500 sm:text-sm border border-gray-300 rounded-md\"\n                placeholder=\"Write a comment\"\n                required\n                value={editComment}\n                onChange={(e) => setEditComment(e.target.value)}\n              />\n              <div className=\"mt-3 flex items-center justify-end\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                  onClick={() => setEdit(false)}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"ml-5 inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        }\n\n        {(user.id === comment.creator.id || user.accountType === \"ADMIN\") &&\n          <div className=\"flex-shrink-0 self-center flex\">\n            <CommentOptions\n              edit={edit}\n              setEdit={setEdit}\n              comment={comment}\n              guideId={guideId}\n              setGuide={setGuide}\n              setComments={setComments} />\n          </div>\n        }\n      </div>\n    </li>\n  )\n}","import { useState } from \"react\"\nimport Comment from \"../comment\"\nimport api from \"../../util/api\"\n\nexport default function CommentsSection({ user, comments, guideId, setGuide, setComments }) {\n  const [comment, setComment] = useState(\"\")\n  const [error, setError] = useState(null)\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    addComment()\n    setComment(\"\")\n  }\n\n  function addComment() {\n    api.createComment(guideId, {\n      content: comment,\n      creator: user,\n    })\n      .then((response) => {\n        setGuide(response.data)\n        setComments(response.data.comments)\n      })\n      .catch((error) => setError(error))\n  }\n\n  return (\n    <section aria-labelledby=\"comments-title\" className=\"mt-8 xl:mt-10\">\n      <div className=\"bg-white shadow sm:rounded-lg sm:overflow-hidden\">\n        <div className=\"divide-y divide-gray-200\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h2 id=\"notes-title\" className=\"text-lg font-medium text-gray-900\">\n              Comments\n            </h2>\n          </div>\n          <div className=\"px-4 py-6 sm:px-6\">\n            <ul className=\"space-y-8\">\n              {!comments.length ?\n                <li key=\"No comments\">\n                  <div className=\"flex space-x-3\">\n                    <div>\n                      <div className=\"text-sm\">\n                        No comments\n                      </div>\n                    </div>\n                  </div>\n                </li>\n                : comments.map((comment) => (\n                  <Comment\n                    user={user}\n                    comment={comment}\n                    guideId={guideId}\n                    setGuide={setGuide}\n                    setComments={setComments} />\n                ))}\n            </ul>\n          </div>\n\n        </div>\n        <div className=\"bg-gray-50 px-4 py-6 sm:px-6\">\n          <div className=\"flex space-x-3\">\n            <div className=\"min-w-0 flex-1\">\n              <form onSubmit={handleSubmit}>\n                <div>\n                  <label htmlFor=\"comment\" className=\"sr-only\">\n                    Comments\n                  </label>\n                  <textarea\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows={3}\n                    className=\"shadow-sm block w-full focus:ring-rose-500 focus:border-rose-500 sm:text-sm border border-gray-300 rounded-md\"\n                    placeholder=\"Write a comment\"\n                    required\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                  />\n                </div>\n                <div className=\"mt-3 flex items-center justify-end\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                  >\n                    Comment\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}","import moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport GuideOptions from '../../components/Guides/guideOptions';\nimport {\n  CalendarIcon,\n  ChatAltIcon,\n} from '@heroicons/react/solid'\n\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\n\nimport api from '../../util/api';\nimport CommentsSection from '../../components/commentsSection';\n\nexport default function GuideDetailsPage() {\n  const { categoryId, guideId } = useParams()\n  const [user, setUser] = useState(null)\n  const [category, setCategory] = useState(null)\n  const [guide, setGuide] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [comments, setComments] = useState([])\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getGuide(guideId)\n      .then(response => {\n        setGuide(response.data)\n        setTitle(response.data.title)\n        setContent(response.data.content)\n        setComments(response.data.comments)\n      })\n      .catch((error) => setError(error))\n  }, [guideId])\n\n  useEffect(() => {\n    api.getCategory(categoryId)\n      .then(response => {\n        setCategory(response.data)\n      })\n      .catch((error) => setError(error))\n  }, [categoryId])\n\n  return (\n    (user && guide && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"py-8 xl:py-10\">\n              <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 xl:max-w-5xl xl:grid xl:grid-cols-3\">\n                <div className=\"xl:col-span-2 xl:pr-8 xl:border-r xl:border-gray-200\">\n                  <div>\n                    <div>\n                      <div className=\"md:flex md:items-center md:justify-between md:space-x-4 xl:border-b xl:pb-6\">\n                        <div>\n                          <h1 className=\"text-2xl font-bold text-gray-900\">{title}</h1>\n                          <p className=\"mt-2 text-sm text-gray-500\">\n                            By\n                            <Link to={`/profile/${guide.creator.id}`} className=\"font-medium text-gray-900\" >\n                              {' ' + guide.creator.username}\n                            </Link>\n                          </p>\n                        </div>\n                        <div className=\"mt-4 flex space-x-3 md:mt-0\">\n                          {(guide.creator.id === user.id || user.accountType === \"ADMIN\") &&\n                            <GuideOptions\n                              categoryId={categoryId}\n                              setCategory={setCategory}\n                              guide={guide}\n                              setGuide={setGuide}\n                            />}\n                        </div>\n                      </div>\n                      <aside className=\"mt-8 xl:hidden\">\n                        <h2 className=\"sr-only\">Details</h2>\n                        <div className=\"space-y-5\">\n                          <div className=\"flex items-center space-x-2\">\n                            <ChatAltIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <span className=\"text-gray-900 text-sm font-medium\">{guide.comments.length} comments</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <CalendarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <span className=\"text-gray-900 text-sm font-medium\">\n                              Created on {moment(guide.dateCreated.slice(0, -5)).format(\"MMM Do, YYYY\")}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"mt-6 border-t border-b border-gray-200 py-6 space-y-8\">\n                          <div>\n                            <h2 className=\"text-sm font-medium text-gray-500\">Category</h2>\n                            <ul className=\"mt-2 leading-8\">\n                              <li className=\"inline\">\n                                <Link\n                                  to={`/categories/${categoryId}/guides`}\n                                  className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5\">\n                                  <div className=\"absolute flex-shrink-0 flex items-center justify-center\">\n                                    <span className=\"h-1.5 w-1.5 rounded-full bg-rose-500\" aria-hidden=\"true\" />\n                                  </div>\n                                  <div className=\"ml-3.5 text-sm font-medium text-gray-900\">{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</div>\n                                </Link>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </aside>\n                      <img\n                        src={guide.pictureUrl}\n                        alt=\"\"\n                      />\n                      <div className=\"py-3 xl:pt-6 xl:pb-0\">\n                        <h2 className=\"sr-only\">Content</h2>\n                        <div className=\"prose max-w-none\">\n                          <div dangerouslySetInnerHTML={{ __html: content }} />\n                        </div>\n                      </div>\n\n                      <CommentsSection\n                        user={user}\n                        comments={comments}\n                        guideId={guideId}\n                        setGuide={setGuide}\n                        setComments={setComments} />\n                    </div>\n                  </div>\n                </div>\n                <aside className=\"hidden xl:block xl:pl-8\">\n                  <h2 className=\"sr-only\">Details</h2>\n                  <div className=\"space-y-5\">\n                    <div className=\"flex items-center space-x-2\">\n                      <ChatAltIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      <span className=\"text-gray-900 text-sm font-medium\">{guide.comments.length} comments</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <CalendarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      <span className=\"text-gray-900 text-sm font-medium\">\n                        Created on {moment(guide.dateCreated.slice(0, -5)).format(\"MMM D, YYYY\")}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"mt-6 border-t border-gray-200 py-6 space-y-8\">\n                    <div>\n                      <h2 className=\"text-sm font-medium text-gray-500\">Category</h2>\n                      <ul className=\"mt-2 leading-8\">\n                        <li className=\"inline\">\n                          <Link\n                            to={`/categories/${categoryId}/guides`}\n                            className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5\">\n                            <div className=\"absolute flex-shrink-0 flex items-center justify-center\">\n                              <span className=\"h-1.5 w-1.5 rounded-full bg-rose-500\" aria-hidden=\"true\" />\n                            </div>\n                            <div className=\"ml-3.5 text-sm font-medium text-gray-900\">{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</div>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </aside>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","/* This example requires Tailwind CSS v2.0+ */\nimport { Fragment } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CatSelectMenu({ options, category, setCategory }) {\n  return (\n    category &&\n    <Listbox value={category} onChange={setCategory}>\n      {({ open }) => (\n        <>\n          <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Category</Listbox.Label>\n          <div className=\"relative\">\n            <Listbox.Button className=\"mt-1 bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n              <span className=\"block truncate\">{category.name.charAt(0) + category.name.slice(1)}</span>\n              <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n              </span>\n            </Listbox.Button>\n\n            <Transition\n              show={open}\n              as={Fragment}\n              leave=\"transition ease-in duration-100\"\n              leaveFrom=\"opacity-100\"\n              leaveTo=\"opacity-0\"\n            >\n              <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                {!options.length ?\n                  <Listbox.Option\n                    key=\"No categories\"\n                    className={({ active }) =>\n                      classNames(\n                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                        'cursor-default select-none relative py-2 pl-3 pr-9'\n                      )\n                    }\n                    value={null}\n                  >\n                    No categories\n                  </Listbox.Option>\n                  : options.map((person) => (\n                    <Listbox.Option\n                      key={person.id}\n                      className={({ active }) =>\n                        classNames(\n                          active ? 'text-white bg-rose-600' : 'text-gray-900',\n                          'cursor-default select-none relative py-2 pl-3 pr-9'\n                        )\n                      }\n                      value={person}\n                    >\n                      {({ selected, active }) => (\n                        <>\n                          <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                            {person.name}\n                          </span>\n\n                          {selected ? (\n                            <span\n                              className={classNames(\n                                active ? 'text-white' : 'text-rose-600',\n                                'absolute inset-y-0 right-0 flex items-center pr-4'\n                              )}\n                            >\n                              <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </span>\n                          ) : null}\n                        </>\n                      )}\n                    </Listbox.Option>\n                  ))}\n              </Listbox.Options>\n            </Transition>\n          </div>\n        </>\n      )}\n    </Listbox>\n  )\n}\n","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { uploadFile } from 'react-s3';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport api from '../../util/api';\nimport CatSelectMenu from '../../components/catSelectMenu';\nimport UploadImage from '../../components/uploadImage';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, convertToRaw } from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport draftToHtml from 'draftjs-to-html';\n\nconst S3_BUCKET = 'nustart';\nconst REGION = 'ap-southeast-1';\nconst ACCESS_KEY = 'AKIARTYBCSQYJNUGQWLJ';\nconst SECRET_ACCESS_KEY = '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';\n\nconst config = {\n  bucketName: S3_BUCKET,\n  region: REGION,\n  accessKeyId: ACCESS_KEY,\n  secretAccessKey: SECRET_ACCESS_KEY,\n}\n\nexport default function AddGuidePage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [category, setCategory] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [title, setTitle] = useState(\"\")\n  const [error, setError] = useState(null);\n  const [selectedFile, setSelectedFile] = useState(null)\n  // const [files, setFiles] = useState([]);\n  const [editorState, setEditorState] = useState(() =>\n    EditorState.createEmpty()\n  );\n\n  const handleFileInput = (e) => {\n    setSelectedFile(e.target.files[0])\n    // setFiles([(prev) => prev].push(e.target.files[0]))\n  }\n\n  const handleUpload = async (file) => {\n    uploadFile(file, config)\n      .then(data => {\n        createGuide(data.location)\n      })\n      .catch(error => setError(error))\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (selectedFile === null) createGuide()\n    else handleUpload(selectedFile)\n    alert(\"Successfully created guide.\")\n  }\n\n  function createGuide(picLocation = \"\") {\n    api.createGuide(category.id, {\n      title: title,\n      content: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n      creator: user,\n      pictureUrl: picLocation,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then(response => {\n        setCategories(response.data)\n        setCategory(response.data[0])\n      })\n      .catch((error) => setError(error))\n  }, [])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New guide</h3>\n                    </div>\n\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3 sm:col-span-1\">\n                        <CatSelectMenu options={categories} category={category} setCategory={setCategory} />\n                      </div>\n                      <div className=\"col-span-3\">\n                        <div>\n                          <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                            Body\n                          </label>\n                          <div className=\"mt-1\">\n                          <div className=\"shadow block w-full sm:text-sm rounded-md\"\n                              style={{ padding: '10px', minHeight: '400px' }}\n                            >\n                              <Editor\n                                editorState={editorState}\n                                onEditorStateChange={setEditorState}\n                              />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-span-3\">\n                        <label className=\"block text-sm font-medium text-gray-700\">Cover photo</label>\n                        {!selectedFile ?\n                          <div >\n                            <UploadImage handleFileInput={handleFileInput} accept=\".jpg, .png, .gif\" />\n                          </div>\n                          : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                            {selectedFile.name}\n                            <button className=\"text-gray-700\" onClick={() => setSelectedFile(null)}>\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                    <button\n                      type=\"submit\"\n                      className=\"bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n\n    </div>\n  )\n}","import { Fragment, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport api from '../../util/api'\n\n\nexport default function EditCategoryModal({ item, open, setOpen }) {\n    const [title, setTitle] = useState(item.title)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        api.getCategory(item.id)\n            .then(response => {\n                setTitle(response.data.name)\n            })\n    }, [item])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        if (title !== '') {\n            editCategory()\n            setOpen(false)\n            alert(\"Successfully edited category.\")\n        }\n    }\n\n    function editCategory() {\n        item.name = title\n        api.editCategory(item.id, item)\n    }\n\n    return (\n        <Transition.Root show={open} as={Fragment}>\n            <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                    </Transition.Child>\n\n                    {/* This element is to trick the browser into centering the modal contents. */}\n                    {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    >\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                                <div className=\"mt-3 text-center sm:mt-5\">\n                                    <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                        Edit category\n                                    </Dialog.Title>\n                                    <div className=\"mt-2 gap-6 text-left\">\n                                        <InputText\n                                            type=\"text\"\n                                            name=\"title\"\n                                            id=\"title\"\n                                            label=\"Title\"\n                                            autoComplete=\"title\"\n                                            required={true}\n                                            value={title}\n                                            onChange={(e) => setTitle(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"mt-5 sm:mt-6\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                                    >\n                                        Done\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </Transition.Child>\n                </div>\n            </Dialog>\n        </Transition.Root>\n    )\n}","import { Fragment } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport { ExclamationIcon, XIcon } from '@heroicons/react/outline'\n\nexport default function DeleteConfirm({action=\"delete\", cat, ...props}) {\n  return (\n    <Transition.Root show={props.open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={props.setOpen}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span>\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6\">\n              <div className=\"hidden sm:block absolute top-0 right-0 pt-4 pr-4\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white rounded-md text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                  onClick={() => props.setOpen(false)}\n                >\n                  <span className=\"sr-only\">Close</span>\n                  <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n              </div>\n              <div className=\"sm:flex sm:items-start\">\n                <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                  <ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />\n                </div>\n                <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    {`${action.charAt(0).toUpperCase() + action.slice(1)} ${props.title}`}\n                  </Dialog.Title>\n                  <div className=\"mt-2\">\n                    <p className=\"text-sm text-gray-500\">\n                      Are you sure you want to {action} {props.title}?\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n                <button\n                  type=\"button\"\n                  className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                  onClick={() => {\n                    props.onConfirm(cat.id);\n                    props.setOpen(false);\n                  }}\n                >\n                  {action.charAt(0).toUpperCase() + action.slice(1)}\n                </button>\n                <button\n                  type=\"button\"\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:w-auto sm:text-sm\"\n                  onClick={() => {\n                    props.setOpen(false)\n                  }}\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}\n","import moment from \"moment\";\nimport { Fragment, useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport EditCategoryModal from \"../../containers/CategoriesPage/editCategory\";\nimport api from \"../../util/api\";\nimport DeleteConfirm from \"../deleteConfirm\";\n\nexport default function CategoriesTable({ items, setSearchString, dataLimit }) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [deleteCat, setDeleteCat] = useState(null)\n  const [editCat, setEditCat] = useState(null)\n\n  const [error, setError] = useState(null);\n  const [pages, setPages] = useState(Math.ceil(items.length / dataLimit))\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const startIndex = currentPage * dataLimit - dataLimit\n  const endIndex = startIndex + dataLimit\n\n  const goToNextPage = () => setCurrentPage((page) => page + 1)\n  const goToPreviousPage = () => setCurrentPage((page) => page - 1)\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit\n    const endIndex = startIndex + dataLimit\n    return items.slice(startIndex, endIndex)\n  }\n\n  function deleteCategory(categoryId) {\n    api.deleteCategory(categoryId)\n      .then(() => window.location.reload())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    setPages(Math.ceil(items.length / dataLimit))\n  }, [items.length, dataLimit])\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            {!items || !items.length\n              ? (\n                <div className=\"text-center\">\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No categories</h3>\n                </div>\n              )\n              : (\n                <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Name\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Guides\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Created\n                        </th>\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\n                          <span className=\"sr-only\">Options</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {getPaginatedData().map((item, itemIdx) => (\n                        <tr key={item.id} className={itemIdx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            <Link to={`/profile/${item.id}`} className=\"hover:underline\">\n                              {item.name}\n                            </Link>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.guides.length}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {moment(item.created.slice(0, -5)).format(\"MMMM Do YYYY [at] h:mm a\")}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button\n                              className=\"text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setEditCat(item)\n                                setOpenEdit(true)\n                              }}>\n                              Edit\n                            </button>\n                            <button\n                              className=\"ml-5 text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setDeleteCat(item)\n                                setOpen(true)\n                              }}>\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50\">\n                      <tr>\n                        <td colSpan=\"6\">\n                          <nav\n                            className=\"overflow-hidden px-4 py-3 flex items-center justify-between sm:px-6\"\n                            aria-label=\"Pagination\"\n                          >\n                            <div className=\"hidden sm:block\">\n                              <p className=\"text-sm text-gray-700\">\n                                Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{items.length > endIndex ? (endIndex) : items.length}</span> of{' '}\n                                <span className=\"font-medium\">{items.length}</span> results\n                              </p>\n                            </div>\n                            <div className=\"flex-1 flex justify-between sm:justify-end\">\n                              {currentPage !== 1 &&\n                                <button\n                                  className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToPreviousPage}\n                                >\n                                  Previous\n                                </button>\n                              }\n                              {(currentPage !== pages && pages > 1) &&\n                                <button\n                                  className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToNextPage}\n                                >\n                                  Next\n                                </button>\n                              }\n                            </div>\n                          </nav>\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n      {deleteCat &&\n        <DeleteConfirm\n          title=\"category\"\n          open={open}\n          setOpen={setOpen}\n          cat={deleteCat}\n          onConfirm={deleteCategory}\n        />\n      }\n      {editCat &&\n        <EditCategoryModal\n          item={editCat}\n          open={openEdit}\n          setOpen={setOpenEdit}\n        />\n      }\n    </Fragment>\n  )\n}","import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport api from '../../util/api'\nimport CategoriesTable from '../../components/categoriesTable'\nimport NewButton from '../../components/newButton'\nimport { useRouteMatch } from 'react-router'\n\nconst tabs = [\n  { name: 'Recent', href: '#', current: true },\n  { name: 'Most Liked', href: '#', current: false },\n  { name: 'Most Answers', href: '#', current: false },\n]\nconst searchTypes = [\n  { id: 1, name: 'Name', searchType: 'name' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CategoriesPage() {\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [open, setOpen] = useState(true)\n  const [error, setError] = useState(null)\n  const [sortType, setSortType] = useState('created')\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            created: 'created',\n            name: 'name',\n          }\n          const searchTypes = {\n            name: 'name',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data]\n            .filter((user) => {\n              if (searchString === '') {\n                return user\n              } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                return user\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]))\n          setCategories(sorted)\n        }\n        searchSortItems(sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    user &&\n      <div className=\"relative min-h-screen bg-gray-100\">\n        <NavBar\n          buttonContent=\"forum\"\n          disableButton={user.accountType !== \"ADMIN\"}\n          component={\n            <NewButton content='category' path={`${url}/create`} />\n          }\n          user={user}\n          searchString={searchString}\n          setSearchString={setSearchString}\n          searchTypes={searchTypes}\n          searchType={searchType}\n          setSearchType={setSearchType}\n        />\n        <div className=\"py-10\">\n          <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n            <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n              <SideBar user={user} />\n            </div>\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Categories</h1>\n                <CategoriesTable items={categories} dataLimit={10} />\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n  )\n}","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport api from '../../util/api';\n\nexport default function AddCategoryPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [name, setName] = useState(\"\")\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createCategory()\n    alert(\"Successfully created category.\")\n  }\n\n  function createCategory() {\n    api.createCategory({\n      name: name,\n      guides: [],\n      creator: user,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user}/>\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user}/>\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Category</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                      </div>\n        \n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { Link, useRouteMatch } from 'react-router-dom'\nimport moment from 'moment'\nimport {\n  ChatAltIcon,\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Guide({ id, title, creator, created, guide }) {\n  const { url } = useRouteMatch()\n  return (\n    <Link to={`${url}/${id}`}>\n      <article aria-labelledby={'guide-title-' + id}>\n        <div className=\"flex\">\n          {guide.pictureUrl !== \"\" &&\n            <div className=\"mr-5 flex-1\">\n              <img\n                src={guide.pictureUrl}\n                alt=\"\"\n                className={classNames(\n                  guide.current ? '' : 'group-hover:opacity-75',\n                  'object-cover pointer-events-none'\n                )}\n              />\n            </div>}\n          <div className=\"flex-1\">\n            <div className=\"flex space-x-3\">\n              <div className=\"flex-shrink-0\">\n                {guide.creator.profilePicture === \"default\"\n                  ?\n                  <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                    <h2 className=\"text-xs\">{guide.creator.username.substring(0, 1)}</h2>\n                  </div>\n                  :\n                  <img\n                    className=\"h-10 w-10 rounded-full\"\n                    src={guide.creator.profilePicture}\n                    alt={guide.creator.username.substring(0, 1)}\n                  />\n                }\n              </div>\n              <div className=\"min-w-0 flex-1\">\n                <p className=\"text-sm font-medium text-gray-900\">\n                  <Link to={`/profile/${creator.id}`} className=\"hover:underline\">\n                    {creator.username}\n                  </Link>\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  <p className=\"hover:underline\">\n                    {moment().subtract(moment().diff(created.slice(0, -5))).calendar()}\n                  </p>\n                </p>\n              </div>\n            </div>\n            <h2 id={'guide-title-' + id} className=\"mt-4 text-base font-medium text-gray-900\">\n              {title}\n            </h2>\n          </div>\n        </div>\n        <div className=\"mt-6 flex justify-between space-x-8\">\n          <div className=\"flex space-x-6\">\n            <span className=\"inline-flex items-center text-sm\">\n              <button type=\"button\" className=\"inline-flex space-x-2 text-gray-400 hover:text-gray-500\">\n                <ChatAltIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                <span className=\"font-medium text-gray-900\">{guide.comments.length}</span>\n                <span className=\"sr-only\">comments</span>\n              </button>\n            </span>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}","import { Link } from 'react-router-dom'\nimport {\n  PlusIcon,\n} from '@heroicons/react/solid'\nimport Guide from '../guide'\n\nexport default function GuideList({ user, items, setGuides }) {\n  return (\n    !items || !items.length\n      ? (\n        <div className=\"text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              vectorEffect=\"non-scaling-stroke\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No guides</h3>\n          {user.accountType !== \"STUDENT\" &&\n            <>\n              <p className=\"mt-1 text-sm text-gray-500\">Get started by creating a new guide.</p>\n              <div className=\"mt-6\">\n                <Link\n                  to={`/createGuide`}>\n                  <button\n                    className=\"ml-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                  >\n                    <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                    New Guide\n                  </button>\n                </Link>\n              </div>\n            </>\n          }\n        </div>\n      )\n      : (\n        <div className=\"mt-4\">\n          <h1 className=\"sr-only\">Guides</h1>\n          <ul className=\"space-y-4\">\n            {items.map((guide) => (\n              <li key={guide.id} className=\"bg-white px-4 py-6 shadow sm:p-6 sm:rounded-lg\">\n                <Guide\n                  user={user}\n                  id={guide.id}\n                  title={guide.title}\n                  content={guide.content}\n                  creator={guide.creator}\n                  created={guide.dateCreated}\n                  setGuides={setGuides}\n                  guide={guide}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )\n  )\n}","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport GuideList from '../../components/Guides/guideList'\nimport api from '../../util/api'\nimport GuideCategories from '../../components/guideCategories'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'dateCreated', reverse: false },\n  { id: 2, name: 'Title', sortType: 'title', reverse: true },\n]\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function GuidesListPage() {\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [guides, setGuides] = useState([])\n  const [category, setCategory] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [error, setError] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [sortType, setSortType] = useState(sortTypes[0])\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        setCategories(response.data)\n        setSelected(response.data.find((cat) => cat.id == id))\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  useEffect(() => {\n    api.getCategory(id)\n      .then((response) => {\n        const sortItems = (type, searchString, searchType) => {\n          const types = {\n            dateCreated: 'dateCreated',\n            title: 'title',\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.guides]\n            .filter((guide) => {\n              if (searchString === '') {\n                return guide\n              } else if (searchProperty === \"creator\") {\n                if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return guide\n                }\n              } else if (guide[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return guide\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n              || y['dateCreated'].localeCompare(x['dateCreated']))\n          setGuides(sorted)\n        }\n        sortItems(sortType.sortType, searchString, searchType.searchType)\n        setCategory(response.data)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"guide\"\n        disableButton={user.accountType === \"STUDENT\"}\n        component={<NewButton content='guide' path=\"/createGuide\" />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"px-4 sm:px-0 flex\">\n              {(categories.length && selected) &&\n                <>\n                  <div className=\"mr-20 flex-1\">\n                    <GuideCategories categories={categories} selected={selected} setSelected={setSelected} />\n                  </div>\n                  <div className=\"flex-1\">\n                    <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n                  </div>\n                </>\n              }\n            </div>\n            <div className=\"mt-4\">\n              <h1 className=\"sr-only\">Guides</h1>\n              <PostPaginator\n                data={guides}\n                component={GuideList}\n                dataLimit={10}\n                setGuides={setGuides}\n                user={user}\n              />\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n\n  )\n}","import { ExclamationCircleIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function InputTextError(\n  {\n    placeholder = \"\",\n    required = false,\n    autoFocus = false,\n    ...props\n  }\n) {\n  return (\n    <div>\n      <label htmlFor=\"input\" className=\"block text-sm font-medium text-gray-700\">\n        {props.label}\n      </label>\n      <div className=\"mt-1 relative rounded-md shadow-sm\">\n        <input\n          type={props.type}\n          name={props.name}\n          id={props.id}\n          className={classNames(\n            !props.error\n              ? \"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n              : \"block w-full pr-10 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n          )}\n          placeholder={placeholder}\n          autoComplete={props.autoComplete}\n          autoFocus={autoFocus}\n          required={required}\n          aria-invalid=\"true\"\n          aria-describedby=\"input-error\"\n          value={props.value}\n          onChange={props.onChange}\n        />\n        {props.error &&\n          <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n            <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n          </div>\n        }\n      </div>\n      {props.error &&\n        <p className=\"mt-2 text-sm text-red-600\" id=\"input-error\">\n          {props.error.message}\n        </p>\n      }\n    </div>\n  )\n}","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { XCircleIcon } from '@heroicons/react/solid';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport InputTextError from '../../components/inputTextError';\nimport api from '../../util/api';\n\nexport default function AddAdminPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [username, setUsername] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\n  const [error, setError] = useState(null)\n  const [submitError, setSubmitError] = useState(null)\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (password !== confirmPassword) {\n      setError(new Error(\"Passwords do not match.\"))\n    } else if (!password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\")) {\n      setError(new Error(\"Passwords must be minimum eight characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.\"))\n    } else {\n      createAdmin()\n    }\n  }\n\n  function createAdmin() {\n    api.register({\n      email: email,\n      password: password,\n      username: username,\n      accountType: 'ADMIN',\n      accountStatus: 'ACTIVE',\n      course: 'default',\n      coverImage: 'default',\n      faculty: 'default',\n      yr: 'default',\n    })\n      .then(() => history.goBack())\n      .catch(error => {\n        if (!error.response) setSubmitError(new Error(\"Failed to connect to server\"))\n        if (error.response.status === 404) setSubmitError(new Error(\"Account already exists\"))\n        else setSubmitError(new Error(\"Something went wrong. Please try again later.\"))\n      })\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Admin</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      {submitError &&\n                        <div className=\"py-4 col-span-3\">\n                          <div className=\"rounded-md bg-red-50 p-4\">\n                            <div className=\"flex\">\n                              <div className=\"flex-shrink-0\">\n                                <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                              </div>\n                              <div className=\"ml-3\">\n                                <h3 className=\"text-sm font-medium text-red-800\">There were errors when attempting to create account</h3>\n                                <div className=\"mt-2 text-sm text-red-700\">\n                                  {submitError.message}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      }\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          label=\"Username\"\n                          id=\"username\"\n                          name=\"username\"\n                          type=\"text\"\n                          autoComplete=\"username\"\n                          value={username}\n                          autoFocus={true}\n                          required={true}\n                          onChange={e => setUsername(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          label=\"Email address\"\n                          id=\"email\"\n                          name=\"email\"\n                          type=\"email\"\n                          value={email}\n                          autoComplete=\"email\"\n                          required={true}\n                          onChange={e => setEmail(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputTextError\n                          label=\"Password\"\n                          id=\"password\"\n                          name=\"password\"\n                          type=\"password\"\n                          autoComplete=\"current-password\"\n                          required={true}\n                          value={password}\n                          onChange={e => setPassword(e.target.value)}\n                          error={error}\n                        />\n                      </div>\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputTextError\n                          label=\"Confirm password\"\n                          id=\"confirmPassword\"\n                          name=\"confirmPassword\"\n                          type=\"password\"\n                          autoComplete=\"current-password\"\n                          required={true}\n                          value={confirmPassword}\n                          onChange={e => setConfirmPassword(e.target.value)}\n                          error={error}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useHistory } from \"react-router\"\n\nexport default function PendingApprovalPage() {\n  const history = useHistory()\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\n        <img\n          className=\"mx-auto h-12 w-auto\"\n          src=\"https://nustart.s3.ap-southeast-1.amazonaws.com/nustartlogo.png\"\n          alt=\"Workflow\"\n        />\n\n      </div>\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n        <div className=\"bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10\">\n          <h2>\n            Staff account is pending approval, please wait.\n          </h2>\n          <button\n            className=\"mt-5 group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n            onClick={() => history.push('/')}\n          >\n            Back to sign in\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}","import { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function MapSelectMenu({ options, map, setMap }) {\n  console.log(map)\n  return (\n    (options.length && map) ?\n      <Listbox value={map} onChange={setMap}>\n        {({ open }) => (\n          <>\n            <Listbox.Label className=\"block text-sm font-medium text-gray-700\">Maps</Listbox.Label>\n            <div className=\"relative\">\n              <Listbox.Button className=\"mt-1 bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                <span className=\"block truncate\">{map.title.charAt(0) + map.title.slice(1)}</span>\n                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                  <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                </span>\n              </Listbox.Button>\n\n              <Transition\n                show={open}\n                as={Fragment}\n                leave=\"transition ease-in duration-100\"\n                leaveFrom=\"opacity-100\"\n                leaveTo=\"opacity-0\"\n              >\n                <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                  {!options.length ?\n                    <Listbox.Option\n                      key=\"No sort types\"\n                      className={({ active }) =>\n                        classNames(\n                          active ? 'text-white bg-rose-600' : 'text-gray-900',\n                          'cursor-default select-none relative py-2 pl-3 pr-9'\n                        )\n                      }\n                      value={null}\n                    >\n                      No categories\n                    </Listbox.Option>\n                    : options.map((map) => (\n                      <Link to={`/campus/${map.id}`}>\n                      <Listbox.Option\n                        key={map.id}\n                        className={({ active }) =>\n                          classNames(\n                            active ? 'text-white bg-rose-600' : 'text-gray-900',\n                            'cursor-default select-none relative py-2 pl-3 pr-9'\n                          )\n                        }\n                        value={map}\n                      >\n                        {({ selected, active }) => (\n                          <>\n                            <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                              {map.title}\n                            </span>\n\n                            {selected ? (\n                              <span\n                                className={classNames(\n                                  active ? 'text-white' : 'text-rose-600',\n                                  'absolute inset-y-0 right-0 flex items-center pr-4'\n                                )}\n                              >\n                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                              </span>\n                            ) : null}\n                          </>\n                        )}\n                      </Listbox.Option>\n                      </Link>\n                    ))}\n                </Listbox.Options>\n              </Transition>\n            </div>\n          </>\n        )}\n      </Listbox>\n      : <div>No maps</div>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useRouteMatch } from 'react-router'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport MapSelectMenu from '../../components/SelectMenus/mapsSelectMenu'\nimport api from '../../util/api'\n\nexport default function CampusPage() {\n    const { url } = useRouteMatch()\n    const [user, setUser] = useState(null)\n    const [maps, setMaps] = useState([])\n    const [selected, setSelected] = useState(null)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => setUser(response.data))\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    useEffect(() => {\n        api.getMaps()\n            .then(response => {\n                setMaps(response.data)\n                setSelected(response.data[0])\n            })\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"forum\"\n                disableButton={true}\n                user={user}\n                disableSearch={true}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-10\">\n                        {(maps.length && selected) ?\n                            <MapSelectMenu options={maps} map={selected} setMap={setSelected} />\n                            : <div className=\"text-center\">\n                                <svg\n                                    className=\"mx-auto h-12 w-12 text-gray-400\"\n                                    fill=\"none\"\n                                    viewBox=\"0 0 24 24\"\n                                    stroke=\"currentColor\"\n                                    aria-hidden=\"true\"\n                                >\n                                    <path\n                                        vectorEffect=\"non-scaling-stroke\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n                                    />\n                                </svg>\n                                <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No maps</h3>\n                            </div>\n                        }\n                    </main>\n                </div>\n            </div>\n        </div>\n    )\n\n}","import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { uploadFile } from 'react-s3';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport UploadImage from '../../components/uploadImage';\nimport api from '../../util/api';\n\nconst S3_BUCKET = 'nustart';\nconst REGION = 'ap-southeast-1';\nconst ACCESS_KEY = 'AKIARTYBCSQYJNUGQWLJ';\nconst SECRET_ACCESS_KEY = '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';\n\nconst config = {\n  bucketName: S3_BUCKET,\n  region: REGION,\n  accessKeyId: ACCESS_KEY,\n  secretAccessKey: SECRET_ACCESS_KEY,\n}\n\nexport default function AddMapPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [error, setError] = useState(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const handleFileInput = (e) => {\n    setSelectedFile(e.target.files[0])\n  }\n  const handleUpload = async (file) => {\n    uploadFile(file, config)\n      .then(data => {\n        createMap(data.location)\n      })\n      .catch(error => setError(error))\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    handleUpload(selectedFile)\n    alert(\"Successfully created map.\")\n  }\n\n  function createMap(location) {\n    api.createMap({\n      title: title,\n      url: location,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user}/>\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user}/>\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Map</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3\">\n                        <label className=\"block text-sm font-medium text-gray-700\">Map</label>\n                        {!selectedFile ?\n                          <div >\n                            <UploadImage handleFileInput={handleFileInput} accept=\".jpg, .png, .gif\" required={true}/>\n                          </div>\n                          : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                            {selectedFile.name}\n                            <button className=\"text-gray-700\" onClick={() => setSelectedFile(null)}>\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { useEffect, useState } from \"react\"\nimport { useParams, useRouteMatch } from \"react-router\"\nimport NavBar from \"../../components/navBar\"\nimport NewButton from \"../../components/newButton\"\nimport SideBar from \"../../components/sideBar\"\nimport api from \"../../util/api\"\nimport MapSelectMenu from \"../../components/SelectMenus/mapsSelectMenu\"\n\nexport default function MapDetailsPage() {\n  const { url } = useRouteMatch()\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [map, setMap] = useState(null)\n  const [maps, setMaps] = useState([])\n  const [selected, setSelected] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    api.getMap(id)\n      .then(response => setMap(response.data))\n      .catch((error) => setError(error))\n  }, [id])\n\n  useEffect(() => {\n    api.getMaps()\n      .then(response => {\n        setMaps(response.data)\n        setSelected(response.data[0])\n      })\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  if (error) return `Error: ${error.message}`\n\n  console.log(maps)\n\n  return (\n    (user && map) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"forum\"\n        disableButton={true}\n        user={user}\n        disableSearch={true}\n      />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            {(maps.length && selected) &&\n              <MapSelectMenu options={maps} map={selected} setMap={setSelected} />}\n            <div className=\"mt-4 flex\">\n              <h1 className=\"sr-only\">map</h1>\n              <img\n                src={map.url}\n                alt=\"\"\n                className=\"flex-shrink-0 min-w-full\"\n              />\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","import { Fragment, useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport EditCategoryModal from \"../../containers/CategoriesPage/editCategory\";\nimport api from \"../../util/api\";\nimport DeleteConfirm from \"../deleteConfirm\";\n\nexport default function MapsTable({ items, setSearchString, dataLimit }) {\n  const [open, setOpen] = useState(false)\n  const [deleteM, setDeleteM] = useState(null)\n  const [editCat, setEditCat] = useState(null)\n  const [error, setError] = useState(null);\n  const [pages, setPages] = useState(Math.ceil(items.length / dataLimit))\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const startIndex = currentPage * dataLimit - dataLimit\n  const endIndex = startIndex + dataLimit\n\n  const goToNextPage = () => setCurrentPage((page) => page + 1)\n  const goToPreviousPage = () => setCurrentPage((page) => page - 1)\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit\n    const endIndex = startIndex + dataLimit\n    return items.slice(startIndex, endIndex)\n\n  }\n  function deleteMap(mapId) {\n    api.deleteMap(mapId)\n      .then(() => window.location.reload())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    setPages(Math.ceil(items.length / dataLimit))\n  }, [items.length, dataLimit])\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            {!items || !items.length\n              ? (\n                <div className=\"text-center\">\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No maps</h3>\n                </div>\n              )\n              : (\n                <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Name\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Image URL\n                        </th>\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\n                          <span className=\"sr-only\">Options</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {getPaginatedData().map((item, itemIdx) => (\n                        <tr key={item.id} className={itemIdx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            <Link to={`/profile/${item.id}`} className=\"hover:underline\">\n                              {item.title}\n                            </Link>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.url}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button\n                              className=\"text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setEditCat(item)\n                                setOpen(true)\n                              }}>\n                              Edit\n                            </button>\n                            <button\n                              className=\"ml-5 text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setDeleteM(item)\n                                setOpen(true)\n                              }}>\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50\">\n                      <tr>\n                        <td colSpan=\"6\">\n                          <nav\n                            className=\"overflow-hidden px-4 py-3 flex items-center justify-between sm:px-6\"\n                            aria-label=\"Pagination\"\n                          >\n                            <div className=\"hidden sm:block\">\n                              <p className=\"text-sm text-gray-700\">\n                                Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{items.length > endIndex ? (endIndex) : items.length}</span> of{' '}\n                                <span className=\"font-medium\">{items.length}</span> results\n                              </p>\n                            </div>\n                            <div className=\"flex-1 flex justify-between sm:justify-end\">\n                              {currentPage !== 1 &&\n                                <button\n                                  className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToPreviousPage}\n                                >\n                                  Previous\n                                </button>\n                              }\n                              {(currentPage !== pages && pages > 1) &&\n                                <button\n                                  className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToNextPage}\n                                >\n                                  Next\n                                </button>\n                              }\n                            </div>\n                          </nav>\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n      {deleteMap &&\n        <DeleteConfirm\n          title=\"map\"\n          open={open}\n          setOpen={setOpen}\n          cat={deleteM}\n          onConfirm={deleteMap}\n        />\n      }\n      {editCat &&\n        <EditCategoryModal\n          item={editCat}\n          open={open}\n          setOpen={setOpen}\n        />\n      }\n\n    </Fragment>\n  )\n}","import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport api from '../../util/api'\nimport NewButton from '../../components/newButton'\nimport { useRouteMatch } from 'react-router'\nimport MapsTable from '../../components/mapsTable'\n\n\nexport default function ManageMapsPage() {\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [maps, setMaps] = useState([])\n  const [open, setOpen] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getMaps()\n      .then((response) => {\n          setMaps(response.data)\n        })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    user &&\n      <div className=\"relative min-h-screen bg-gray-100\">\n        <NavBar\n          buttonContent=\"forum\"\n          disableButton={user.accountType !== \"ADMIN\"}\n          component={\n            <NewButton content='map' path=\"/admin/campus/create\" />\n          }\n          user={user}\n          disableSearch={true}\n        />\n        <div className=\"py-10\">\n          <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n            <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n              <SideBar user={user} />\n            </div>\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Maps</h1>\n                <MapsTable items={maps} dataLimit={10} />\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n  )\n}","import { Redirect, Switch } from 'react-router';\nimport PublicRoute from './app/util/routes/PublicRoute';\nimport PrivateRoute from './app/util/routes/PrivateRoute';\nimport AddForumPage from './app/containers/AddForumPage';\nimport AddThreadPage from './app/containers/AddThreadPage';\nimport AddPostPage from './app/containers/AddPostPage';\nimport ProfilePage from './app/containers/ProfilePage';\nimport ForumsPage from './app/containers/ForumsPage';\nimport ForumDetailsPage from './app/containers/ForumDetailsPage';\nimport LoginPage from './app/containers/LoginPage';\nimport RegisterPage from './app/containers/RegisterPage'\nimport ThreadDetailsPage from './app/containers/ThreadDetailsPage';\nimport UsersPage from './app/containers/UsersPage';\nimport GuidesPage from './app/containers/GuidesPage';\nimport GuideDetailsPage from './app/containers/GuideDetailsPage';\nimport AddGuidePage from './app/containers/AddGuidePage';\nimport CategoriesPage from './app/containers/CategoriesPage';\nimport AddCategoryPage from './app/containers/AddCategoryPage';\nimport GuidesListPage from './app/containers/GuidesListPage';\nimport AddAdminPage from './app/containers/AddAdminPage';\nimport PendingApprovalPage from './app/containers/PendingApprovalPage/pendingApproval';\nimport CampusPage from './app/containers/MapsPage';\nimport AddMapPage from './app/containers/AddMapPage';\nimport MapDetailsPage from './app/containers/MapDetailsPage';\nimport ManageMapsPage from './app/containers/ManageMapsPage';\n\nfunction App() {\n  return (\n    <div className=\"content\">\n      <Switch>\n        <PrivateRoute exact path=\"/\" component={ForumsPage} /> \n        <PublicRoute path=\"/login\" component={LoginPage} />\n        <PublicRoute path=\"/register\" component={RegisterPage} />\n        <PublicRoute path=\"/pending-approval\" component={PendingApprovalPage} />\n        <PrivateRoute exact path='/:id/threads' component={ForumDetailsPage} />\n        <PrivateRoute exact path=\"/:forumId/threads/:threadId/posts\" component={ThreadDetailsPage} />\n        <PrivateRoute path=\"/create\" component={AddForumPage} />\n        <PrivateRoute path=\"/:id/threads/create\" component={AddThreadPage} />\n        <PrivateRoute exact path=\"/profile/:uid\" component={ProfilePage}/>\n        <PrivateRoute exact path=\"/users\" component={UsersPage}/>\n        <PrivateRoute path=\"/users/create\" component={AddAdminPage} />\n        <PrivateRoute path=\"/:forumId/threads/:threadId/posts/create\" component={AddPostPage} />\n        <PrivateRoute exact path=\"/categories\" component={GuidesPage} />\n        <PrivateRoute exact path=\"/categories/:id/guides\" component={GuidesListPage} />\n        <PrivateRoute path='/categories/:categoryId/guides/:guideId' component={GuideDetailsPage} />\n        <PrivateRoute path=\"/createGuide\" component={AddGuidePage} />\n        <PrivateRoute path=\"/admin/categories/create\" component={AddCategoryPage} />\n        <PrivateRoute exact path=\"/admin/categories\" component={CategoriesPage} />\n        <PrivateRoute exact path=\"/admin/campus\" component={ManageMapsPage} />\n        <PrivateRoute exact path=\"/campus\" component={CampusPage} />\n        <PrivateRoute path=\"/campus/:id\" component={MapDetailsPage} />\n        <PrivateRoute path=\"/admin/campus/create\" component={AddMapPage} />\n        <Redirect exact from=\"/:id\" to=\"/:id/threads\" />\n        <Redirect exact from=\"/:forumId/threads/:threadId\" to=\"/:forumId/threads/:threadId/posts\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}