[{"/Users/remuskwan/development/nus/is3106/project/ui/src/index.js":"1","/Users/remuskwan/development/nus/is3106/project/ui/src/reportWebVitals.js":"2","/Users/remuskwan/development/nus/is3106/project/ui/src/App.js":"3","/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/routes/PublicRoute.js":"4","/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/routes/PrivateRoute.js":"5","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/index.js":"6","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/RegisterPage/index.js":"7","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/index.js":"8","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddForumPage/index.js":"9","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumDetailsPage/index.js":"10","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/LoginPage/index.js":"11","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/index.js":"12","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddPostPage/index.js":"13","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/index.js":"14","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddThreadPage/index.js":"15","/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/Common.js":"16","/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/api.js":"17","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/postList.js":"18","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/threadOptions.js":"19","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumDetailsPage/threadList.js":"20","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/forumList.js":"21","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactForm.js":"22","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactList.js":"23","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/breadcrumb/index.js":"24","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/sideBar/index.js":"25","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/inputText/index.js":"26","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/newButton/index.js":"27","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/navBar/index.js":"28","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/textArea/index.js":"29","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/sectionHeadDrop/index.js":"30","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/postOptions.js":"31","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/editThread.js":"32","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/forumOptions.js":"33","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactItem.js":"34","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/confirmDialog/index.js":"35","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/navBar/profileDropDown.js":"36","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/editPost.js":"37","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/editForum.js":"38","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/comment/index.js":"39","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentsList/index.js":"40","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentsSection/index.js":"41","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/CategoriesPage/index.js":"42","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddGuidePage/index.js":"43","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js":"44","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuideDetailsPage/index.js":"45","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesPage/index.js":"46","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddCategoryPage/index.js":"47","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddAdminPage/index.js":"48","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/guidesTab.js":"49","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/contactsTab.js":"50","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/postsTab.js":"51","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/threadsTab.js":"52","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/accountTab.js":"53","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/allUsersTab.js":"54","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/guideItem.js":"55","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/postItem.js":"56","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/threadItem.js":"57","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/inputTextError/index.js":"58","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/guideCategories/index.js":"59","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guideOptions/index.js":"60","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Paginator/threadPaginator/index.js":"61","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/ApproveTab.js":"62","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guideList/index.js":"63","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/BlockTab.js":"64","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Paginator/postPaginator/index.js":"65","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/uploadImage/index.js":"66","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/catSelectMenu/index.js":"67","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/uploadProfileImage/index.js":"68","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/categoriesTable/index.js":"69","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/post/index.js":"70","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/notification/index.js":"71","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/editGuideModal/index.js":"72","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guide/index.js":"73","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/deleteConfirm/index.js":"74","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentOptions/index.js":"75","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/thread/index.js":"76","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/searchSelectMenu/index.js":"77","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/passwordTab.js":"78","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/SelectMenus/sortSelectMenu/index.js":"79","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/PendingApprovalPage/pendingApproval.js":"80","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/userList.js":"81","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/MapsPage/index.js":"82","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddMapPage/index.js":"83","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/SelectMenus/mapsSelectMenu/index.js":"84","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/CategoriesPage/editCategory.js":"85","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/blockUserList.js":"86","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/approveUserList.js":"87","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/MapDetailsPage/index.js":"88","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ManageMapsPage/index.js":"89","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/mapsTable/index.js":"90"},{"size":544,"mtime":1636664255265,"results":"91","hashOfConfig":"92"},{"size":362,"mtime":1636664255265,"results":"93","hashOfConfig":"92"},{"size":3473,"mtime":1636664255253,"results":"94","hashOfConfig":"92"},{"size":371,"mtime":1636664255265,"results":"95","hashOfConfig":"92"},{"size":410,"mtime":1636664255265,"results":"96","hashOfConfig":"92"},{"size":23199,"mtime":1636664255262,"results":"97","hashOfConfig":"92"},{"size":30416,"mtime":1636664255263,"results":"98","hashOfConfig":"92"},{"size":5540,"mtime":1636664255263,"results":"99","hashOfConfig":"92"},{"size":4145,"mtime":1636664255258,"results":"100","hashOfConfig":"92"},{"size":4752,"mtime":1636664255259,"results":"101","hashOfConfig":"92"},{"size":4604,"mtime":1636664255261,"results":"102","hashOfConfig":"92"},{"size":6436,"mtime":1636664255264,"results":"103","hashOfConfig":"92"},{"size":4287,"mtime":1636697739949,"results":"104","hashOfConfig":"92"},{"size":4570,"mtime":1636664255260,"results":"105","hashOfConfig":"92"},{"size":5171,"mtime":1636697824324,"results":"106","hashOfConfig":"92"},{"size":364,"mtime":1636664255264,"results":"107","hashOfConfig":"92"},{"size":6247,"mtime":1636664255264,"results":"108","hashOfConfig":"92"},{"size":2219,"mtime":1636664255263,"results":"109","hashOfConfig":"92"},{"size":5343,"mtime":1636664255263,"results":"110","hashOfConfig":"92"},{"size":1412,"mtime":1636664255260,"results":"111","hashOfConfig":"92"},{"size":2629,"mtime":1636664255260,"results":"112","hashOfConfig":"92"},{"size":2321,"mtime":1636664255255,"results":"113","hashOfConfig":"92"},{"size":1588,"mtime":1636664255255,"results":"114","hashOfConfig":"92"},{"size":2720,"mtime":1636664255254,"results":"115","hashOfConfig":"92"},{"size":2602,"mtime":1636664255257,"results":"116","hashOfConfig":"92"},{"size":1011,"mtime":1636664255256,"results":"117","hashOfConfig":"92"},{"size":478,"mtime":1636664255257,"results":"118","hashOfConfig":"92"},{"size":8012,"mtime":1636690933935,"results":"119","hashOfConfig":"92"},{"size":796,"mtime":1636664255257,"results":"120","hashOfConfig":"92"},{"size":1564,"mtime":1636664255257,"results":"121","hashOfConfig":"92"},{"size":3376,"mtime":1636664255263,"results":"122","hashOfConfig":"92"},{"size":3695,"mtime":1636697786863,"results":"123","hashOfConfig":"92"},{"size":3317,"mtime":1636664255260,"results":"124","hashOfConfig":"92"},{"size":720,"mtime":1636664255255,"results":"125","hashOfConfig":"92"},{"size":4483,"mtime":1636664255255,"results":"126","hashOfConfig":"92"},{"size":2828,"mtime":1636664255257,"results":"127","hashOfConfig":"92"},{"size":4659,"mtime":1636697739949,"results":"128","hashOfConfig":"92"},{"size":4718,"mtime":1636664255260,"results":"129","hashOfConfig":"92"},{"size":4259,"mtime":1636664255255,"results":"130","hashOfConfig":"92"},{"size":2729,"mtime":1636293030748,"results":"131","hashOfConfig":"92"},{"size":3225,"mtime":1636664255255,"results":"132","hashOfConfig":"92"},{"size":3444,"mtime":1636664255259,"results":"133","hashOfConfig":"92"},{"size":6903,"mtime":1636697739949,"results":"134","hashOfConfig":"92"},{"size":5001,"mtime":1636664255261,"results":"135","hashOfConfig":"92"},{"size":8390,"mtime":1636664255260,"results":"136","hashOfConfig":"92"},{"size":3168,"mtime":1636664255261,"results":"137","hashOfConfig":"92"},{"size":3558,"mtime":1636664255258,"results":"138","hashOfConfig":"92"},{"size":7345,"mtime":1636664255258,"results":"139","hashOfConfig":"92"},{"size":461,"mtime":1636664255262,"results":"140","hashOfConfig":"92"},{"size":3742,"mtime":1636664255262,"results":"141","hashOfConfig":"92"},{"size":446,"mtime":1636664255262,"results":"142","hashOfConfig":"92"},{"size":472,"mtime":1636664255262,"results":"143","hashOfConfig":"92"},{"size":28323,"mtime":1636664255262,"results":"144","hashOfConfig":"92"},{"size":8065,"mtime":1636664255264,"results":"145","hashOfConfig":"92"},{"size":2810,"mtime":1636664255262,"results":"146","hashOfConfig":"92"},{"size":3467,"mtime":1636664255262,"results":"147","hashOfConfig":"92"},{"size":2877,"mtime":1636664255262,"results":"148","hashOfConfig":"92"},{"size":1701,"mtime":1636664255256,"results":"149","hashOfConfig":"92"},{"size":3326,"mtime":1636664255256,"results":"150","hashOfConfig":"92"},{"size":3761,"mtime":1636664255254,"results":"151","hashOfConfig":"92"},{"size":2308,"mtime":1636664255254,"results":"152","hashOfConfig":"92"},{"size":3866,"mtime":1636664255263,"results":"153","hashOfConfig":"92"},{"size":2329,"mtime":1636664255254,"results":"154","hashOfConfig":"92"},{"size":3505,"mtime":1636664255264,"results":"155","hashOfConfig":"92"},{"size":2027,"mtime":1636664255254,"results":"156","hashOfConfig":"92"},{"size":1493,"mtime":1636664255258,"results":"157","hashOfConfig":"92"},{"size":3610,"mtime":1636664255254,"results":"158","hashOfConfig":"92"},{"size":1341,"mtime":1636664255258,"results":"159","hashOfConfig":"92"},{"size":7509,"mtime":1636664255255,"results":"160","hashOfConfig":"92"},{"size":3566,"mtime":1636664255257,"results":"161","hashOfConfig":"92"},{"size":2550,"mtime":1636664255257,"results":"162","hashOfConfig":"92"},{"size":5440,"mtime":1636664255253,"results":"163","hashOfConfig":"92"},{"size":2971,"mtime":1636664255253,"results":"164","hashOfConfig":"92"},{"size":4503,"mtime":1636664255256,"results":"165","hashOfConfig":"92"},{"size":3815,"mtime":1636664255255,"results":"166","hashOfConfig":"92"},{"size":2008,"mtime":1636664255258,"results":"167","hashOfConfig":"92"},{"size":3024,"mtime":1636664255257,"results":"168","hashOfConfig":"92"},{"size":8082,"mtime":1636664255262,"results":"169","hashOfConfig":"92"},{"size":3610,"mtime":1636693538029,"results":"170","hashOfConfig":"92"},{"size":1119,"mtime":1636664255262,"results":"171","hashOfConfig":"92"},{"size":3287,"mtime":1636664255264,"results":"172","hashOfConfig":"92"},{"size":2893,"mtime":1636692108398,"results":"173","hashOfConfig":"92"},{"size":5331,"mtime":1636664255259,"results":"174","hashOfConfig":"92"},{"size":3840,"mtime":1636664255254,"results":"175","hashOfConfig":"92"},{"size":4600,"mtime":1636664255259,"results":"176","hashOfConfig":"92"},{"size":4495,"mtime":1636664255264,"results":"177","hashOfConfig":"92"},{"size":4345,"mtime":1636664255264,"results":"178","hashOfConfig":"92"},{"size":2189,"mtime":1636692108398,"results":"179","hashOfConfig":"92"},{"size":1859,"mtime":1636664255261,"results":"180","hashOfConfig":"92"},{"size":6317,"mtime":1636691056876,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"zgecak",{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"184"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"184"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"184"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"184"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"184"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"184"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"184"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"246","messages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"248","messages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"184"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"184"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"184"},{"filePath":"275","messages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"278"},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"184"},{"filePath":"285","messages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"184"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"184"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"184"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"184"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"184"},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"184"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"184"},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"184"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"184"},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"184"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"184"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"184"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"184"},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"184"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"371","messages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"373","messages":"374","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"184"},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"184"},{"filePath":"383","messages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"184"},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"184"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"184"},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/remuskwan/development/nus/is3106/project/ui/src/index.js",[],["404","405"],"/Users/remuskwan/development/nus/is3106/project/ui/src/reportWebVitals.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/App.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/routes/PublicRoute.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/routes/PrivateRoute.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/index.js",["406","407","408","409","410","411","412"],"import { useState, useEffect } from 'react'\n\nimport {\n    UserCircleIcon,\n} from '@heroicons/react/solid'\nimport {\n    BriefcaseIcon,\n    AcademicCapIcon,\n    LibraryIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\n\nimport api from '../../util/api'\nimport { useHistory, useParams } from 'react-router'\nimport GuidesTab from './guidesTab'\nimport ContactsTab from './contactsTab'\n\nimport AccountTab from './accountTab';\nimport ThreadsTab from './threadsTab'\nimport PostsTab from './postsTab'\nimport PasswordTab from './passwordTab'\n\nconst tabs = [\n    { name: 'Profile', href: '#', current: true },\n    { name: 'Password', href: '#', current: false },\n    { name: 'Contacts', href: '#', current: false },\n    { name: 'Guides', href: '#', current: false },\n    { name: 'Threads', href: '#', current: false },\n    { name: 'Posts', href: '#', current: false },\n]\n\nconst likedFilter = [\n    { id: 1, name: 'Guides' },\n    { id: 2, name: 'Posts' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function ProfilePage() {\n\n    const [user, setUser] = useState(null) //logged in user\n    const [viewUser, setViewUser] = useState(null) //viewing other user\n    const [tab, setTab] = useState(tabs[0])\n\n    const [profilePic, setProfilePic] = useState('')\n    //const [selected, setSelected] = useState(likedFilter[0])\n\n    const [guides, setGuides] = useState([])\n    const [threads, setThreads] = useState([])\n    const [posts, setPosts] = useState([])\n    const [editMode, setEditMode] = useState(false)\n\n    const { uid } = useParams()\n\n    useEffect(() => {\n        async function getLogged() {\n            await api.getUser()\n                .then(response => {\n                    setUser(response.data)\n                    setProfilePic(response.data.profilePicture)\n                    setEditMode(response.data.id.toString() === uid)\n                    //console.log(response.data.id === uid)\n                }).then(async () => {\n                    if (!editMode) {\n                        await api.getUser(uid)\n                            .then(response => setViewUser(response.data))\n                    }\n                })\n        }\n        getLogged()\n    }, [])\n\n    useEffect(() => {\n        async function getGuides() {\n            await api.getUserGuide(uid)\n                .then(response => {\n                    setGuides(response.data)\n                })\n                .then(() => console.log(guides))\n        }\n        getGuides()\n    }, [])\n\n    useEffect(() => {\n        async function getThreads() {\n            await api.getUserThread(uid)\n                .then(response => {\n                    setThreads(response.data)\n                })\n                .then(() => console.log(threads))\n        }\n        getThreads()\n    }, [])\n\n    useEffect(() => {\n        async function getPosts() {\n            await api.getUserPost(uid)\n                .then(response => setPosts(response.data))\n        }\n        getPosts()\n    }, [])\n\n    function resetTabState(tabName) {\n        tabs.filter((t) => t.current === true).map((t) => t.current = false)\n        const currentTab = tabs.filter((t) => t.name === tabName).map((t) => t.current = true)\n        setTab(currentTab)\n    }\n\n    function CurrentTab() {\n        const activeTab = tabs.filter((t) => t.current === true)\n        if (activeTab[0].name === 'Profile') {\n            return <AccountTab editMode={editMode} uid={uid} />;\n        } else if (activeTab[0].name === 'Contacts') {\n            return <ContactsTab editMode={editMode} user={user} />;\n        } else if (activeTab[0].name === 'Guides') {\n            return <GuidesTab guides={guides} />;\n        } else if (activeTab[0].name === 'Posts') {\n            return <PostsTab posts={posts} />;\n        } else if (activeTab[0].name === 'Threads') {\n            return <ThreadsTab threads={threads} />\n        } else {\n            return <PasswordTab user={user} />\n        }\n    }\n\n    // function LikedTab(editMode) {\n    //     return (\n    //         <div>\n    //             <Listbox value={selected} onChange={setSelected}>\n    //                 <div className=\"p-5 mt-1 relative\">\n    //                     <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n    //                         <span className=\"block truncate\">{selected.name}</span>\n    //                         <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n    //                             <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                         </span>\n    //                     </Listbox.Button>\n\n    //                     <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n    //                         <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n    //                             {likedFilter.map((filter) => (\n    //                                 <Listbox.Option\n    //                                     key={filter.id}\n    //                                     className={({ active }) =>\n    //                                         classNames(\n    //                                             active ? 'text-white bg-rose-600' : 'text-gray-900',\n    //                                             'cursor-default select-none relative py-2 pl-8 pr-4'\n    //                                         )\n    //                                     }\n    //                                     value={filter}\n    //                                 >\n    //                                     {({ selected, active }) => (\n    //                                         <>\n    //                                             <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n    //                                                 {filter.name}\n    //                                             </span>\n    //                                             {selected ? (\n    //                                                 <span\n    //                                                     className={classNames(\n    //                                                         active ? 'text-white' : 'text-rose-600',\n    //                                                         'absolute inset-y-0 left-0 flex items-center pl-1.5'\n    //                                                     )}\n    //                                                 >\n    //                                                     <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n    //                                                 </span>\n    //                                             ) : null}\n    //                                         </>\n    //                                     )}\n    //                                 </Listbox.Option>\n    //                             ))}\n    //                         </Listbox.Options>\n    //                     </Transition>\n    //                 </div>\n    //             </Listbox>\n    //             <FilterFavourites />\n    //         </div>\n    //     )\n    // }\n\n    // function FilterFavourites() {\n    //     let filtered = [];\n    //     if (selected.name === 'Guides') {\n    //         filtered = likes.filter((f) => f.type === 'Guide')\n    //     } else {\n    //         filtered = likes.filter((f) => f.type === 'Post')\n    //     }\n    //     return (\n    //         <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n    //             <ul role=\"list\" className=\"divide-y divide-gray-200\">\n    //                 {filtered.map((f) => (\n    //                     <li key={f.id}>\n    //                         <div className=\"px-4 py-4 flex items-center sm:px-6\">\n    //                             <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n    //                                 <div className=\"truncate\">\n    //                                     <div className=\"flex text-sm\">\n    //                                         <p className=\"font-medium text-rose-600 truncate\">{f.value.title}</p>\n    //                                     </div>\n    //                                     <div className=\"mt-2 flex\">\n    //                                         <div className=\"flex items-center text-sm text-gray-500\">\n    //                                             <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-6\">\n    //                                                 {f.value.contents}\n    //                                             </dd>\n    //                                         </div>\n    //                                     </div>\n    //                                 </div>\n    //                                 <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n    //                                     {editMode\n    //                                         ? <a href=\"#\" className=\"block hover:bg-gray-50\">\n    //                                             <StarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                                         </a>\n    //                                         : null\n    //                                     }\n    //                                 </div>\n    //                             </div>\n    //                             <div className=\"ml-5 flex-shrink-0\">\n    //                                 <a href=\"#\" className=\"block hover:bg-gray-50\">\n    //                                     <ChevronRightIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //                                 </a>\n    //                             </div>\n    //                         </div>\n\n    //                     </li>\n    //                 ))}\n    //             </ul>\n    //         </div>\n    //     )\n    // }\n\n    function RenderPosition() {\n        if (viewUser.accountType === 'STAFF') {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <BriefcaseIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Staff\n                    </div>\n\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <LibraryIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        {viewUser.faculty}\n                    </div>\n                </div>\n            )\n        } else if (viewUser.accountType === 'ADMIN') {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <UserCircleIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Administrator\n                    </div>\n\n                </div>\n            )\n\n        } else {\n            return (\n                <div className=\"mt-1 flex flex-col sm:flex-row sm:flex-wrap sm:mt-0 sm:space-x-6\">\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <AcademicCapIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        Student\n                    </div>\n                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                        <LibraryIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                        {viewUser.faculty}\n                    </div>\n                </div>\n            )\n        }\n\n\n\n    }\n\n    function RenderTabs() {\n        if (!editMode) {\n            let finalTabs = []\n            const newTabs = tabs.filter((t) => t.name !== 'Password')\n            if (viewUser.accountType === 'STUDENT') {\n                finalTabs = newTabs.filter((t) => t.name !== 'Guides')\n            } else {\n                finalTabs = newTabs\n            }\n            return (\n                <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                    {finalTabs.map((tab) => (\n                        <a\n                            key={tab.name}\n                            href={tab.href}\n                            className={classNames(\n                                tab.current\n                                    ? 'border-pink-500 text-gray-900'\n                                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                            )}\n                            aria-current={tab.current ? 'page' : undefined}\n                            onClick={() => {\n                                resetTabState(tab.name)\n                            }}\n                        >\n                            {tab.name}\n                        </a>\n                    ))}\n                </nav>\n            )\n        } else {\n            if (user.accountType === 'STUDENT') {\n                const newTabs = tabs.filter((t) => t.name !== 'Guides')\n                return (\n                    <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        {newTabs.map((tab) => (\n                            <a\n                                key={tab.name}\n                                href={tab.href}\n                                className={classNames(\n                                    tab.current\n                                        ? 'border-pink-500 text-gray-900'\n                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                    'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                                )}\n                                aria-current={tab.current ? 'page' : undefined}\n                                onClick={() => {\n                                    resetTabState(tab.name)\n                                }}\n                            >\n                                {tab.name}\n                            </a>\n                        ))}\n                    </nav>\n                )\n            } else {\n                return (\n                    <nav className=\"-mb-px flex space-x-8\" aria-label=\"Tabs\">\n                        {tabs.map((tab) => (\n                            <a\n                                key={tab.name}\n                                href={tab.href}\n                                className={classNames(\n                                    tab.current\n                                        ? 'border-pink-500 text-gray-900'\n                                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300',\n                                    'whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm'\n                                )}\n                                aria-current={tab.current ? 'page' : undefined}\n                                onClick={() => {\n                                    resetTabState(tab.name)\n                                }}\n                            >\n                                {tab.name}\n                            </a>\n                        ))}\n                    </nav>\n                )\n            }\n        }\n    }\n\n    function EditMode() {\n        return (\n            user &&\n            <main className=\"lg:col-span-9 xl:col-span-9 bg-white rounded-md\">\n                <article>\n                    <div>\n                        {user.coverImage !== 'default'\n                            ? <div className=\"h-18 w-full object-cover lg:h-28 xl:h-40 rounded-md\">\n                                <img className=\"h-32 w-full object-cover lg:h-48 xl:h-56 rounded-md\" src={user.coverImage} alt=\"\" />\n                            </div>\n                            :\n                            <div className=\"h-10 w-full object-cover lg:h-28 xl:h-20 rounded-md\">\n\n                            </div>\n                        }\n                        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5\">\n                                <div className=\"flex\">\n                                    {profilePic === \"default\"\n                                        ?\n                                        <div class=\"max-w-md mx-auto my-3\">\n                                            <div class=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 shadow-md h-24 w-24 rounded-full fill-current text-white\">\n                                                <h2 style={{ fontSize: 24 }}>{user.username.substring(0, 1)}</h2>\n                                            </div>\n                                        </div>\n                                        :\n                                        <img\n                                            className=\"h-24 w-24 rounded-full sm:h-32 sm:w-32\"\n                                            src={profilePic}\n                                            alt={user.username.substring(0, 1)}\n                                        />\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"flex-1 min-w-0\">\n                                <h2 className=\"p-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">{user.username}</h2>\n                                <RenderPosition />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"mt-6 sm:mt-2 2xl:mt-5\">\n                        <div className=\"border-b border-gray-200\">\n                            <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <RenderTabs />\n                            </div>\n                        </div>\n                    </div>\n                    <CurrentTab />\n                </article>\n            </main>\n        )\n    }\n\n    function ViewMode() {\n        return (\n            viewUser &&\n            <main className=\"lg:col-span-9 xl:col-span-9 bg-white rounded-md\">\n                <article>\n                    <div>\n                        {viewUser.coverImage !== 'default'\n                            ? <div className=\"h-18 w-full object-cover lg:h-28 xl:h-40 rounded-md\">\n                                <img className=\"h-32 w-full object-cover lg:h-48 xl:h-56 rounded-md\" src={viewUser.coverImage} alt=\"\" />\n                            </div>\n                            :\n                            <div className=\"h-10 w-full object-cover lg:h-28 xl:h-20 rounded-md\">\n\n                            </div>\n                        }\n                        <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                            <div className=\"-mt-12 sm:-mt-16 sm:flex sm:items-end sm:space-x-5\">\n                                <div className=\"flex\">\n                                    {viewUser.profilePicture === \"default\"\n                                        ?\n                                        <div class=\"max-w-md mx-auto my-3\">\n                                            <div class=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 shadow-md hover:shadow-lg h-24 w-24 rounded-full fill-current text-white\">\n                                                <h2 style={{ fontSize: 24 }}>{viewUser.username.substring(0, 1)}</h2>\n                                            </div>\n                                        </div>\n                                        :\n                                        <img\n                                            className=\"h-24 w-24 rounded-full sm:h-32 sm:w-32\"\n                                            src={viewUser.profilePicture}\n                                            alt={viewUser.username.substring(0, 1)}\n                                        />\n                                    }\n                                </div>\n                                <div className=\"flex-1 min-w-0\">\n                                    <h2 className=\"p-2 text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">{viewUser.username}</h2>\n                                    <RenderPosition />\n                                    <div className=\"mt-2 flex items-center text-sm text-gray-500\">\n                                        {\n                                            viewUser.accountStatus === 'ACTIVE'\n                                                ?\n                                                <>\n                                                    <CheckCircleIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                                    {viewUser.accountStatus}\n                                                </>\n                                                : null\n                                        }\n                                    </div>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"mt-6 sm:mt-2 2xl:mt-5\">\n                        <div className=\"border-b border-gray-200\">\n                            <div className=\"max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                <RenderTabs />\n                            </div>\n                        </div>\n                    </div>\n                    <CurrentTab />\n                </article>\n            </main>\n        )\n    }\n\n    return (\n        user && viewUser &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                disableButton={true}\n                disableSearch={true}\n                user={user}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    {editMode ? <EditMode /> : <ViewMode />}\n                </div>\n            </div>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/RegisterPage/index.js",["413"],"import { Fragment, useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Listbox, Transition } from '@headlessui/react'\nimport { CheckIcon, ExclamationCircleIcon, SelectorIcon, XCircleIcon } from '@heroicons/react/solid'\nimport ContactForm from '../../components/contacts/ContactForm'\nimport ContactList from '../../components/contacts/ContactList'\nimport api from '../../util/api'\nimport { setUserSession } from '../../util/Common'\n\nconst accountType = [\n    { id: 1, name: 'Student' },\n    { id: 2, name: 'Staff' },\n]\n\nconst faculties = [\n    { id: 1, name: 'Arts & Social Sciences' },\n    { id: 2, name: 'Business' },\n    { id: 3, name: 'Computing' },\n    { id: 4, name: 'Continuing and Lifelong Education' },\n    { id: 5, name: 'Dentistry' },\n    { id: 6, name: 'Design & Environment' },\n    { id: 7, name: 'Duke-NUS' },\n    { id: 8, name: 'Engineering' },\n    { id: 9, name: 'Integrative Sciences & Engineering' },\n    { id: 10, name: 'Law' },\n    { id: 11, name: 'Medicine' },\n    { id: 12, name: 'Music' },\n    { id: 13, name: 'Public Health' },\n    { id: 14, name: 'Public Policy' },\n    { id: 15, name: 'Science' },\n    { id: 16, name: 'University Scholars Program' },\n    { id: 17, name: 'Yale-NUS' },\n]\n\nconst years = [\n    { id: 1, name: '1' },\n    { id: 2, name: '2' },\n    { id: 3, name: '3' },\n    { id: 4, name: '4' },\n    { id: 5, name: '5' },\n    { id: 6, name: 'Part-time' },\n    { id: 7, name: 'Graduate' },\n    { id: 8, name: 'PhD' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function RegisterPage() {\n    const history = useHistory()\n    const [position, setPosition] = useState(accountType[0])\n    const [faculty, setFaculty] = useState(faculties[0])\n    const [year, setYear] = useState(years[0])\n    const [course, setCourse] = useState(\"\")\n    const [contactList, setContactsList] = useState({ contacts: [], currentId: 0 })\n    const [firstName, setFirstName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [error, setError] = useState(null)\n    const [submitError, setSubmitError] = useState(null)\n\n    useEffect(async () => {\n        const size = await api.getContactSize()\n        setContactsList({ contacts: [], currentId: size.data + 1 })\n    }, [])\n\n    function handleEdit(id, editMode) {\n        const { contacts } = contactList;\n        const updatedContacts = contacts.map((n) => {\n            if (n.id === id) {\n                n.editMode = editMode;\n            }\n            return n;\n        });\n\n        setContactsList((oldContactList) => ({\n            currentId: oldContactList.currentId,\n            contacts: updatedContacts,\n        }));\n    } //end handleEdit\n\n    function handleDelete(id) {\n        const { contacts } = contactList;\n        const updatedContacts = contacts.filter((n) => {\n            return n.id !== id;\n        });\n\n        setContactsList((oldContactList) => ({\n            currentId: oldContactList.currentId,\n            contacts: updatedContacts,\n        }));\n\n    } //end handleDelete\n\n    function handleAddEdit(contact) {\n        const { currentId, contacts } = contactList;\n        if (contact.id === 0) {\n            //add action\n            if (contact.value.trim() === \"\") return;\n\n            contact.id = currentId + 1;\n\n            setContactsList({\n                currentId: contact.id,\n                contacts: [...contacts, contact],\n            });\n        } else {\n            //edit action\n            if (contact.value.trim() === \"\") {\n                //cancel edit\n                handleEdit(contact.id, false);\n                return;\n            } else {\n                //find the note\n                const updatedContacts = contacts.map((n) => {\n                    if (n.id === contact.id) {\n                        contact.editMode = false;\n                        return contact;\n                    } else {\n                        return n;\n                    }\n                });\n\n                setContactsList((oldContactList) => ({\n                    currentId: oldContactList.currentId,\n                    contacts: updatedContacts,\n                }));\n            }\n        }\n    }\n\n    function handleSubmit(evt) {\n        evt.preventDefault()\n        if (password !== confirmPassword) {\n            setError(new Error(\"Passwords do not match.\"))\n        } else if (!password.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\")) {\n            setError(new Error(\"Passwords must be minimum eight characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.\"))\n        } else {\n            register()\n        }\n    }\n\n    function register() {\n        api.register({\n            email: email,\n            password: password,\n            username: `${firstName} ${lastName}`,\n            accountType: position.id === 1 ? 'STUDENT' : 'STAFF',\n            accountStatus: position.id === 1 ? 'ACTIVE' : 'UNAPPROVED',\n            faculty: faculty.name,\n            yr: year.name,\n            course: course,\n            contacts: contactList.contacts\n        })\n            .then((response) => {\n                if (position.id === 1) setUserSession({ userId: response.data })\n            })\n            .then(() => {\n                if (position.id === 1) history.push(\"/\")\n                else if (position.id === 2) history.push(\"/pending-approval\")\n            })\n            .catch(error => {\n                if (!error.response) setSubmitError(new Error(\"Failed to connect to server\"))\n                if (error.response.status === 404) setSubmitError(new Error(\"Account already exists\"))\n                else setSubmitError(new Error(\"Something went wrong. Please try again later.\"))\n            })\n            /** new */\n            .then(() => history.push(\"/pending-approval\"))\n            .catch(error => {\n                if (error.response.accountStatus === 'UNAPPROVED') setSubmitError(new Error(\"Account is yet to be approved, please wait\"))\n            })\n            /** */\n    }\n    const { contacts } = contactList;\n\n    return (\n        <>\n            <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n                <div className=\"max-w-md w-full space-y-8\">\n                    <div>\n                        <img\n                            className=\"mx-auto h-12 w-auto\"\n                            src=\"https://nustart.s3.ap-southeast-1.amazonaws.com/nustartlogo.png\"\n                            alt=\"Workflow\"\n                        />\n                        <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Register a new account</h2>\n                        <p className=\"mt-2 text-center text-sm text-gray-600\">\n                            Or{' '}\n                            <Link to=\"/login\" className=\"font-medium text-rose-600 hover:text-rose-500\">\n                                log in\n                            </Link>\n                        </p>\n                    </div>\n                    {submitError &&\n                        <div className=\"py-4\">\n                            <div className=\"rounded-md bg-red-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">There were errors when attempting to create account</h3>\n                                        <div className=\"mt-2 text-sm text-red-700\">\n                                            {submitError.message}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    }\n                    <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n                        <Listbox value={position} onChange={setPosition}>\n                            <div className=\"mt-1 relative\">\n                                <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Position</Listbox.Label>\n                                <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                    <span className=\"block truncate\">{position.name}</span>\n                                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                        <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                    </span>\n                                </Listbox.Button>\n\n                                <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                    <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                        {accountType.map((type) => (\n                                            <Listbox.Option\n                                                key={type.id}\n                                                className={({ active }) =>\n                                                    classNames(\n                                                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                        'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                    )\n                                                }\n                                                value={type}\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                            {type.name}\n                                                        </span>\n\n                                                        {selected ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    active ? 'text-white' : 'text-rose-600',\n                                                                    'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                )}\n                                                            >\n                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                            </span>\n                                                        ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                        ))}\n                                    </Listbox.Options>\n                                </Transition>\n                            </div>\n                        </Listbox>\n                        <Listbox value={faculty} onChange={setFaculty}>\n                            <div className=\"mt-1 relative\">\n                                <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Faculty</Listbox.Label>\n                                <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                    <span className=\"block truncate\">{faculty.name}</span>\n                                    <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                        <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                    </span>\n                                </Listbox.Button>\n\n                                <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                    <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                        {faculties.map((faculty) => (\n                                            <Listbox.Option\n                                                key={faculty.id}\n                                                className={({ active }) =>\n                                                    classNames(\n                                                        active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                        'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                    )\n                                                }\n                                                value={faculty}\n                                            >\n                                                {({ selected, active }) => (\n                                                    <>\n                                                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                            {faculty.name}\n                                                        </span>\n\n                                                        {selected ? (\n                                                            <span\n                                                                className={classNames(\n                                                                    active ? 'text-white' : 'text-rose-600',\n                                                                    'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                )}\n                                                            >\n                                                                <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                            </span>\n                                                        ) : null}\n                                                    </>\n                                                )}\n                                            </Listbox.Option>\n                                        ))}\n                                    </Listbox.Options>\n                                </Transition>\n                            </div>\n                        </Listbox>\n\n                        {position.id === 1\n                            ? <div>\n                                <Listbox value={year} onChange={setYear}>\n                                    <div className=\"mt-1 relative\">\n                                        <Listbox.Label className=\"m-1 block text-sm font-medium text-gray-700\">Year</Listbox.Label>\n                                        <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                            <span className=\"block truncate\">{year.name}</span>\n                                            <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                            </span>\n                                        </Listbox.Button>\n\n                                        <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                            <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                                {years.map((y) => (\n                                                    <Listbox.Option\n                                                        key={y.id}\n                                                        className={({ active }) =>\n                                                            classNames(\n                                                                active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                            )\n                                                        }\n                                                        value={y}\n                                                    >\n                                                        {({ selected, active }) => (\n                                                            <>\n                                                                <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                    {y.name}\n                                                                </span>\n\n                                                                {selected ? (\n                                                                    <span\n                                                                        className={classNames(\n                                                                            active ? 'text-white' : 'text-rose-600',\n                                                                            'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                        )}\n                                                                    >\n                                                                        <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                    </span>\n                                                                ) : null}\n                                                            </>\n                                                        )}\n                                                    </Listbox.Option>\n                                                ))}\n                                            </Listbox.Options>\n                                        </Transition>\n                                    </div>\n                                </Listbox>\n\n                                <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                                <div className=\"mt-2 rounded-md shadow-sm -space-y-px\">\n                                    <div>\n                                        <label htmlFor=\"course\" className=\"sr-only\">\n                                            Course\n                                        </label>\n                                        <input\n                                            id=\"course\"\n                                            name=\"course\"\n                                            required\n                                            className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                            placeholder=\"Course\"\n                                            value={course}\n                                            onChange={(e) => setCourse(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            : null\n                        }\n\n\n                        <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\n                            <div>\n                                <label htmlFor=\"first-name\" className=\"sr-only\">\n                                    First name\n                                </label>\n                                <input\n                                    id=\"first-name\"\n                                    name=\"firstName\"\n                                    required\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                    placeholder=\"First name\"\n                                    value={firstName}\n                                    onChange={(e) => setFirstName(e.target.value)}\n                                />\n                            </div>\n                            <div>\n                                <label htmlFor=\"last-name\" className=\"sr-only\">\n                                    Last name\n                                </label>\n                                <input\n                                    id=\"last-name\"\n                                    name=\"lastName\"\n                                    required\n                                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                    placeholder=\"Last name\"\n                                    value={lastName}\n                                    onChange={(e) => setLastName(e.target.value)}\n                                />\n                            </div>\n                            <div className=\"col-span-3 sm:col-span-2\">\n                                <div className=\"flex rounded-md shadow-sm\">\n                                    <input\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-rose-500 focus:border-rose-500 focus:z-10 sm:text-sm\"\n                                        placeholder='@'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                    {/* <span className=\"inline-flex items-center px-3 rounded-br-md border border-l-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\n                                        @u.nus.edu\n                                    </span> */}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"rounded-md -space-y-px\">\n                            <div>\n                                <label htmlFor=\"password\" className=\"sr-only\">\n                                    Password\n                                </label>\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                                    <input\n                                        id=\"password\"\n                                        name=\"password\"\n                                        type=\"password\"\n                                        autoComplete=\"current-password\"\n                                        required\n                                        className={classNames(\n                                            !error\n                                                ? \"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                                                : \"block w-full pr-10 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n                                        )}\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                    {error &&\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                                            <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            <div>\n                                <label htmlFor=\"confirm-password\" className=\"sr-only\">\n                                    Confirm password\n                                </label>\n                                <div className=\"mt-1 relative rounded-md shadow-sm\">\n                                    <input\n                                        id=\"confirm-password\"\n                                        name=\"confirm-password\"\n                                        type=\"password\"\n                                        autoComplete=\"password\"\n                                        required\n                                        className={classNames(\n                                            !error\n                                                ? \"appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-rose-500 focus:border-rose-500 sm:text-sm\"\n                                                : \"block w-full pr-10 border-red-300 text-red-900 placeholder-red-300 focus:outline-none focus:ring-red-500 focus:border-red-500 sm:text-sm rounded-md\"\n                                        )}\n                                        placeholder=\"Confirm password\"\n                                        value={confirmPassword}\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    />\n                                    {error &&\n                                        <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                                            <ExclamationCircleIcon className=\"h-5 w-5 text-red-500\" aria-hidden=\"true\" />\n                                        </div>\n                                    }\n                                </div>\n                                {error &&\n                                    <p className=\"mt-2 text-sm text-red-600\" id=\"input-error\">\n                                        {error.message}\n                                    </p>\n                                }\n                            </div>\n                        </div>\n\n                        <div className=\"rounded-md shadow-sm -space-y-px\">\n                            <div className=\"bg-white shadow sm:rounded-lg\">\n                                <div className=\"px-4 py-5 sm:p-6\">\n                                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Add contacts</h3>\n                                    <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n                                        Optional\n                                    </span>\n                                    <br />\n                                    <div className=\"note-container\">\n                                        <ContactForm onDone={handleAddEdit} />\n                                        <br />\n                                        <ContactList\n                                            contacts={contacts}\n                                            onDelete={handleDelete}\n                                            onDone={handleAddEdit}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <br />\n                        </div>\n\n                        <div>\n                            <button\n                                type=\"submit\"\n                                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                            >\n                                Register\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/index.js",["414"],"import moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport PostList from './postList'\nimport SectionHeadDrop from '../../components/sectionHeadDrop'\nimport Breadcrumb from '../../components/breadcrumb'\nimport ThreadOptions from './threadOptions'\nimport api from '../../util/api'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'createdAt', reverse: false },\n  { id: 2, name: 'Content', sortType: 'content', reverse: true },\n]\n\nconst searchTypes = [\n  { id: 1, name: 'Content', searchType: 'content' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function ThreadDetailsPage() {\n  const { forumId, threadId } = useParams()\n  const [user, setUser] = useState(null)\n  const [forum, setForum] = useState(null)\n  const [thread, setThread] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [error, setError] = useState(null)\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n  const [sortType, setSortType] = useState(sortTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getForum(forumId)\n      .then((response) => {\n        setForum(response.data)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [forumId])\n\n  useEffect(() => {\n    api.getThread(threadId)\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            createdAt: 'createdAt',\n            content: 'content',\n          }\n          const searchTypes = {\n            creator: 'creator',\n            content: 'content',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.posts]\n            .filter((post) => {\n              if (searchString === '') {\n                return post\n              } else if (searchProperty === \"creator\") {\n                if (post[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return post\n                }\n              } else if (post[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return post\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]))\n          setPosts(sorted)\n        }\n        setThread(response.data)\n        searchSortItems(sortType.sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [threadId, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && forum && thread) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      {/* When the mobile menu is open, add `overflow-hidden` to the `body` element to prevent double scrollbars */}\n      <NavBar\n        buttonContent=\"post\"\n        disableButton={thread.closed}\n        user={user}\n        component={<NewButton content='post' path={`/${forumId}/threads/${threadId}/posts/create`} />}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType} />\n\n      <Breadcrumb pages={[\n        {\n          name: forum.title,\n          path: {\n            pathname: `/${forumId}/threads`,\n          }\n        },\n      ]} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          {thread &&\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <SectionHeadDrop\n                title={thread.title}\n                creator={thread.creator.username}\n                date={moment().subtract(moment().diff(thread.created.slice(0, -5))).calendar()}\n                open={!thread.closed}\n                disableMenu={thread.creator.id !== user.id && user.accountType !== 'ADMIN'}\n                menu={\n                  <ThreadOptions user={user} forumId={forumId} thread={thread} setThread={setThread} />\n                }\n              />\n              <div className=\"mt-5\">\n              <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n              </div>\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Posts</h1>\n                <PostPaginator\n                  data={posts}\n                  component={PostList}\n                  dataLimit={10}\n                  forumId={forumId}\n                  threadId={threadId}\n                  setThread={setThread}\n                  setPosts={setPosts}\n                  contentType=\"posts\"\n                  user={user}\n                />\n              </div>\n            </main>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddForumPage/index.js",["415"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport TextArea from '../../components/textArea';\nimport api from '../../util/api';\n\nexport default function AddForumPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createForum()\n    alert(\"Successfully created forum.\")\n  }\n\n  function createForum() {\n    api.createForum({\n      title: title,\n      description: description,\n      creator: user,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Forum</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3\">\n                        <TextArea\n                          name=\"description\"\n                          id=\"description\"\n                          label=\"Description\"\n                          required={true}\n                          value={description}\n                          maxLength={1000}\n                          onChange={(e) => setDescription(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 flex justify-end sm:px-6\">\n                    <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumDetailsPage/index.js",["416"],"import { useEffect, useState } from 'react';\nimport { useParams, useRouteMatch } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport ThreadList from './threadList';\nimport Breadcrumb from '../../components/breadcrumb';\nimport api from '../../util/api';\nimport NewButton from '../../components/newButton';\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu';\n\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n  { id: 2, name: 'Topic', sortType: 'title', reverse: true },\n  { id: 3, name: 'Most Posts', sortType: 'posts', reverse: false },\n]\n\nexport default function ForumDetailsPage() {\n  const { id } = useParams()\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [forum, setForum] = useState(null)\n  const [error, setError] = useState(null)\n  const [threads, setThreads] = useState([])\n  const [sortType, setSortType] = useState(sortTypes[0])\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getForum(id)\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            created: 'created',\n            title: 'title',\n            posts: 'posts'\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          console.log(sortProperty)\n          const filtered = [...response.data.threads]\n            .filter((thread) => {\n              if (searchString === '') {\n                return thread\n              } else if (searchProperty === \"creator\") {\n                if (thread[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return thread\n                }\n              } else if (thread[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                return thread\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) =>\n              sortProperty === 'posts'\n                ? y['posts'].length - x['posts'].length\n                : y[sortProperty].localeCompare(x[sortProperty])\n                || y['created'].localeCompare(x['created']))\n            .sort((x, y) => y['pinned'] - x['pinned'])\n          setThreads(sorted)\n        }\n        setForum(response.data)\n        searchSortItems(sortType.sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return (error.message)\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"thread\"\n        component={<NewButton content='thread' path={`${url}/create`} />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <Breadcrumb />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          {forum &&\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n\n              <div className=\"pb-5 border-b border-gray-200\">\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900\">{forum.title}</h3>\n                <p className=\"mt-2 max-w-4xl text-sm text-gray-500\">\n                  {forum.description}\n                </p>\n              </div>\n              <div className=\"mt-5\">\n              <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n              </div>\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Threads</h1>\n                <ThreadPaginator\n                  data={threads}\n                  component={ThreadList}\n                  dataLimit={8}\n                />\n              </div>\n            </main>\n          }\n\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/LoginPage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/index.js",["417","418"],"import { useState, useEffect } from 'react'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport api from '../../util/api'\nimport AllUsersTab from './allUsersTab'\nimport BlockTab from './BlockTab'\nimport ApproveTab from './ApproveTab'\n\nconst tabs = [\n    { name: 'All Users', href: '#', current: true },\n    { name: 'To Approve', href: '#', current: false },\n    { name: 'Block', href: '#', current: false },\n]\n\nconst searchTypes = [\n    { id: 1, name: 'Name', searchType: 'username' },\n    { id: 2, name: 'Email', searchType: 'email' },\n]\n\nfunction classNames(...classes) {\n    return classes.filter(Boolean).join(' ')\n}\n\nexport default function UsersPage() {\n    const [tab, setTab] = useState(tabs[0])\n    const [user, setUser] = useState(null)\n    const [error, setError] = useState(null)\n    const [searchString, setSearchString] = useState(\"\")\n    const [searchType, setSearchType] = useState(searchTypes[0])\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => {\n                setUser(response.data)\n            })\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    function resetTabState(tabName) {\n        tabs.filter((t) => t.current === true).map((t) => t.current = false)\n        const currentTab = tabs.filter((t) => t.name === tabName).map((t) => t.current = true)\n        setTab(currentTab)\n    }\n\n    function CurrentTab() {\n        const activeTab = tabs.filter((t) => t.current === true)\n        if (activeTab[0].name === 'All Users') {\n            return <AllUsersTab searchString={searchString} searchType={searchType}/>\n        } else if (activeTab[0].name === 'To Approve') {\n            return <ApproveTab searchString={searchString} searchType={searchType}/>\n        } else if (activeTab[0].name === 'Block') {\n            return <BlockTab user={user} searchString={searchString} searchType={searchType} />\n        } else {\n            return null\n        }\n    }\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"users\"\n                disableButton={user.accountType !== \"ADMIN\"}\n                component={<NewButton content='admin' path='/users/create' />}\n                user={user}\n                searchString={searchString}\n                setSearchString={setSearchString}\n                searchTypes={searchTypes}\n                searchType={searchType}\n                setSearchType={setSearchType}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user} />\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-9\">\n                        <>\n                            <div>\n                                <div className=\"sm:hidden\">\n                                    <label htmlFor=\"tabs\" className=\"sr-only\">\n                                        Select a tab\n                                    </label>\n                                    {/* Use an \"onChange\" listener to redirect the user to the selected tab URL. */}\n                                    <select\n                                        id=\"tabs\"\n                                        name=\"tabs\"\n                                        className=\"mb-5 block w-full focus:ring-rose-500 focus:border-rose-500 border-gray-300 rounded-md\"\n                                        defaultValue={tabs.find((tab) => tab.current).name}\n                                    >\n                                        {tabs.map((tab) => (\n                                            <option key={tab.name}>{tab.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n                                <div className=\"hidden sm:block\">\n                                    <nav className=\"relative z-0 rounded-lg shadow flex divide-x divide-gray-200\" aria-label=\"Tabs\">\n                                        {tabs.map((tab, tabIdx) => (\n                                            <button\n                                                key={tab.name}\n                                                // href={tab.href}\n                                                className={classNames(\n                                                    tab.current ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700',\n                                                    tabIdx === 0 ? 'rounded-l-lg' : '',\n                                                    tabIdx === tabs.length - 1 ? 'rounded-r-lg' : '',\n                                                    'group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-4 text-sm font-medium text-center hover:bg-gray-50 focus:z-10'\n                                                )}\n                                                aria-current={tab.current ? 'page' : undefined}\n                                                onClick={() => {\n                                                    resetTabState(tab.name)\n                                                }}\n                                            >\n                                                <span>{tab.name}</span>\n                                                <span\n                                                    aria-hidden=\"true\"\n                                                    className={classNames(\n                                                        tab.current ? 'bg-rose-500' : 'bg-transparent',\n                                                        'absolute inset-x-0 bottom-0 h-0.5'\n                                                    )}\n                                                />\n                                            </button>\n                                        ))}\n                                    </nav>\n                                </div>\n                            </div>\n                            <CurrentTab />\n                        </>\n                    </main>\n                </div>\n            </div>\n        </div>\n    )\n\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddPostPage/index.js",["419"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/index.js",["420"],"import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport ForumList from './forumList'\nimport api from '../../util/api'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Title', sortType: 'title', reverse: true },\n]\n\nconst searchTypes = [\n    { id: 1, name: 'Title', searchType: 'title' },\n    { id: 2, name: 'Creator', searchType: 'creator'},\n]\n\nexport default function ForumsPage() {\n    const [user, setUser] = useState(null)\n    const [forums, setForums] = useState([])\n    const [error, setError] = useState(null)\n    const [sortType, setSortType] = useState(sortTypes[0])\n    const [searchString, setSearchString] = useState(\"\")\n    const [searchType, setSearchType] = useState(searchTypes[0])\n\n    useEffect(() => {\n        api.getUser()\n            .then(response => setUser(response.data))\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [])\n\n    useEffect(() => {\n        api.getForums()\n            .then((response) => {\n                const sortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        title: 'title',\n                    }\n                    const searchTypes = {\n                        title: 'title',\n                        creator: 'creator',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data]\n                        .filter((forum) => {\n                            if (searchString === '') {\n                                return forum\n                            } else if (searchProperty === \"creator\") {\n                                if (forum[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                                    return forum\n                                }\n                            } else if (forum[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return forum\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setForums(sorted)\n                }\n                sortItems(sortType.sortType, searchString, searchType.searchType)\n            }\n            )\n            .catch((error) => (\n                setError(error)\n            ))\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    if (error) return `Error: ${error.message}`\n\n    return (\n        user &&\n        <div className=\"relative min-h-screen bg-gray-100\">\n            <NavBar\n                buttonContent=\"forum\"\n                disableButton={user.accountType !== \"ADMIN\"}\n                component={<NewButton content='forum' path='/create'/>}\n                user={user}\n                searchString={searchString}\n                setSearchString={setSearchString}\n                searchTypes={searchTypes}\n                searchType={searchType}\n                setSearchType={setSearchType}\n            />\n            <div className=\"py-10\">\n                <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n                    <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n                        <SideBar user={user}/>\n                    </div>\n                    <main className=\"lg:col-span-9 xl:col-span-10\">\n                        <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n                        <div className=\"mt-4\">\n                            <h1 className=\"sr-only\">Forums</h1>\n                            <ForumList\n                                items={forums}\n                                contentType=\"forums\"\n                                path=\"/forumDetails\"\n                                setForums={setForums}\n                                user={user}\n                            />\n                        </div>\n                    </main>\n                </div>\n            </div>\n        </div>\n\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddThreadPage/index.js",["421"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/Common.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/util/api.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/postList.js",["422","423","424","425","426","427"],"import moment from 'moment'\nimport { Link, useRouteMatch } from 'react-router-dom'\nimport {\n  ChatAltIcon,\n  EyeIcon,\n  PlusIcon,\n  ShareIcon,\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\n\nimport PostOptions from \"./postOptions\"\nimport Post from '../../components/post'\nexport default function PostList({ user, setUser, items, forumId, threadId, setThread, setPosts }) {\n  const { url } = useRouteMatch()\n  return (\n    !items || !items.length\n      ? (\n        <div className=\"text-center\">\n          <svg\n            className=\"mx-auto h-12 w-12 text-gray-400\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            aria-hidden=\"true\"\n          >\n            <path\n              vectorEffect=\"non-scaling-stroke\"\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"\n            />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No posts</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">Get started by creating a new post.</p>\n          <div className=\"mt-6\">\n            <Link\n              to={`${url}/create`}>\n              <button\n                className=\"ml-2 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n              >\n                <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\" />\n                New Post\n              </button>\n            </Link>\n          </div>\n        </div>\n      )\n      : (\n        <div className=\"mt-4\">\n          <h1 className=\"sr-only\">Posts</h1>\n          <ul className=\"space-y-4\">\n            {items.map((post) => (\n              <Post\n              user={user}\n              setUser={setUser}\n                forumId={forumId}\n                threadId={threadId}\n                post={post}\n                setThread={setThread}\n                setPosts={setPosts}\n              />\n            ))}\n          </ul>\n        </div>\n      )\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/threadOptions.js",["428","429","430"],"import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport { DotsVerticalIcon, PencilIcon } from '@heroicons/react/solid'\nimport { TrashIcon } from '@heroicons/react/outline'\nimport ConfirmDialog from '../../components/confirmDialog'\nimport { useHistory } from 'react-router'\nimport EditThreadModal from './editThread'\nimport api from '../../util/api'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function ThreadOptions({ user, forumId, thread, setThread }) {\n  const history = useHistory()\n  const [action, setAction] = useState(\"\")\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [error, setError] = useState(null);\n\n  function deleteThread() {\n    api.deleteThread(forumId, thread.id)\n      .then(() => history.push(`/${forumId}/threads`))\n  }\n\n  function toggleClosed(thread) {\n    thread.closed = !thread.closed\n    updateThread(thread)\n  }\n\n  function togglePinned(thread) {\n    thread.pinned = !thread.pinned\n    updateThread(thread)\n  }\n\n  function updateThread(thread) {\n    api.editThread(forumId, thread)\n      .then((response) => setThread(response.data))\n      .catch(error => setError(error))\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"ml-3 relative inline-block text-left z-50\">\n        <div>\n          <Menu.Button className=\"-my-2 p-2 rounded-full bg-white flex items-center text-gray-400 hover:text-gray-600 focus:outline-none focus:ring-2 focus:ring-rose-500\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-right px-4 py-2 text-sm'\n                    )}\n                    onClick={() => setOpenEdit(true)}\n                  >\n                    <span>Edit thread</span>\n                  </button>\n                )}\n              </Menu.Item>\n              {!thread.posts.length &&\n                <Menu.Item>\n                  {({ active }) => (\n                    <button\n                      className={classNames(\n                        active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                        'w-full flex justify-right px-4 py-2 text-sm'\n                      )}\n                      onClick={() => {\n                        setAction(\"delete\")\n                        setOpen(true)\n                      }}\n                    >\n                      <span>Delete thread</span>\n                    </button>\n                  )}\n                </Menu.Item>}\n              { user.accountType === 'ADMIN' &&\n                <>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                          'w-full flex justify-right px-4 py-2 text-sm'\n                        )}\n                        onClick={() => {\n                          setAction(thread.closed ? \"open\" : \"close\")\n                          setOpen(true)\n                        }}\n                      >\n                        <span>{thread.closed ? \"Open\" : \"Close\"} thread</span>\n                      </button>\n                    )}\n                  </Menu.Item>\n                  <Menu.Item>\n                    {({ active }) => (\n                      <button\n                        type=\"button\"\n                        className={classNames(\n                          active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                          'w-full flex justify-right px-4 py-2 text-sm'\n                        )}\n                        onClick={() => {\n                          togglePinned(thread)\n                        }}\n                      >\n                        <span>{thread.pinned ? \"Unpin\" : \"Pin\"} thread</span>\n                      </button>\n                    )}\n                  </Menu.Item>\n                </>}\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"thread\"\n        open={open}\n        setOpen={setOpen}\n        params={[thread]}\n        action={action}\n        onConfirm={action === \"delete\" ? deleteThread : toggleClosed}\n      />\n      <EditThreadModal open={openEdit} setOpen={setOpenEdit} forumId={forumId} thread={thread} setThread={setThread} />\n    </Fragment>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumDetailsPage/threadList.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/forumList.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactForm.js",["431","432","433"],"import React, { useRef, useState, useEffect } from \"react\";\n\nfunction ContactForm({\n  editMode = false,\n  value = \"\",\n  id = 0,\n  onDone,\n}) {\n  const textboxRef = useRef();\n  const [text, setText] = useState(value);\n\n  // useEffect(() => {\n  //   textboxRef.current.focus();\n  //   textboxRef.current.select();\n  // }, []);\n\n  function resetState() {\n    setText(value);\n  }\n\n  function renderAddOrEditBtn() {\n    let buttonText = \"Add\";\n\n    if (editMode) {\n      buttonText = \"Confirm Edit\";\n    }\n\n    return (\n      <button\n        type=\"submit\"\n        className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n        onClick={() => {\n          onDone({\n            id: id,\n            value: text,\n          });\n          resetState();\n        }}\n      >\n        Add\n      </button>\n    );\n  } //end renderAddOrEditBtn\n\n  const addOrEditBtn = renderAddOrEditBtn();\n\n  return (\n    <div>\n      <div className=\"mt-5 sm:flex sm:items-center\">\n        <div className=\"w-full sm:max-w-xs\">\n        <label htmlFor=\"email\" className=\"sr-only\">\n          Contact\n        </label>\n          <input\n            ref={textboxRef}\n            value={text}\n            onChange={(e) => {\n              setText(e.target.value);\n            }}\n            type=\"email\"\n            name=\"contact\"\n            id=\"contact\"\n            className=\"shadow-sm focus:ring-rose-500 focus:border-rose-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n            placeholder=\"@telegramhandle\"\n          />\n        </div>\n        <button\n          type=\"button\"\n          className=\"mt-3 w-full inline-flex items-center justify-center px-4 py-2 border border-transparent shadow-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n          onClick={() => {\n            onDone({\n              id: id,\n              value: text,\n            });\n            resetState();\n          }}\n        >\n          Add\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ContactForm;","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactList.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/breadcrumb/index.js",["434"],"import { Link, useRouteMatch } from 'react-router-dom'\nimport { ChevronRightIcon, HomeIcon } from '@heroicons/react/solid'\n\nexport default function Breadcrumb({ pages }) {\n  const {url} = useRouteMatch()\n  return (\n    // <nav className=\"flex\" aria-label=\"Breadcrumb\">\n    //   <ol role=\"list\" className=\"flex items-center space-x-4\">\n    //     <li>\n    //       <div>\n    //         <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n    //           <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n    //           <span className=\"sr-only\">Home</span>\n    //         </Link>\n    //       </div>\n    //     </li>\n    //     {props.pages && props.pages.map((page) => (\n    //       <li key={page.name}>\n    //         <div className=\"flex items-center\">\n    //           <ChevronRightIcon className=\"flex-shrink-0 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n    //           <Link to={{\n    //             pathname: page.path.pathname,\n    //             state: page.path.state,\n    //           }}\n    //             className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n    //             aria-current={page.current ? 'page' : undefined}\n    //           >\n    //             {page.name}\n    //           </Link>\n    //         </div>\n    //       </li>\n    //     ))}\n    //   </ol>\n    // </nav>\n    <nav className=\"bg-white border-b border-gray-200 flex\" aria-label=\"Breadcrumb\">\n      <ol className=\"max-w-screen-xl w-full mx-auto px-4 flex space-x-4 sm:px-6 lg:px-8\">\n        <li className=\"flex\">\n          <div className=\"flex items-center\">\n            <Link to=\"/\" className=\"text-gray-400 hover:text-gray-500\">\n              <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\" />\n              <span className=\"sr-only\">Home</span>\n            </Link>\n          </div>\n        </li>\n        {pages && pages.map((page) => (\n          <li key={page.name} className=\"flex\">\n            <div className=\"flex items-center\">\n              <svg\n                className=\"flex-shrink-0 w-6 h-full text-gray-200\"\n                viewBox=\"0 0 24 44\"\n                preserveAspectRatio=\"none\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                aria-hidden=\"true\"\n              >\n                <path d=\"M.293 0l22 22-22 22h1.414l22-22-22-22H.293z\" />\n              </svg>\n              <Link to={page.path}\n                className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n                aria-current={page.path === url ? 'page' : undefined}\n              >\n                {page.name}\n              </Link>\n            </div>\n          </li>\n        ))}\n      </ol>\n    </nav>\n  )\n}\n","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/sideBar/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/inputText/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/newButton/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/navBar/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/textArea/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/sectionHeadDrop/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/postOptions.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/editThread.js",["435"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/forumOptions.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/contacts/ContactItem.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/confirmDialog/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/navBar/profileDropDown.js",["436"],"import { Fragment } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Menu, Transition } from '@headlessui/react'\nimport { removeUserSession } from '../../util/Common'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function ProfileDropDown({ user }) {\n  const history = useHistory()\n  return (\n    <Menu as=\"div\" className=\"flex-shrink-0 relative ml-5\">\n      <div>\n        <Menu.Button className=\"bg-white rounded-full flex focus:outline-none focus:ring-rose-500\">\n          <span className=\"sr-only\">Open user menu</span>\n          {user.profilePicture === \"default\"\n            ?\n            <div className=\"max-w-md mx-auto my-3\">\n              <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-pink-300 to-pink-600 hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                <h2 style={{ fontSize: 18 }}>{user.username.substring(0, 1)}</h2>\n              </div>\n            </div>\n            :\n            <img\n              className=\"h-10 w-10 rounded-full sm:h-10 sm:w-10\"\n              src={user.profilePicture}\n              alt={user.username.substring(0, 1)}\n            />\n          }\n        </Menu.Button>\n      </div>\n      <Transition\n        as={Fragment}\n        enter=\"transition ease-out duration-100\"\n        enterFrom=\"transform opacity-0 scale-95\"\n        enterTo=\"transform opacity-100 scale-100\"\n        leave=\"transition ease-in duration-75\"\n        leaveFrom=\"transform opacity-100 scale-100\"\n        leaveTo=\"transform opacity-0 scale-95\"\n      >\n        <Menu.Items className=\"origin-top-right absolute z-10 right-0 mt-2 w-48 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 py-1 focus:outline-none\">\n          <Menu.Item key='Your Profile'>\n            {({ active }) => (\n              <button\n                className={classNames(\n                  active ? 'bg-gray-100' : '',\n                  'w-full text-left py-2 px-4 text-sm text-gray-700'\n                )}\n                onClick={() => {\n                  history.push(`/profile/${user.id}`)\n                  window.location.reload()\n                }}>\n                Your Profile\n              </button>\n            )}\n          </Menu.Item>\n          <Menu.Item key='Sign out'>\n            {({ active }) => (\n              <button\n                className={classNames(\n                  active ? 'bg-gray-100' : '',\n                  'w-full text-left py-2 px-4 text-sm text-gray-700'\n                )}\n                onClick={() => {\n                  removeUserSession()\n                  history.push(\"/login\")\n                }}>\n                Sign out\n              </button>\n            )}\n          </Menu.Item>\n        </Menu.Items>\n      </Transition>\n    </Menu>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/editPost.js",["437"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ForumsPage/editForum.js",["438","439"],"import { Fragment, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport TextArea from '../../components/textArea'\n\n\nexport default function EditForumModal({ forum, setForums, open, setOpen }) {\n  const [title, setTitle] = useState(forum.title)\n  const [description, setDescription] = useState(forum.description)\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (title !== '' && description !== '') {\n      editForum()\n      setOpen(false)\n      alert(\"Successfully edited forum.\")\n    }\n  }\n\n  function editForum() {\n    forum.title = title\n    forum.description = description\n    axios\n      .put(`http://localhost:8080/NUStartApplication-war/webresources/forums/${forum.id}`, forum)\n      .then(() => {\n        axios.get(\"http://localhost:8080/NUStartApplication-war/webresources/forums\")\n          .then((response) => setForums(response.data))\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-50 inset-0 overflow-y-auto\" onClose={() => {\n        setTitle(forum.title)\n        setDescription(forum.description)\n        setOpen(false)\n      }}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit forum\n                  </Dialog.Title>\n                  <div className=\"grid grid-cols-3 gap-6 text-left\">\n                    <div className=\"col-span-3\">\n                      <InputText\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        label=\"Title\"\n                        placeholder=\"Enter a forum title\"\n                        autoComplete=\"title\"\n                        required={true}\n                        value={title}\n                        onChange={(e) => setTitle(e.target.value)}\n                      />\n                    </div>\n                    <div className=\"col-span-3\">\n                      <TextArea\n                        name=\"desc\"\n                        id=\"desc\"\n                        label=\"Description\"\n                        required={true}\n                        helpText=\"Enter a description for this forum.\"\n                        value={description}\n                        onChange={(e) => setDescription(e.target.value)}\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/comment/index.js",["440"],"import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\nimport CommentOptions from \"../commentOptions\"\nimport api from \"../../util/api\"\n\nexport default function Comment({ user, comment, guideId, setGuide, setComments }) {\n  const [edit, setEdit] = useState(false)\n  const [editComment, setEditComment] = useState(comment.content)\n  const [error, setError] = useState(null)\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    updateComment()\n    setEdit(false)\n  }\n\n  function updateComment() {\n    comment.content = editComment\n    // console.log(comment)\n    api.editComment(guideId, comment)\n      .then((response) => {\n        setGuide(response.data)\n        // console.log(response.data)\n        setComments(response.data.comments)\n      })\n      .catch(error => setError(error))\n  }\n\n  return (\n    <li key={comment.id}>\n      <div className=\"flex space-x-3\">\n        {!edit ?\n          <>\n            <div className=\"flex-shrink-0\">\n              {comment.creator.profilePicture === \"default\"\n                ?\n                <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                  <h2 className=\"text-xs\">{comment.creator.username.substring(0, 1)}</h2>\n                </div>\n                :\n                <img\n                  className=\"h-10 w-10 rounded-full\"\n                  src={comment.creator.profilePicture}\n                  alt={comment.creator.username.substring(0, 1)}\n                />\n              }\n            </div>\n            <div className=\"min-w-0 flex-1\">\n              <div>\n                <div className=\"text-sm\">\n                  <Link to={`/profile/${comment.creator.id}`} className=\"font-medium text-gray-900\">\n                    {comment.creator.username}\n                  </Link>\n                </div>\n                <div className=\"mt-1 text-sm text-gray-700\">\n                  <p>{comment.content}</p>\n                </div>\n                <div className=\"mt-2 text-sm space-x-2\">\n                  <span className=\"text-gray-500 font-medium\">{moment().subtract(moment().diff(comment.created.slice(0, -5))).calendar()}</span>{' '}\n                </div>\n              </div>\n            </div>\n          </>\n          :\n          <div className=\"min-w-0 flex-1\">\n            <form onSubmit={handleSubmit}>\n              <textarea\n                id=\"comment\"\n                name=\"comment\"\n                rows={3}\n                className=\"shadow-sm block w-full focus:ring-rose-500 focus:border-rose-500 sm:text-sm border border-gray-300 rounded-md\"\n                placeholder=\"Write a comment\"\n                required\n                value={editComment}\n                onChange={(e) => setEditComment(e.target.value)}\n              />\n              <div className=\"mt-3 flex items-center justify-end\">\n                <button\n                  type=\"button\"\n                  className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                  onClick={() => setEdit(false)}\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  className=\"ml-5 inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        }\n\n        {(user.id === comment.creator.id || user.accountType === \"ADMIN\") &&\n          <div className=\"flex-shrink-0 self-center flex\">\n            <CommentOptions\n              edit={edit}\n              setEdit={setEdit}\n              comment={comment}\n              guideId={guideId}\n              setGuide={setGuide}\n              setComments={setComments} />\n          </div>\n        }\n      </div>\n    </li>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentsList/index.js",["441"],"import { QuestionMarkCircleIcon } from \"@heroicons/react/outline\"\nimport Comment from \"../comment\"\n\nexport default function CommentsList({comments}) {\n  return (\n    <section aria-labelledby=\"notes-title\">\n      <div className=\"bg-white shadow sm:rounded-lg sm:overflow-hidden\">\n        <div className=\"divide-y divide-gray-200\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h2 id=\"notes-title\" className=\"text-lg font-medium text-gray-900\">\n              Notes\n            </h2>\n          </div>\n          <div className=\"px-4 py-6 sm:px-6\">\n            <ul className=\"space-y-8\">\n              {comments.map((comment) => (\n                <Comment comment={comment} />\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div className=\"bg-gray-50 px-4 py-6 sm:px-6\">\n          <div className=\"flex space-x-3\">\n            {/* <div className=\"flex-shrink-0\">\n                                        <img className=\"h-10 w-10 rounded-full\" src={user.imageUrl} alt=\"\" />\n                                    </div> */}\n            <div className=\"min-w-0 flex-1\">\n              <form action=\"#\">\n                <div>\n                  <label htmlFor=\"comment\" className=\"sr-only\">\n                    About\n                  </label>\n                  <textarea\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows={3}\n                    className=\"shadow-sm block w-full focus:ring-blue-500 focus:border-blue-500 sm:text-sm border border-gray-300 rounded-md\"\n                    placeholder=\"Add a note\"\n                    defaultValue={''}\n                  />\n                </div>\n                <div className=\"mt-3 flex items-center justify-between\">\n                  <a\n                    href=\"#\"\n                    className=\"group inline-flex items-start text-sm space-x-2 text-gray-500 hover:text-gray-900\"\n                  >\n                    <QuestionMarkCircleIcon\n                      className=\"flex-shrink-0 h-5 w-5 text-gray-400 group-hover:text-gray-500\"\n                      aria-hidden=\"true\"\n                    />\n                    <span>Some HTML is okay.</span>\n                  </a>\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\"\n                  >\n                    Comment\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}",["442","443"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentsSection/index.js",["444"],"import { useState } from \"react\"\nimport Comment from \"../comment\"\nimport api from \"../../util/api\"\n\nexport default function CommentsSection({ user, comments, guideId, setGuide, setComments }) {\n  const [comment, setComment] = useState(\"\")\n  const [error, setError] = useState(null)\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    addComment()\n    setComment(\"\")\n  }\n\n  function addComment() {\n    api.createComment(guideId, {\n      content: comment,\n      creator: user,\n    })\n      .then((response) => {\n        setGuide(response.data)\n        setComments(response.data.comments)\n      })\n      .catch((error) => setError(error))\n  }\n\n  return (\n    <section aria-labelledby=\"comments-title\" className=\"mt-8 xl:mt-10\">\n      <div className=\"bg-white shadow sm:rounded-lg sm:overflow-hidden\">\n        <div className=\"divide-y divide-gray-200\">\n          <div className=\"px-4 py-5 sm:px-6\">\n            <h2 id=\"notes-title\" className=\"text-lg font-medium text-gray-900\">\n              Comments\n            </h2>\n          </div>\n          <div className=\"px-4 py-6 sm:px-6\">\n            <ul className=\"space-y-8\">\n              {!comments.length ?\n                <li key=\"No comments\">\n                  <div className=\"flex space-x-3\">\n                    <div>\n                      <div className=\"text-sm\">\n                        No comments\n                      </div>\n                    </div>\n                  </div>\n                </li>\n                : comments.map((comment) => (\n                  <Comment\n                    user={user}\n                    comment={comment}\n                    guideId={guideId}\n                    setGuide={setGuide}\n                    setComments={setComments} />\n                ))}\n            </ul>\n          </div>\n\n        </div>\n        <div className=\"bg-gray-50 px-4 py-6 sm:px-6\">\n          <div className=\"flex space-x-3\">\n            <div className=\"min-w-0 flex-1\">\n              <form onSubmit={handleSubmit}>\n                <div>\n                  <label htmlFor=\"comment\" className=\"sr-only\">\n                    Comments\n                  </label>\n                  <textarea\n                    id=\"comment\"\n                    name=\"comment\"\n                    rows={3}\n                    className=\"shadow-sm block w-full focus:ring-rose-500 focus:border-rose-500 sm:text-sm border border-gray-300 rounded-md\"\n                    placeholder=\"Write a comment\"\n                    required\n                    value={comment}\n                    onChange={(e) => setComment(e.target.value)}\n                  />\n                </div>\n                <div className=\"mt-3 flex items-center justify-end\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex items-center justify-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                  >\n                    Comment\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/CategoriesPage/index.js",["445","446","447","448","449","450"],"import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport api from '../../util/api'\nimport CategoriesTable from '../../components/categoriesTable'\nimport NewButton from '../../components/newButton'\nimport { useRouteMatch } from 'react-router'\n\nconst tabs = [\n  { name: 'Recent', href: '#', current: true },\n  { name: 'Most Liked', href: '#', current: false },\n  { name: 'Most Answers', href: '#', current: false },\n]\nconst searchTypes = [\n  { id: 1, name: 'Name', searchType: 'name' },\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CategoriesPage() {\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [open, setOpen] = useState(true)\n  const [error, setError] = useState(null)\n  const [sortType, setSortType] = useState('created')\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            created: 'created',\n            name: 'name',\n          }\n          const searchTypes = {\n            name: 'name',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data]\n            .filter((user) => {\n              if (searchString === '') {\n                return user\n              } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                return user\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]))\n          setCategories(sorted)\n        }\n        searchSortItems(sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    user &&\n      <div className=\"relative min-h-screen bg-gray-100\">\n        <NavBar\n          buttonContent=\"forum\"\n          disableButton={user.accountType !== \"ADMIN\"}\n          component={\n            <NewButton content='category' path={`${url}/create`} />\n          }\n          user={user}\n          searchString={searchString}\n          setSearchString={setSearchString}\n          searchTypes={searchTypes}\n          searchType={searchType}\n          setSearchType={setSearchType}\n        />\n        <div className=\"py-10\">\n          <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n            <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n              <SideBar user={user} />\n            </div>\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Categories</h1>\n                <CategoriesTable items={categories} dataLimit={10} />\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddGuidePage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js",["451","452"],"import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport GuideList from '../../components/Guides/guideList'\nimport api from '../../util/api'\nimport GuideCategories from '../../components/guideCategories'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'dateCreated', reverse: false },\n  { id: 2, name: 'Title', sortType: 'title', reverse: true },\n]\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function GuidesListPage() {\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [guides, setGuides] = useState([])\n  const [category, setCategory] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [error, setError] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [sortType, setSortType] = useState(sortTypes[0])\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        setCategories(response.data)\n        setSelected(response.data.find((cat) => cat.id == id))\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  useEffect(() => {\n    api.getCategory(id)\n      .then((response) => {\n        const sortItems = (type, searchString, searchType) => {\n          const types = {\n            dateCreated: 'dateCreated',\n            title: 'title',\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.guides]\n            .filter((guide) => {\n              if (searchString === '') {\n                return guide\n              } else if (searchProperty === \"creator\") {\n                if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return guide\n                }\n              } else if (guide[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return guide\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n              || y['dateCreated'].localeCompare(x['dateCreated']))\n          setGuides(sorted)\n        }\n        sortItems(sortType.sortType, searchString, searchType.searchType)\n        setCategory(response.data)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"guide\"\n        disableButton={user.accountType === \"STUDENT\"}\n        component={<NewButton content='guide' path=\"/createGuide\" />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"px-4 sm:px-0 flex\">\n              {(categories.length && selected) &&\n                <>\n                  <div className=\"mr-20 flex-1\">\n                    <GuideCategories categories={categories} selected={selected} setSelected={setSelected} />\n                  </div>\n                  <div className=\"flex-1\">\n                    <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n                  </div>\n                </>\n              }\n            </div>\n            <div className=\"mt-4\">\n              <h1 className=\"sr-only\">Guides</h1>\n              <PostPaginator\n                data={guides}\n                component={GuideList}\n                dataLimit={10}\n                setGuides={setGuides}\n                user={user}\n              />\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuideDetailsPage/index.js",["453"],"import moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport GuideOptions from '../../components/Guides/guideOptions';\nimport {\n  CalendarIcon,\n  ChatAltIcon,\n} from '@heroicons/react/solid'\n\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\n\nimport api from '../../util/api';\nimport CommentsSection from '../../components/commentsSection';\n\nexport default function GuideDetailsPage() {\n  const { categoryId, guideId } = useParams()\n  const [user, setUser] = useState(null)\n  const [category, setCategory] = useState(null)\n  const [guide, setGuide] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [content, setContent] = useState(\"\")\n  const [comments, setComments] = useState([])\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  useEffect(() => {\n    api.getGuide(guideId)\n      .then(response => {\n        setGuide(response.data)\n        setTitle(response.data.title)\n        setContent(response.data.content)\n        setComments(response.data.comments)\n      })\n      .catch((error) => setError(error))\n  }, [guideId])\n\n  useEffect(() => {\n    api.getCategory(categoryId)\n      .then(response => {\n        setCategory(response.data)\n      })\n      .catch((error) => setError(error))\n  }, [categoryId])\n\n  return (\n    (user && guide && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"py-8 xl:py-10\">\n              <div className=\"max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 xl:max-w-5xl xl:grid xl:grid-cols-3\">\n                <div className=\"xl:col-span-2 xl:pr-8 xl:border-r xl:border-gray-200\">\n                  <div>\n                    <div>\n                      <div className=\"md:flex md:items-center md:justify-between md:space-x-4 xl:border-b xl:pb-6\">\n                        <div>\n                          <h1 className=\"text-2xl font-bold text-gray-900\">{title}</h1>\n                          <p className=\"mt-2 text-sm text-gray-500\">\n                            By\n                            <Link to={`/profile/${guide.creator.id}`} className=\"font-medium text-gray-900\" >\n                              {' ' + guide.creator.username}\n                            </Link>\n                          </p>\n                        </div>\n                        <div className=\"mt-4 flex space-x-3 md:mt-0\">\n                          {(guide.creator.id === user.id || user.accountType === \"ADMIN\") &&\n                            <GuideOptions\n                              categoryId={categoryId}\n                              setCategory={setCategory}\n                              guide={guide}\n                              setGuide={setGuide}\n                            />}\n                        </div>\n                      </div>\n                      <aside className=\"mt-8 xl:hidden\">\n                        <h2 className=\"sr-only\">Details</h2>\n                        <div className=\"space-y-5\">\n                          <div className=\"flex items-center space-x-2\">\n                            <ChatAltIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <span className=\"text-gray-900 text-sm font-medium\">{guide.comments.length} comments</span>\n                          </div>\n                          <div className=\"flex items-center space-x-2\">\n                            <CalendarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <span className=\"text-gray-900 text-sm font-medium\">\n                              Created on {moment(guide.dateCreated.slice(0, -5)).format(\"MMM Do, YYYY\")}\n                            </span>\n                          </div>\n                        </div>\n                        <div className=\"mt-6 border-t border-b border-gray-200 py-6 space-y-8\">\n                          <div>\n                            <h2 className=\"text-sm font-medium text-gray-500\">Category</h2>\n                            <ul className=\"mt-2 leading-8\">\n                              <li className=\"inline\">\n                                <Link\n                                  to={`/categories/${categoryId}/guides`}\n                                  className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5\">\n                                  <div className=\"absolute flex-shrink-0 flex items-center justify-center\">\n                                    <span className=\"h-1.5 w-1.5 rounded-full bg-rose-500\" aria-hidden=\"true\" />\n                                  </div>\n                                  <div className=\"ml-3.5 text-sm font-medium text-gray-900\">{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</div>\n                                </Link>\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </aside>\n                      <img\n                        src={guide.pictureUrl}\n                        alt=\"\"\n                      />\n                      <div className=\"py-3 xl:pt-6 xl:pb-0\">\n                        <h2 className=\"sr-only\">Content</h2>\n                        <div className=\"prose max-w-none\">\n                          <div dangerouslySetInnerHTML={{ __html: content }} />\n                        </div>\n                      </div>\n\n                      <CommentsSection\n                        user={user}\n                        comments={comments}\n                        guideId={guideId}\n                        setGuide={setGuide}\n                        setComments={setComments} />\n                    </div>\n                  </div>\n                </div>\n                <aside className=\"hidden xl:block xl:pl-8\">\n                  <h2 className=\"sr-only\">Details</h2>\n                  <div className=\"space-y-5\">\n                    <div className=\"flex items-center space-x-2\">\n                      <ChatAltIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      <span className=\"text-gray-900 text-sm font-medium\">{guide.comments.length} comments</span>\n                    </div>\n                    <div className=\"flex items-center space-x-2\">\n                      <CalendarIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      <span className=\"text-gray-900 text-sm font-medium\">\n                        Created on {moment(guide.dateCreated.slice(0, -5)).format(\"MMM D, YYYY\")}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"mt-6 border-t border-gray-200 py-6 space-y-8\">\n                    <div>\n                      <h2 className=\"text-sm font-medium text-gray-500\">Category</h2>\n                      <ul className=\"mt-2 leading-8\">\n                        <li className=\"inline\">\n                          <Link\n                            to={`/categories/${categoryId}/guides`}\n                            className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5\">\n                            <div className=\"absolute flex-shrink-0 flex items-center justify-center\">\n                              <span className=\"h-1.5 w-1.5 rounded-full bg-rose-500\" aria-hidden=\"true\" />\n                            </div>\n                            <div className=\"ml-3.5 text-sm font-medium text-gray-900\">{category.name.charAt(0).toUpperCase() + category.name.slice(1)}</div>\n                          </Link>\n                        </li>\n                      </ul>\n                    </div>\n                  </div>\n                </aside>\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesPage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddCategoryPage/index.js",["454"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport api from '../../util/api';\n\nexport default function AddCategoryPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [name, setName] = useState(\"\")\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    createCategory()\n    alert(\"Successfully created category.\")\n  }\n\n  function createCategory() {\n    api.createCategory({\n      name: name,\n      guides: [],\n      creator: user,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user}/>\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user}/>\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Category</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={name}\n                          onChange={(e) => setName(e.target.value)}\n                        />\n                      </div>\n        \n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddAdminPage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/guidesTab.js",["455"],"import GuideItem from \"./guideItem\"\n\nexport default function GuidesTab({ guides = [] }) {\n\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {guides.map((guide) => (\n                    <li key={guide.id}>\n                        <GuideItem guide={guide} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/contactsTab.js",["456"],"import { useEffect, useState } from \"react\";\nimport ContactForm from '../../components/contacts/ContactForm'\nimport ContactList from '../../components/contacts/ContactList'\nimport api from \"../../util/api\";\n\nexport default function ContactsTab({ editMode = false, user }) {\n\n    const [contactStore, setContactStore] = useState({ contacts: [], currentId: 0 })\n\n    useEffect(() => {\n        async function getSize() {\n            const size = await api.getContactSize()\n            setContactStore({ contacts: user.contacts, currentId: size.data + 1 })\n            console.log(size)\n        }\n        getSize()\n    }, [user.id])\n\n    async function deleteContact(contactId) {\n        await api.deleteContact(user.id, contactId)\n        .then(response => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data\n        }))\n    }\n\n    function handleDelete(id) {\n        const { contacts } = contactStore;\n        const updatedNotes = contacts.filter((n) => {\n            return n.id !== id;\n        });\n\n        setContactStore((oldNotesStore) => ({\n            currentId: oldNotesStore.currentId,\n            contacts: updatedNotes,\n        }));\n        deleteContact(id)\n    }\n\n    async function addContact(newContact) {\n        await api.createContact(user.id, newContact)\n        .then((response) => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data,\n        }))\n        .then(() => console.log(contactStore))\n    }\n\n    function handleAddEdit(note) {\n        const { currentId, contacts } = contactStore;\n        if (note.id === 0) {\n            //add action\n            if (note.value.trim() === \"\") return;\n\n            note.id = currentId + 1;\n\n            setContactStore({\n                currentId: note.id,\n                contacts: [...contacts, note],\n            });\n            ///console.log(note)\n            addContact(note)\n\n        } else {\n            //edit action\n            if (note.value.trim() === \"\") {\n                //cancel edit\n                return;\n            } else {\n                //find the note\n                const updatedNotes = contacts.map((n) => {\n                    if (n.id === note.id) {\n                        note.editMode = false;\n                        return note;\n                    } else {\n                        return n;\n                    }\n                });\n\n                setContactStore((oldContactsStore) => ({\n                    currentId: oldContactsStore.currentId,\n                    contacts: updatedNotes,\n                }));\n            }\n        }\n    }\n\n    const { contacts } = contactStore\n\n    return (\n        <div className=\"p-5 rounded-md shadow-sm -space-y-px\">\n            <div className=\"bg-white sm:rounded-lg\">\n                <div className=\"px-4 py-5 sm:p-3\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Contacts</h3>\n                    <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n                        Help others find you! This will be visible to other users.\n                    </span>\n                    <br />\n                    <div className=\"note-container\">\n                        {editMode \n                        ? <ContactForm onDone={handleAddEdit} />\n                        : null\n                        }\n                        <br />\n                        <ContactList\n                            contacts={contacts}\n                            onDelete={handleDelete}\n                            onDone={handleAddEdit}\n                        />\n                    </div>\n                </div>\n            </div>\n            <br />\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/postsTab.js",["457"],"\nimport PostItem from \"./postItem\";\n\nexport default function PostsTab({ posts }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {posts.map((p) => (\n                    <li key={p.creator.email}>\n                        <PostItem p={p} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/threadsTab.js",["458"],"\nimport ThreadItem from './threadItem'\n\nexport default function ThreadsTab({ threads = [] }) {\n\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {threads.map((thread) => (\n                    <li key={thread.id}>\n                        <ThreadItem thread={thread} />\n                    </li>\n                ))}\n            </ul>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/accountTab.js",["459","460","461","462","463","464"],"import { Fragment, useState, useEffect } from 'react'\nimport { Listbox, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport { uploadFile } from 'react-s3'\nimport UploadImage from '../../components/uploadImage'\nimport {\n    AnnotationIcon,\n    CheckIcon,\n    NewspaperIcon,\n    SelectorIcon,\n} from '@heroicons/react/solid'\nimport {\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport api from '../../util/api'\nimport { useHistory } from 'react-router'\nimport UploadProfileImage from '../../components/uploadProfileImage'\nimport moment from 'moment'\n\nconst years = [\n    { id: 1, name: '1' },\n    { id: 2, name: '2' },\n    { id: 3, name: '3' },\n    { id: 4, name: '4' },\n    { id: 5, name: '5' },\n    { id: 6, name: 'Part-time' },\n    { id: 7, name: 'Graduate' },\n    { id: 8, name: 'PhD' },\n]\n\nconst faculties = [\n    { id: 1, name: 'Arts & Social Sciences' },\n    { id: 2, name: 'Business' },\n    { id: 3, name: 'Computing' },\n    { id: 4, name: 'Continuing and Lifelong Education' },\n    { id: 5, name: 'Dentistry' },\n    { id: 6, name: 'Design & Environment' },\n    { id: 7, name: 'Duke-NUS' },\n    { id: 8, name: 'Engineering' },\n    { id: 9, name: 'Integrative Sciences & Engineering' },\n    { id: 10, name: 'Law' },\n    { id: 11, name: 'Medicine' },\n    { id: 12, name: 'Music' },\n    { id: 13, name: 'Public Health' },\n    { id: 14, name: 'Public Policy' },\n    { id: 15, name: 'Science' },\n    { id: 16, name: 'University Scholars Program' },\n    { id: 17, name: 'Yale-NUS' },\n]\n\nexport default function AccountTab({ editMode = false, uid }) {\n    const [user, setUser] = useState(null)\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [course, setCourse] = useState(\"\")\n    const [year, setYear] = useState(years[0])\n    const [faculty, setFaculty] = useState(faculties[0])\n    const [message, setMessage] = useState('')\n    const [profilePic, setProfilePic] = useState('')\n    const [coverImage, setCoverImage] = useState('')\n    const [selectedFile, setSelectedFile] = useState(null)\n    const [selectedCover, setSelectedCover] = useState(null)\n    const [error, setError] = useState(null)\n\n    const history = useHistory()\n\n    const S3_BUCKET = 'nustart';\n    const REGION = 'ap-southeast-1';\n    const ACCESS_KEY = 'AKIARTYBCSQYJNUGQWLJ';\n    const SECRET_ACCESS_KEY = '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';\n\n    const config = {\n        bucketName: S3_BUCKET,\n        region: REGION,\n        accessKeyId: ACCESS_KEY,\n        secretAccessKey: SECRET_ACCESS_KEY,\n    }\n\n    useEffect(() => {\n        async function getLogged() {\n            const u = await api.getUser(uid)\n            setEmail(u.data.email)\n            setName(u.data.username)\n            setProfilePic(u.data.profilePicture)\n            setCoverImage(u.data.coverImage)\n            if (u.data.accountType === \"STUDENT\" || (u.data.course !== \"default\" && u.data.yr !== \"default\")) {\n                setCourse(u.data.course)\n                const y = years.filter((y) => y.name === u.data.yr.toString())[0]\n                setYear(y)\n                //console.log(year)\n                const f = faculties.filter((f) => f.name === u.data.faculty)[0]\n                setFaculty(f)\n                //console.log(faculty)\n            } else if (u.data.accountType === \"STAFF\") {\n                const f = faculties.filter((f) => f.name === u.data.faculty)[0]\n                setFaculty(f)\n            }\n            setUser(u.data)\n        }\n        getLogged()\n    }, [uid])\n\n    function classNames(...classes) {\n        return classes.filter(Boolean).join(' ')\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        //console.log(selectedFile)\n\n        if (selectedFile === null && selectedCover === null) {\n            updateProfile()\n        } else if (selectedFile !== null && selectedCover !== null) {\n            console.log('multiple')\n            const file = [selectedFile, selectedCover]\n            handleMultipleUploads(file)\n        } else {\n            console.log('single')\n            const file = selectedCover === null ? selectedFile : selectedCover\n            handleUpload(file)\n        }\n    }\n\n    const handleUpload = async (file) => {\n        uploadFile(file, config)\n            .then(data => {\n                updateProfile([data.location])\n            })\n            .catch(error => setError(error))\n    }\n\n    const handleMultipleUploads = async (file) => {\n        const locations = []\n        uploadFile(file[0], config)\n            .then(data =>\n                locations.push(data.location)\n            ).then(() => uploadFile(file[1], config)\n                .then(data => locations.push(data.location))\n                .then(() => updateProfile(locations)))\n            .catch(error => setError(error))\n    }\n\n    const handleCoverInput = (e) => {\n        setSelectedCover(e.target.files[0])\n        // setFiles([(prev) => prev].push(e.target.files[0]))\n    }\n\n    const handleFileInput = (e) => {\n        setSelectedFile(e.target.files[0])\n        // setFiles([(prev) => prev].push(e.target.files[0]))\n    }\n\n    function updateProfile(locations = []) {\n        //console.log(locations)\n        if (user.accountType === 'STAFF') {\n            user.faculty = faculty.name\n        } else if (user.accountType === 'STUDENT') {\n            user.course = course\n            user.yr = year.name\n            user.faculty = faculty.name\n        }\n        user.email = email\n        user.username = name\n        user.profilePicture = selectedFile !== null ? locations[0] : profilePic\n\n        if (selectedFile !== null && selectedCover !== null) {\n            user.coverImage = locations[1]\n        } else if (selectedFile === null && selectedCover !== null) {\n            user.coverImage = locations[0]\n        } else {\n            user.coverImage = coverImage\n        }\n\n        api.editUser(user.id, user)\n            .then(response => setUser(response.data))\n            //.then(() => history.push(`/profile/${uid}`))\n            .then(() => window.location.reload())\n    }\n\n    function ViewMode() {\n        return (\n            <div className=\"h-full flex\">\n                <div className=\"hidden lg:flex lg:flex-shrink-0\">\n                </div>\n                <div className=\"flex flex-col min-w-0 flex-1 overflow-hidden\">\n\n                    <div className=\"flex-1 relative z-0 flex overflow-hidden\">\n                        <main className=\"flex-1 relative z-0 overflow-y-auto focus:outline-none xl:order-last\">\n                            <article>\n                                <div className=\"mt-6 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8\">\n                                    <dl className=\"grid grid-cols-1 gap-x-4 gap-y-8 sm:grid-cols-2\">\n                                        <div key=\"email\" className=\"sm:col-span-1\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Email</dt>\n                                            <dd className=\"mt-1 text-sm text-gray-900\">{user.email}</dd>\n                                        </div>\n                                        <div className=\"sm:col-span-2\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Joined</dt>\n                                            <dd\n                                                className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                            >\n                                                {moment(user.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                                            </dd>\n                                        </div>\n                                        <div className=\"sm:col-span-2\">\n                                            <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                                            <dd\n                                                className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                            >\n                                                {user.username}\n                                            </dd>\n                                        </div>\n                                        {user.accountType === 'STUDENT' && user.course == 'default' && user.yr == '0'\n                                            ?\n                                            <>\n                                                <div className=\"sm:col-span-2\">\n                                                    <dt className=\"text-sm font-medium text-gray-500\">Course</dt>\n                                                    <dd\n                                                        className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                                    >\n                                                        {user.course}\n                                                    </dd>\n                                                </div>\n                                                <div className=\"sm:col-span-2\">\n                                                    <dt className=\"text-sm font-medium text-gray-500\">Year</dt>\n                                                    <dd\n                                                        className=\"mt-1 max-w-prose text-sm text-gray-900 space-y-5\"\n                                                    >\n                                                        {user.yr}\n                                                    </dd>\n                                                </div>\n                                            </>\n                                            : null\n                                        }\n                                    </dl>\n                                    <div className=\"mt-8 max-w-5xl mx-auto px-1 pb-12 sm:px-1 lg:px-1\">\n\n                                    </div>\n                                </div>\n                            </article>\n                        </main>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    return (\n        user &&\n        <div>\n            {editMode\n                ? <div className=\"pt-3 space-y-6 sm:pt-5 sm:space-y-5\">\n                    <form onSubmit={handleSubmit}>\n                        <div className=\"p-5 space-y-3 sm:space-y-5\">\n                            {message &&\n                                <div className=\"rounded-md bg-green-50 p-4\">\n                                    <div className=\"flex\">\n                                        <div className=\"flex-shrink-0\">\n                                            <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"ml-3\">\n                                            <h3 className=\"text-sm font-medium text-green-800\">Your profile was updated successfully</h3>\n                                            <div className=\"mt-2 text-sm text-green-700\">\n                                                {message.message}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start\">\n\n                                <label htmlFor=\"username\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                    Name\n                                </label>\n                                <div className=\"mt-1 sm:mt-0 sm:col-span-2 max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                    <InputText\n                                        type=\"text\"\n                                        name=\"username\"\n                                        id=\"username\"\n                                        autoComplete=\"given-name\"\n                                        required={true}\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                    Email\n                                </label>\n                                <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                    <InputText\n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        autoComplete=\"email\"\n                                        required={true}\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"col-span-3\">\n                                <label className=\"block pb-4 sm:border-t sm:border-gray-200 sm:pt-5 text-sm font-medium text-gray-700\">Profile picture</label>\n                                {!selectedFile ?\n                                    <div>\n                                        <UploadProfileImage handleProfileInput={handleFileInput} accept=\".jpg, .png, .gif\" />\n                                    </div>\n                                    : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                                        {selectedFile.name}\n                                        <button className=\"text-gray-700\" onClick={() => setSelectedFile(null)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                }\n                            </div>\n\n                            <div className=\"col-span-3\">\n                                <label className=\"block pb-4 sm:border-t sm:border-gray-200 sm:pt-5 text-sm font-medium text-gray-700\">Cover Image</label>\n                                {!selectedCover ?\n                                    <div >\n                                        <UploadImage handleFileInput={handleCoverInput} accept=\".jpg, .png, .gif\" />\n                                        {/* <input type=\"file\" onChange={(e) => setCoverImage(e.target.files[0])}></input> */}\n                                    </div>\n                                    : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                                        {selectedCover.name}\n                                        <button className=\"text-gray-700\" onClick={() => setSelectedCover(null)}>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                                            </svg>\n                                        </button>\n                                    </div>\n                                }\n                            </div>\n\n                            {user.accountType === \"STUDENT\"\n                                ?\n                                <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"country\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Year\n                                    </label>\n                                    <Listbox value={year} onChange={setYear}>\n                                        <div className=\"mt-1 relative\">\n                                            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                                <span className=\"block truncate\">{year.name}</span>\n                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                    <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                </span>\n                                            </Listbox.Button>\n\n                                            <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                                <Listbox.Options className=\"absolute z-10 mt-1 max-w-lg block w-full bg-white shadow-sm max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:max-w-xs sm:text-sm\">\n                                                    {years.map((year) => (\n                                                        <Listbox.Option\n                                                            key={year.id}\n                                                            className={({ active }) =>\n                                                                classNames(\n                                                                    active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                    'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                                )\n                                                            }\n                                                            value={year}\n                                                        >\n                                                            {({ selected, active }) => (\n                                                                <>\n                                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                        {year.name}\n                                                                    </span>\n\n                                                                    {selected ? (\n                                                                        <span\n                                                                            className={classNames(\n                                                                                active ? 'text-white' : 'text-rose-600',\n                                                                                'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                            )}\n                                                                        >\n                                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                        </span>\n                                                                    ) : null}\n                                                                </>\n                                                            )}\n                                                        </Listbox.Option>\n                                                    ))}\n                                                </Listbox.Options>\n                                            </Transition>\n                                        </div>\n                                    </Listbox>\n\n                                </div>\n                                : null\n                            }\n                            {user.accountType !== \"ADMIN\"\n                                ? <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"street-address\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Faculty\n                                    </label>\n                                    <Listbox value={faculty} onChange={setFaculty}>\n                                        <div className=\"mt-3 relative\">\n                                            <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-rose-500 focus:border-rose-500 sm:text-sm\">\n                                                <span className=\"block truncate\">{faculty.name}</span>\n                                                <span className=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                                                    <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                </span>\n                                            </Listbox.Button>\n\n                                            <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n                                                <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                                                    {faculties.map((faculty) => (\n                                                        <Listbox.Option\n                                                            key={faculty.id}\n                                                            className={({ active }) =>\n                                                                classNames(\n                                                                    active ? 'text-white bg-rose-600' : 'text-gray-900',\n                                                                    'cursor-default select-none relative py-2 pl-8 pr-4'\n                                                                )\n                                                            }\n                                                            value={faculty}\n                                                        >\n                                                            {({ selected, active }) => (\n                                                                <>\n                                                                    <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'block truncate')}>\n                                                                        {faculty.name}\n                                                                    </span>\n\n                                                                    {selected ? (\n                                                                        <span\n                                                                            className={classNames(\n                                                                                active ? 'text-white' : 'text-rose-600',\n                                                                                'absolute inset-y-0 left-0 flex items-center pl-1.5'\n                                                                            )}\n                                                                        >\n                                                                            <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                                                                        </span>\n                                                                    ) : null}\n                                                                </>\n                                                            )}\n                                                        </Listbox.Option>\n                                                    ))}\n                                                </Listbox.Options>\n                                            </Transition>\n                                        </div>\n                                    </Listbox>\n                                </div>\n                                : null\n                            }\n\n                            {user.accountType === \"STUDENT\"\n                                ? <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                                    <label htmlFor=\"course\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                        Course\n                                    </label>\n                                    <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\n                                        <input\n                                            type=\"text\"\n                                            name=\"course\"\n                                            id=\"course\"\n                                            autoComplete=\"course\"\n                                            value={course}\n                                            onChange={(e) => setCourse(e.target.value)}\n                                            className=\"max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"\n                                        />\n                                    </div>\n                                </div>\n                                : null\n                            }\n                            <div className=\"pt-5\">\n                                <div className=\"flex justify-end\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                        onClick={() => history.goBack()}\n                                    >\n                                        Cancel\n                                    </button>\n                                    <button\n                                        type=\"submit\"\n                                        className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                    >\n                                        Save\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                : <ViewMode />\n            }\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/allUsersTab.js",["465","466","467","468"],"import { Fragment, useState, useEffect, useRef } from 'react'\nimport { Transition, Dialog } from '@headlessui/react'\nimport moment from 'moment'\nimport {\n    CalendarIcon,\n    ExclamationIcon\n} from '@heroicons/react/outline'\nimport api from '../../util/api'\nimport UserList from './userList'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Role', sortType: 'accountType', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function AllUsersTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [open, setOpen] = useState(false)\n    const [sortType, setSortType] = useState(sortTypes[0])\n    const cancelButtonRef = useRef(null)\n\n    useEffect(() => {\n        let isMounted = true;\n        api.getUsers().then(response => {\n            const searchSortItems = (type, searchString, searchType) => {\n                const types = {\n                    created: 'created',\n                    accountType: 'accountType',\n                    accountStatus: 'accountStatus',\n                    email: 'email',\n                    username: 'username',\n                }\n                const searchTypes = {\n                    username: 'username',\n                    email: 'email',\n                }\n                const sortProperty = types[type]\n                const searchProperty = searchTypes[searchType]\n                const filtered = [...response.data]\n                    .filter((user) => {\n                        if (searchString === '') {\n                            return user\n                        } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                            return user\n                        }\n                    })\n                const sorted = [...filtered]\n                    .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                        || y['created'].localeCompare(x['created']))\n                if (isMounted) setAllUsers(sorted);    // add conditional check\n            }\n            searchSortItems(sortType.sortType, searchString, searchType.searchType)\n        })\n        return () => { isMounted = false };\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function ConfirmationDialog() {\n        return (\n            <Transition.Root show={open} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" initialFocus={cancelButtonRef} onClose={setOpen}>\n                    <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0\"\n                            enterTo=\"opacity-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100\"\n                            leaveTo=\"opacity-0\"\n                        >\n                            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                        </Transition.Child>\n\n                        {/* This element is to trick the browser into centering the modal contents. */}\n                        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n                            &#8203;\n                        </span>\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"ease-out duration-300\"\n                            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                            leave=\"ease-in duration-200\"\n                            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        >\n                            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\n                                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\n                                    <div className=\"sm:flex sm:items-start\">\n                                        <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\n                                            <ExclamationIcon className=\"h-6 w-6 text-red-600\" aria-hidden=\"true\" />\n                                        </div>\n                                        <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\n                                            <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                                Deactivate account\n                                            </Dialog.Title>\n                                            <div className=\"mt-2\">\n                                                <p className=\"text-sm text-gray-500\">\n                                                    Are you sure you want to deactivate your account? All of your data will be permanently removed.\n                                                    This action cannot be undone.\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:ml-3 sm:w-auto sm:text-sm\"\n                                        onClick={() => setOpen(false)}\n                                    >\n                                        Deactivate\n                                    </button>\n                                    <button\n                                        type=\"button\"\n                                        className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\n                                        onClick={() => setOpen(false)}\n                                        ref={cancelButtonRef}\n                                    >\n                                        Cancel\n                                    </button>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </Dialog>\n            </Transition.Root>\n        )\n    }\n\n    return (\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={UserList}\n                dataLimit={5}\n            />\n\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/guideItem.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/postItem.js",["469"],"import { AnnotationIcon, CalendarIcon, ChevronRightIcon } from \"@heroicons/react/outline\";\nimport moment from \"moment\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport api from \"../../util/api\";\n\nexport default function PostItem({ p }) {\n    const [thread, setThread] = useState(null)\n    const [forum, setForum] = useState(null)\n\n    useEffect(() => {\n        async function getThread() {\n            await api.getPostThread(p.id)\n                .then(response => {\n                    setThread(response.data)\n                    //console.log(response.data.id)\n                    getForum(response.data.id)\n                })\n            //.then(() => getForum(thread))\n            //.then(() => getForum(thread))\n            //console.log(p)\n        }\n        getThread()\n    }, [p.id])\n\n    async function getForum(tid) {\n        await api.getThreadForum(tid).then(response => setForum(response.data))\n    }\n\n    return (\n        forum &&\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"truncate\">\n                    <div className=\"flex text-sm sm:items-center\">\n                        <a href={`/${forum.id}/threads`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium hover:text-rose-600 text-gray-500 truncate\">{forum.title}</p>\n                        </a>\n                        <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p>\n                        <a href={`/${forum.id}/threads/${thread.id}/posts`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium text-rose-500 truncate\">{thread.title}</p>\n                        </a>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                Posted {moment(thread.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                            </p>\n                        </div>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            {/* <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p> */}\n                            <div className=\"text-xl font-medium text-rose-500 truncate\"dangerouslySetInnerHTML={{ __html: postMessage.content }} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                    <div className=\"flex overflow-hidden -space-x-1\">\n\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Link to={`/${forum.id}/threads/${thread.id}/posts`}\n                    className=\"inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/threadItem.js",["470","471"],"import {\n    CalendarIcon,\n    AnnotationIcon,\n    LibraryIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport { ChevronRightIcon } from '@heroicons/react/solid'\nimport moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport api from '../../util/api'\n\nexport default function ThreadItem({ thread }) {\n    const [forum, setForum] = useState(null)\n\n    useEffect(() => {\n        async function getForum() {\n            await api.getThreadForum(thread.id)\n                .then(response => setForum(response.data))\n        }\n        getForum()\n    }, [thread.id])\n\n    return (\n        forum &&\n        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                <div className=\"truncate\">\n                    <div className=\"flex text-sm sm:items-center\">\n                        <a href={`/${forum.id}/threads`} className=\"block hover:bg-gray-50\">\n                            <p className=\"mr-3 text-xl font-medium hover:text-rose-600 text-gray-500 truncate\">{forum.title}</p>\n                        </a>\n                        <p> <ChevronRightIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" /> </p>\n                        <p className=\"text-xl font-medium text-rose-500 truncate\">{thread.title}</p>\n                    </div>\n                    <div className=\"mt-2 flex\">\n                        <div className=\"flex items-center text-sm text-gray-500\">\n                            <CalendarIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                Created {moment(thread.created.slice(0, -5)).format(\"DD/MM/YY\")}\n                            </p>\n                        </div>\n                        <div className=\"ml-5 flex items-center text-sm text-gray-500\">\n                            <AnnotationIcon className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                            <p>\n                                {thread.posts.length} posts\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                    <div className=\"flex overflow-hidden -space-x-1\">\n\n                    </div>\n                </div>\n            </div>\n            <div>\n                <Link to={`/${forum.id}/threads/${thread.id}/posts`}\n                    className=\"inline-flex items-center shadow-sm px-2.5 py-0.5 border border-gray-300 text-sm leading-5 font-medium rounded-full text-gray-700 bg-white hover:bg-gray-50\"\n                >\n                    View\n                </Link>\n            </div>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/inputTextError/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/guideCategories/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guideOptions/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Paginator/threadPaginator/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/ApproveTab.js",["472","473","474"],"import { useState, useEffect } from 'react'\nimport {\n    BanIcon,\n    CheckCircleIcon,\n} from '@heroicons/react/outline'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\nimport api from '../../util/api'\nimport ApproveUserList from './approveUserList'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\n\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function ApproveTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [sortType, setSortType] = useState(sortTypes[0])\n\n    useEffect(() => {\n        api.getUsers()\n            .then(response => {\n                const searchSortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        accountStatus: 'accountStatus',\n                        email: 'email',\n                        username: 'username',\n                    }\n                    const searchTypes = {\n                        username: 'username',\n                        email: 'email',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data]\n                        .filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")\n                        .filter((user) => {\n                            if (searchString === '') {\n                                return user\n                            } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return user\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setAllUsers(sorted)\n                }\n                searchSortItems(sortType.sortType, searchString, searchType.searchType)\n                // setAllUsers(users.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\"));\n            })\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function approve(user) {\n        user.accountStatus = 'ACTIVE'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")))\n            })\n    }\n\n    function disapprove(user) {\n        user.accountStatus = 'REJECTED'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'UNAPPROVED' || user.accountStatus === 'REJECTED') && user.accountType === \"STAFF\")))\n            })\n    }\n\n    return (\n        allUsers &&\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={ApproveUserList}\n                dataLimit={8}\n                approve={approve}\n                reject={disapprove}\n            />\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guideList/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/BlockTab.js",["475"],"import { useState, useEffect } from 'react'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\nimport api from '../../util/api'\nimport ThreadPaginator from '../../components/Paginator/threadPaginator'\nimport BlockUserList from './blockUserList'\n\nconst sortTypes = [\n    { id: 1, name: 'Recent', sortType: 'created', reverse: false },\n    { id: 2, name: 'Email', sortType: 'email', reverse: true },\n    { id: 2, name: 'Username', sortType: 'username', reverse: true },\n    { id: 2, name: 'Role', sortType: 'accountType', reverse: true },\n    { id: 2, name: 'Status', sortType: 'accountStatus', reverse: true },\n]\n\nexport default function BlockTab({ searchString, searchType }) {\n    const [allUsers, setAllUsers] = useState([])\n    const [sortType, setSortType] = useState(sortTypes[0])\n\n    useEffect(() => {\n        api.getUsers()\n            .then(response => {\n                const searchSortItems = (type, searchString, searchType) => {\n                    const types = {\n                        created: 'created',\n                        accountType: 'accountType',\n                        accountStatus: 'accountStatus',\n                        email: 'email',\n                        username: 'username',\n                    }\n                    const searchTypes = {\n                        username: 'username',\n                        email: 'email',\n                    }\n                    const sortProperty = types[type]\n                    const searchProperty = searchTypes[searchType]\n                    const filtered = [...response.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\")]\n                        .filter((user) => {\n                            if (searchString === '') {\n                                return user\n                            } else if (user[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                                return user\n                            }\n                        })\n                    const sorted = [...filtered]\n                        .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n                            || y['created'].localeCompare(x['created']))\n                    setAllUsers(sorted);\n                }\n                searchSortItems(sortType.sortType, searchString, searchType.searchType)\n                // setAllUsers(users.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\"));\n            })\n    }, [sortType.sortType, searchString, searchType.searchType])\n\n    function toggleBlock(user) {\n        user.accountStatus = user.accountStatus === 'BLOCKED' ? 'ACTIVE' : 'BLOCKED'\n        api.editUser(user.id, user)\n            .then(() => {\n                api.getUsers()\n                    .then((response) => setAllUsers(response.data.filter((user) => (user.accountStatus === 'ACTIVE' || user.accountStatus === 'BLOCKED') && user.accountType !== \"ADMIN\")))\n            })\n    }\n\n    return (\n        allUsers &&\n        <div>\n            <div className=\"pt-6 pb-4\">\n                <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n            </div>\n            <ThreadPaginator\n                data={allUsers}\n                component={BlockUserList}\n                dataLimit={8}\n                toggleBlock={toggleBlock}\n            />\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Paginator/postPaginator/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/uploadImage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/catSelectMenu/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/uploadProfileImage/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/categoriesTable/index.js",["476"],"import moment from \"moment\";\nimport { Fragment, useState, useEffect } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport EditCategoryModal from \"../../containers/CategoriesPage/editCategory\";\nimport api from \"../../util/api\";\nimport DeleteConfirm from \"../deleteConfirm\";\n\nexport default function CategoriesTable({ items, setSearchString, dataLimit }) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [deleteCat, setDeleteCat] = useState(null)\n  const [editCat, setEditCat] = useState(null)\n\n  const [error, setError] = useState(null);\n  const [pages, setPages] = useState(Math.ceil(items.length / dataLimit))\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const startIndex = currentPage * dataLimit - dataLimit\n  const endIndex = startIndex + dataLimit\n\n  const goToNextPage = () => setCurrentPage((page) => page + 1)\n  const goToPreviousPage = () => setCurrentPage((page) => page - 1)\n\n  const getPaginatedData = () => {\n    const startIndex = currentPage * dataLimit - dataLimit\n    const endIndex = startIndex + dataLimit\n    return items.slice(startIndex, endIndex)\n  }\n\n  function deleteCategory(categoryId) {\n    api.deleteCategory(categoryId)\n      .then(() => window.location.reload())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    setPages(Math.ceil(items.length / dataLimit))\n  }, [items.length, dataLimit])\n\n  return (\n    <Fragment>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            {!items || !items.length\n              ? (\n                <div className=\"text-center\">\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No categories</h3>\n                </div>\n              )\n              : (\n                <div className=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n                  <table className=\"min-w-full divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50\">\n                      <tr>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Name\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Guides\n                        </th>\n                        <th\n                          scope=\"col\"\n                          className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\"\n                        >\n                          Created\n                        </th>\n                        <th scope=\"col\" className=\"relative px-6 py-3\">\n                          <span className=\"sr-only\">Options</span>\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {getPaginatedData().map((item, itemIdx) => (\n                        <tr key={item.id} className={itemIdx % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\n                            <Link to={`/profile/${item.id}`} className=\"hover:underline\">\n                              {item.name}\n                            </Link>\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">{item.guides.length}</td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\n                            {moment(item.created.slice(0, -5)).format(\"MMMM Do YYYY [at] h:mm a\")}\n                          </td>\n                          <td className=\"px-6 py-4 whitespace-nowrap text-right text-sm font-medium\">\n                            <button\n                              className=\"text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setEditCat(item)\n                                setOpenEdit(true)\n                              }}>\n                              Edit\n                            </button>\n                            <button\n                              className=\"ml-5 text-rose-600 hover:text-rose-900\"\n                              onClick={() => {\n                                setDeleteCat(item)\n                                setOpen(true)\n                              }}>\n                              Delete\n                            </button>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                    <tfoot className=\"bg-gray-50\">\n                      <tr>\n                        <td colSpan=\"6\">\n                          <nav\n                            className=\"overflow-hidden px-4 py-3 flex items-center justify-between sm:px-6\"\n                            aria-label=\"Pagination\"\n                          >\n                            <div className=\"hidden sm:block\">\n                              <p className=\"text-sm text-gray-700\">\n                                Showing <span className=\"font-medium\">{startIndex + 1}</span> to <span className=\"font-medium\">{items.length > endIndex ? (endIndex) : items.length}</span> of{' '}\n                                <span className=\"font-medium\">{items.length}</span> results\n                              </p>\n                            </div>\n                            <div className=\"flex-1 flex justify-between sm:justify-end\">\n                              {currentPage !== 1 &&\n                                <button\n                                  className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToPreviousPage}\n                                >\n                                  Previous\n                                </button>\n                              }\n                              {(currentPage !== pages && pages > 1) &&\n                                <button\n                                  className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\"\n                                  onClick={goToNextPage}\n                                >\n                                  Next\n                                </button>\n                              }\n                            </div>\n                          </nav>\n                        </td>\n                      </tr>\n                    </tfoot>\n                  </table>\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n      {deleteCat &&\n        <DeleteConfirm\n          title=\"category\"\n          open={open}\n          setOpen={setOpen}\n          cat={deleteCat}\n          onConfirm={deleteCategory}\n        />\n      }\n      {editCat &&\n        <EditCategoryModal\n          item={editCat}\n          open={openEdit}\n          setOpen={setOpenEdit}\n        />\n      }\n    </Fragment>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/post/index.js",["477","478","479"],"import moment from \"moment\"\nimport { Link } from \"react-router-dom\"\nimport {\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\nimport PostOptions from \"../../containers/ThreadDetailsPage/postOptions\"\nimport api from \"../../util/api\"\n\nexport default function Post({ user, setUser, post, forumId, threadId, setThread, setPosts }) {\n  function toggleLike() {\n    // console.log(post.id)\n    let likedPosts = user.likedPosts\n    if (likedPosts.includes(post.id)) {\n      likedPosts = [...likedPosts].filter((p) => p != post.id)\n      post.likes = post.likes - 1\n    } else {\n      likedPosts = [...likedPosts].push(post.id)\n      post.likes = post.likes + 1\n    }\n    user.likedPosts = likedPosts\n    api.editUser(user.id, user)\n      .then((response) => {\n        setUser(response.data)\n      })\n    api.editPost(forumId, threadId, post)\n      .then((response) => {\n        setThread(response.data)\n      })\n  }\n  return (\n    <li key={post.id} className=\"bg-white px-4 py-6 shadow sm:p-6 sm:rounded-lg\">\n      <article aria-labelledby={'post-title-' + post.id}>\n        <div>\n          <div className=\"flex space-x-3\">\n            <div className=\"flex-shrink-0\">\n              {post.creator.profilePicture === \"default\"\n                ?\n                <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                  <h2 className=\"text-xs\">{post.creator.username.substring(0, 1)}</h2>\n                </div>\n                :\n                <img\n                  className=\"h-10 w-10 rounded-full\"\n                  src={post.creator.profilePicture}\n                  alt={post.creator.username.substring(0, 1)}\n                />\n              }\n            </div>\n            <div className=\"min-w-0 flex-1\">\n              <p className=\"text-sm font-medium text-gray-900\">\n                <Link to={`/profile/${post.creator.id}`} className=\"hover:underline\">\n                  {post.creator.username}\n                </Link>\n              </p>\n              <p className=\"text-sm text-gray-500\">\n                {moment().subtract(moment().diff(post.createdAt.slice(0, -5))).calendar()}\n              </p>\n            </div>\n            {(post.creator.id === user.id || user.accountType === 'ADMIN') &&\n              <div className=\"flex-shrink-0 self-center flex\">\n                <PostOptions\n                  forumId={forumId}\n                  threadId={threadId}\n                  post={post}\n                  setThread={setThread}\n                  setPosts={setPosts}\n                />\n              </div>\n            }\n          </div>\n          <h2 id={'post-title-' + post.id} className=\"mt-4 text-base font-medium text-gray-900\">\n            <div dangerouslySetInnerHTML={{ __html: post.content }} />\n          </h2>\n        </div>\n\n        {/* <div className=\"mt-6 flex justify-between space-x-8\">\n          <div className=\"flex space-x-6\">\n            <span className=\"inline-flex items-center text-sm\">\n              <button\n                type=\"button\"\n                className=\"inline-flex space-x-2 text-gray-400 hover:text-gray-500\"\n                onClick={toggleLike}\n              >\n                <ThumbUpIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                <span className=\"font-medium text-gray-900\">{post.likes}</span>\n                <span className=\"sr-only\">likes</span>\n              </button>\n            </span>\n          </div>\n        </div> */}\n      </article>\n    </li>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/notification/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/editGuideModal/index.js",["480"],"import { Fragment, useState , useEffect } from 'react'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../inputText'\nimport api from '../../../util/api'\nimport htmlToDraft from 'html-to-draftjs'\nimport draftToHtml from 'draftjs-to-html';\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { EditorState, ContentState ,convertToRaw} from \"draft-js\";\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\n\nconst htmlToDraftBlocks = (html) => {\n  const blocksFromHtml = htmlToDraft(html);\n  const { contentBlocks, entityMap } = blocksFromHtml;\n  const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n  const editorState = EditorState.createWithContent(contentState)\n  return editorState\n}\n\nexport default function EditGuideModal({ categoryId, guide, setGuide, open, setOpen, setNotifTitle, triggerNotification }) {\n  const [editorState, setEditorState] = useState()\n  const [title, setTitle] = useState(guide.title)\n  const [error, setError] = useState(null);\n\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    if (title !== '' && editorState.getCurrentContent().hasText()) {\n      editGuide()\n      setNotifTitle(\"saved guide\")\n      triggerNotification()\n      setOpen(false)\n      window.location.reload()\n    }\n    else if(title === ''){\n      alert(\"Title cannot be empty\")\n    }\n    else{\n      alert(\"Content cannot be empty\")\n    }\n  }\n\n  function editGuide() {\n    guide.title = title\n    guide.content = draftToHtml(convertToRaw(editorState.getCurrentContent()))\n    api.editGuide(categoryId, guide)\n      .then((response) =>{\n        setGuide(response.data)\n      })\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    const editorState = htmlToDraftBlocks(guide.content)\n    setEditorState(() => editorState)\n  }, [guide.content])\n\n  return (\n    <Transition.Root show={open} as={Fragment}>\n      <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={() => {\n        setTitle(guide.title)\n        setOpen(false)\n      }}>\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n          >\n            <form onSubmit={handleSubmit}>\n              <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                <div className=\"mt-3 text-center sm:mt-5\">\n                  <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                    Edit guide\n                  </Dialog.Title>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    <InputText\n                      type=\"text\"\n                      name=\"title\"\n                      id=\"title\"\n                      label=\"Title\"\n                      placeholder=\"Enter a forum title\"\n                      autoComplete=\"title\"\n                      required={true}\n                      value={title}\n                      onChange={(e) => setTitle(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"mt-2 gap-6 text-left\">\n                    <label htmlFor=\"about\" className=\"block text-sm font-medium text-gray-700\">\n                      Guide\n                    </label>\n                    <div>\n                      <div style={{ border: \"1px solid black\", padding: '2px', minHeight: '400px' }}>\n                        <Editor\n                          editorState={editorState}\n                          onEditorStateChange={setEditorState}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-5 sm:mt-6\">\n                  <button\n                    type=\"submit\"\n                    className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </div>\n            </form>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition.Root>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/Guides/guide/index.js",["481"],"import { Link, useRouteMatch } from 'react-router-dom'\nimport moment from 'moment'\nimport {\n  ChatAltIcon,\n  ThumbUpIcon,\n} from '@heroicons/react/solid'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Guide({ id, title, creator, created, guide }) {\n  const { url } = useRouteMatch()\n  return (\n    <Link to={`${url}/${id}`}>\n      <article aria-labelledby={'guide-title-' + id}>\n        <div className=\"flex\">\n          {guide.pictureUrl !== \"\" &&\n            <div className=\"mr-5 flex-1\">\n              <img\n                src={guide.pictureUrl}\n                alt=\"\"\n                className={classNames(\n                  guide.current ? '' : 'group-hover:opacity-75',\n                  'object-cover pointer-events-none'\n                )}\n              />\n            </div>}\n          <div className=\"flex-1\">\n            <div className=\"flex space-x-3\">\n              <div className=\"flex-shrink-0\">\n                {guide.creator.profilePicture === \"default\"\n                  ?\n                  <div className=\"flex justify-center items-center content-center bg-gradient-to-br from-rose-300 to-rose-600 shadow-md hover:shadow-lg h-10 w-10 rounded-full fill-current text-white\">\n                    <h2 className=\"text-xs\">{guide.creator.username.substring(0, 1)}</h2>\n                  </div>\n                  :\n                  <img\n                    className=\"h-10 w-10 rounded-full\"\n                    src={guide.creator.profilePicture}\n                    alt={guide.creator.username.substring(0, 1)}\n                  />\n                }\n              </div>\n              <div className=\"min-w-0 flex-1\">\n                <p className=\"text-sm font-medium text-gray-900\">\n                  <Link to={`/profile/${creator.id}`} className=\"hover:underline\">\n                    {creator.username}\n                  </Link>\n                </p>\n                <p className=\"text-sm text-gray-500\">\n                  <p className=\"hover:underline\">\n                    {moment().subtract(moment().diff(created.slice(0, -5))).calendar()}\n                  </p>\n                </p>\n              </div>\n            </div>\n            <h2 id={'guide-title-' + id} className=\"mt-4 text-base font-medium text-gray-900\">\n              {title}\n            </h2>\n          </div>\n        </div>\n        <div className=\"mt-6 flex justify-between space-x-8\">\n          <div className=\"flex space-x-6\">\n            <span className=\"inline-flex items-center text-sm\">\n              <button type=\"button\" className=\"inline-flex space-x-2 text-gray-400 hover:text-gray-500\">\n                <ChatAltIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                <span className=\"font-medium text-gray-900\">{guide.comments.length}</span>\n                <span className=\"sr-only\">comments</span>\n              </button>\n            </span>\n          </div>\n        </div>\n      </article>\n    </Link>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/deleteConfirm/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/commentOptions/index.js",["482","483","484","485","486"],"import { Fragment, useState } from 'react'\nimport { Menu, Transition } from '@headlessui/react'\nimport {\n  PencilIcon,\n  DotsVerticalIcon,\n  TrashIcon,\n} from '@heroicons/react/solid'\nimport ConfirmDialog from '../confirmDialog'\nimport EditPostModal from '../../containers/ThreadDetailsPage/editPost'\nimport Notification from '../notification'\nimport api from '../../util/api'\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function CommentOptions({ guideId, setGuide, comment, setComments, edit, setEdit }) {\n  const [open, setOpen] = useState(false)\n  const [openEdit, setOpenEdit] = useState(false)\n  const [show, setShow] = useState(false)\n  const [notifTitle, setNotifTitle] = useState(\"\")\n\n  function deleteComment() {\n    api.deleteComment(guideId, comment.id)\n      .then((response) => {\n        setGuide(response.data)\n        setComments(response.data.comments)\n      })\n  }\n\n  function triggerNotification() {\n    setShow(true)\n    setTimeout(() => setShow(false), 3000)\n  }\n\n  return (\n    <Fragment>\n      <Menu as=\"div\" className=\"relative inline-block text-left\">\n        <div>\n          <Menu.Button className=\"-m-2 p-2 rounded-full flex items-center text-gray-400 hover:text-gray-600\">\n            <span className=\"sr-only\">Open options</span>\n            <DotsVerticalIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n          </Menu.Button>\n        </div>\n\n        <Transition\n          as={Fragment}\n          enter=\"transition ease-out duration-100\"\n          enterFrom=\"transform opacity-0 scale-95\"\n          enterTo=\"transform opacity-100 scale-100\"\n          leave=\"transition ease-in duration-75\"\n          leaveFrom=\"transform opacity-100 scale-100\"\n          leaveTo=\"transform opacity-0 scale-95\"\n        >\n          <Menu.Items className=\"origin-top-right absolute right-0 mt-2 w-56 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\">\n            <div className=\"py-1\">\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setEdit(true)\n                    }}\n                  >\n                    <PencilIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Edit comment</span>\n                  </button>\n                )}\n              </Menu.Item>\n              <Menu.Item>\n                {({ active }) => (\n                  <button\n                    className={classNames(\n                      active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',\n                      'w-full flex justify-left px-4 py-2 text-sm'\n                    )}\n                    onClick={() => {\n                      setOpen(true)\n                    }}\n                  >\n                    <TrashIcon className=\"mr-3 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    <span>Delete comment</span>\n                  </button>\n                )}\n              </Menu.Item>\n            </div>\n          </Menu.Items>\n        </Transition>\n      </Menu>\n      <ConfirmDialog\n        title=\"comment\"\n        open={open}\n        setOpen={setOpen}\n        onConfirm={deleteComment}\n      />\n      {/* <EditPostModal\n        forum={forum}\n        thread={thread}\n        setPosts={setPosts}\n        post={post}\n        open={openEdit}\n        setOpen={setOpenEdit}\n        setNotifTitle={setNotifTitle}\n        triggerNotification={triggerNotification}\n      /> */}\n      <Notification show={show} setShow={setShow} action={notifTitle} />\n    </Fragment>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/thread/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/searchSelectMenu/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/passwordTab.js",["487"],"import { CheckCircleIcon, XCircleIcon } from \"@heroicons/react/solid\"\nimport { useEffect, useState } from \"react\"\nimport InputText from \"../../components/inputText\"\nimport api from \"../../util/api\"\n\nexport default function PasswordTab({ user }) {\n\n    const [password, setPassword] = useState('')\n    const [currentPassword, setCurrentPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n    const [error, setError] = useState('')\n\n    useEffect(() => {\n        async function getLoggedInUser() {\n            await api.getUser(user.id)\n                .then(response => setPassword(response.data.password))\n                .then(() => console.log(password))\n        }\n        getLoggedInUser()\n    }, [user.id])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        if (password === currentPassword) {\n            if (newPassword.match(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\")) {\n                if (newPassword === confirmPassword) {\n                    //console.log(newPassword)\n                    changePassword()\n                } else {\n                    alert(\"Passwords do not match!\")\n                }\n            } else {\n                setError(\"Passwords must be minimum eight characters long and contain at least one uppercase letter, one lowercase letter, one number and one special character.\")\n            }\n        } else {\n            alert(\"Wrong current password!\")\n        }\n    }\n\n    async function changePassword() {\n        user.password = newPassword\n        await api.editUser(user.id, user)\n            .then(response => console.log(response.data))\n            .then(() => setMessage(\"Your password has been updated.\"))\n            .then(() => console.log(message))\n    }\n\n    return (\n        user &&\n        <div>\n            <div className=\"pt-3 space-y-6 sm:pt-5 sm:space-y-5\">\n                <form onSubmit={handleSubmit}>\n                    <div className=\"p-5 space-y-3 sm:space-y-5\">\n                        {message &&\n                            <div className=\"rounded-md bg-green-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <CheckCircleIcon className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-green-800\">Success</h3>\n                                        <div className=\"mt-2 text-sm text-green-700\">\n                                            {message}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        {error &&\n                            <div className=\"rounded-md bg-red-50 p-4\">\n                                <div className=\"flex\">\n                                    <div className=\"flex-shrink-0\">\n                                        <XCircleIcon className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n                                    </div>\n                                    <div className=\"ml-3\">\n                                        <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n                                        <div className=\"mt-2 text-sm text-red-700\">\n                                            {error}\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start\">\n\n                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                Current Password\n                            </label>\n                            <div className=\"mt-1 sm:mt-0 sm:col-span-2 max-w-lg block w-full shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"password\"\n                                    id=\"password\"\n                                    required={true}\n                                    value={currentPassword}\n                                    onChange={(e) => setCurrentPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:border-t sm:border-gray-200 sm:pt-5\">\n                            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                New Password\n                            </label>\n                            <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"newPassword\"\n                                    id=\"newPassword\"\n                                    required={true}\n                                    value={newPassword}\n                                    onChange={(e) => setNewPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start sm:pt-5\">\n                            <label htmlFor=\"confirmPassword\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\n                                Confirm Password\n                            </label>\n                            <div className=\"col-span-2 shadow-sm focus:ring-rose-500 focus:border-rose-500 sm:max-w-xs sm:text-sm rounded-md\">\n                                <InputText\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    id=\"confirmPassword\"\n                                    required={true}\n                                    value={confirmPassword}\n                                    onChange={(e) => setConfirmPassword(e.target.value)}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"pt-5\">\n                            <div className=\"flex justify-end\">\n                                <button\n                                    type=\"button\"\n                                    className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                    onClick={() => window.location.reload()}\n                                >\n                                    Cancel\n                                </button>\n                                <button\n                                    type=\"submit\"\n                                    className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-rose-600 hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                                >\n                                    Save\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/SelectMenus/sortSelectMenu/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/PendingApprovalPage/pendingApproval.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/userList.js",["488","489","490","491","492","493","494","495"],"import moment from 'moment'\nimport {\n    CalendarIcon,\n    ExclamationIcon\n} from '@heroicons/react/outline'\nimport { Transition, Dialog } from '@headlessui/react'\nimport { Fragment, useState, useEffect, useRef } from 'react'\n\nexport default function UserList({ items }) {\n    return (\n        <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <ul role=\"list\" className=\"divide-y divide-gray-200\">\n                {(!items || !items.length) ?\n                    <li key='No users'>\n                        <div className=\"px-4 py-4 flex items-center sm:px-6\">\n                            <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                <div className=\"truncate\">\n                                    <div className=\"flex text-sm items-center\">\n                                        <p className=\"text-xl font-medium text-rose-500 truncate\">No users</p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </li>\n                    : items.map((user) => (\n                        <li key={user.id}>\n                            <a href={`/profile/${user.id}`}>\n                                <div className=\"px-4 py-4 flex items-center sm:px-6 hover:bg-gray-50\">\n                                    <div className=\"min-w-0 flex-1 sm:flex sm:items-center sm:justify-between\">\n                                        <div className=\"truncate\">\n                                            <div className=\"flex text-sm items-center\">\n                                                <p className=\"text-xl font-medium text-rose-500 truncate\">{user.email}</p>\n                                                <p className=\"ml-3 flex-shrink-0 font-normal text-gray-500\">{user.accountType}</p>\n                                            </div>\n                                            <div className=\"mt-2 flex\">\n                                                <div className=\"flex items-center text-sm text-gray-500\">\n                                                    {user.accountStatus}\n                                                    <CalendarIcon className=\"ml-2 flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                                                    {moment(user.created.slice(0, -5)).format('MMMM Do YYYY [at] h:mm a')}\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"mt-4 flex-shrink-0 sm:mt-0 sm:ml-5\">\n                                            <div className=\"flex overflow-hidden -space-x-1\">\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"ml-5 flex items-center\">\n                                    </div>\n                                </div>\n                            </a>\n                            {/* <ConfirmationDialog /> */}\n                        </li>\n                    ))}\n            </ul>\n        </div>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/MapsPage/index.js",["496"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/AddMapPage/index.js",["497"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { uploadFile } from 'react-s3';\nimport NavBar from \"../../components/navBar\";\nimport SideBar from '../../components/sideBar';\nimport InputText from '../../components/inputText';\nimport UploadImage from '../../components/uploadImage';\nimport api from '../../util/api';\n\nconst S3_BUCKET = 'nustart';\nconst REGION = 'ap-southeast-1';\nconst ACCESS_KEY = 'AKIARTYBCSQYJNUGQWLJ';\nconst SECRET_ACCESS_KEY = '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';\n\nconst config = {\n  bucketName: S3_BUCKET,\n  region: REGION,\n  accessKeyId: ACCESS_KEY,\n  secretAccessKey: SECRET_ACCESS_KEY,\n}\n\nexport default function AddMapPage() {\n  const history = useHistory()\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState(\"\")\n  const [error, setError] = useState(null)\n  const [selectedFile, setSelectedFile] = useState(null)\n\n  const handleFileInput = (e) => {\n    setSelectedFile(e.target.files[0])\n  }\n  const handleUpload = async (file) => {\n    uploadFile(file, config)\n      .then(data => {\n        createMap(data.location)\n      })\n      .catch(error => setError(error))\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault()\n    handleUpload(selectedFile)\n    alert(\"Successfully created map.\")\n  }\n\n  function createMap(location) {\n    api.createMap({\n      title: title,\n      url: location,\n    })\n      .then(() => history.goBack())\n      .catch(error => setError(error))\n  }\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => setError(error))\n  }, [])\n\n  return (\n    user &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar disableButton={true} disableSearch={true} user={user}/>\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user}/>\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"space-y-6 sm:px-6 lg:px-0 lg:col-span-9\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"shadow sm:rounded-md sm:overflow-hidden\">\n                  <div className=\"bg-white py-6 px-4 space-y-6 sm:p-6\">\n                    <div>\n                      <h3 className=\"text-lg leading-6 font-medium text-gray-900\">New Map</h3>\n                    </div>\n                    <div className=\"grid grid-cols-3 gap-6\">\n                      <div className=\"col-span-3 sm:col-span-2\">\n                        <InputText\n                          type=\"text\"\n                          name=\"title\"\n                          id=\"title\"\n                          label=\"Title\"\n                          autoComplete=\"title\"\n                          autoFocus={true}\n                          required={true}\n                          value={title}\n                          onChange={(e) => setTitle(e.target.value)}\n                        />\n                      </div>\n                      <div className=\"col-span-3\">\n                        <label className=\"block text-sm font-medium text-gray-700\">Map</label>\n                        {!selectedFile ?\n                          <div >\n                            <UploadImage handleFileInput={handleFileInput} accept=\".jpg, .png, .gif\" required={true}/>\n                          </div>\n                          : <div className=\"relative inline-flex items-center rounded-full border border-gray-300 px-3 py-0.5 \">\n                            {selectedFile.name}\n                            <button className=\"text-gray-700\" onClick={() => setSelectedFile(null)}>\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"ml-1 h-5 w-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                              </svg>\n                            </button>\n                          </div>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"px-4 py-3 bg-gray-50 text-right sm:px-6\">\n                  <button\n                      type=\"button\"\n                      className=\"bg-white border border-gray-300 rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-sky-500\"\n                      onClick={() => history.goBack()}\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"ml-5 bg-rose-600 border border-transparent rounded-md shadow-sm py-2 px-4 inline-flex justify-center text-sm font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500\"\n                    >\n                      Create\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/SelectMenus/mapsSelectMenu/index.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/CategoriesPage/editCategory.js",["498","499","500"],"import { Fragment, useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Dialog, Transition } from '@headlessui/react'\nimport InputText from '../../components/inputText'\nimport api from '../../util/api'\n\n\nexport default function EditCategoryModal({ item, open, setOpen }) {\n    const [title, setTitle] = useState(item.title)\n    const [error, setError] = useState(null)\n\n    useEffect(() => {\n        api.getCategory(item.id)\n            .then(response => {\n                setTitle(response.data.name)\n            })\n    }, [item])\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault()\n        if (title !== '') {\n            editCategory()\n            setOpen(false)\n            alert(\"Successfully edited category.\")\n        }\n    }\n\n    function editCategory() {\n        item.name = title\n        api.editCategory(item.id, item)\n    }\n\n    return (\n        <Transition.Root show={open} as={Fragment}>\n            <Dialog as=\"div\" className=\"fixed z-10 inset-0 overflow-y-auto\" onClose={setOpen}>\n                <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\n                    </Transition.Child>\n\n                    {/* This element is to trick the browser into centering the modal contents. */}\n                    {/* <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\n            &#8203;\n          </span> */}\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-out duration-300\"\n                        enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                        enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leave=\"ease-in duration-200\"\n                        leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\n                        leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\n                    >\n                        <form onSubmit={handleSubmit}>\n                            <div className=\"inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-sm sm:w-full sm:p-6\">\n                                <div className=\"mt-3 text-center sm:mt-5\">\n                                    <Dialog.Title as=\"h3\" className=\"text-lg leading-6 font-medium text-gray-900\">\n                                        Edit category\n                                    </Dialog.Title>\n                                    <div className=\"mt-2 gap-6 text-left\">\n                                        <InputText\n                                            type=\"text\"\n                                            name=\"title\"\n                                            id=\"title\"\n                                            label=\"Title\"\n                                            autoComplete=\"title\"\n                                            required={true}\n                                            value={title}\n                                            onChange={(e) => setTitle(e.target.value)}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"mt-5 sm:mt-6\">\n                                    <button\n                                        type=\"submit\"\n                                        className=\"inline-flex justify-center w-full rounded-md border border-transparent shadow-sm px-4 py-2 bg-rose-600 text-base font-medium text-white hover:bg-rose-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-rose-500 sm:text-sm\"\n                                    >\n                                        Done\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </Transition.Child>\n                </div>\n            </Dialog>\n        </Transition.Root>\n    )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/blockUserList.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/UsersPage/approveUserList.js",[],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/MapDetailsPage/index.js",["501","502"],"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ManageMapsPage/index.js",["503","504","505"],"import { useEffect, useState } from 'react'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport api from '../../util/api'\nimport NewButton from '../../components/newButton'\nimport { useRouteMatch } from 'react-router'\nimport MapsTable from '../../components/mapsTable'\n\n\nexport default function ManageMapsPage() {\n  const { url } = useRouteMatch()\n  const [user, setUser] = useState(null)\n  const [maps, setMaps] = useState([])\n  const [open, setOpen] = useState(true)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getMaps()\n      .then((response) => {\n          setMaps(response.data)\n        })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    user &&\n      <div className=\"relative min-h-screen bg-gray-100\">\n        <NavBar\n          buttonContent=\"forum\"\n          disableButton={user.accountType !== \"ADMIN\"}\n          component={\n            <NewButton content='map' path=\"/admin/campus/create\" />\n          }\n          user={user}\n          disableSearch={true}\n        />\n        <div className=\"py-10\">\n          <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n            <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n              <SideBar user={user} />\n            </div>\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Maps</h1>\n                <MapsTable items={maps} dataLimit={10} />\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n  )\n}","/Users/remuskwan/development/nus/is3106/project/ui/src/app/components/mapsTable/index.js",["506","507"],{"ruleId":"508","replacedBy":"509"},{"ruleId":"510","replacedBy":"511"},{"ruleId":"512","severity":1,"message":"513","line":16,"column":10,"nodeType":"514","messageId":"515","endLine":16,"endColumn":20},{"ruleId":"512","severity":1,"message":"516","line":34,"column":7,"nodeType":"514","messageId":"515","endLine":34,"endColumn":18},{"ruleId":"512","severity":1,"message":"517","line":47,"column":12,"nodeType":"514","messageId":"515","endLine":47,"endColumn":15},{"ruleId":"518","severity":1,"message":"519","line":75,"column":8,"nodeType":"520","endLine":75,"endColumn":10,"suggestions":"521"},{"ruleId":"518","severity":1,"message":"522","line":86,"column":8,"nodeType":"520","endLine":86,"endColumn":10,"suggestions":"523"},{"ruleId":"518","severity":1,"message":"524","line":97,"column":8,"nodeType":"520","endLine":97,"endColumn":10,"suggestions":"525"},{"ruleId":"518","severity":1,"message":"526","line":105,"column":8,"nodeType":"520","endLine":105,"endColumn":10,"suggestions":"527"},{"ruleId":"518","severity":1,"message":"528","line":65,"column":15,"nodeType":"529","endLine":68,"endColumn":6},{"ruleId":"530","severity":1,"message":"531","line":69,"column":28,"nodeType":"529","messageId":"532","endLine":69,"endColumn":30},{"ruleId":"512","severity":1,"message":"533","line":14,"column":10,"nodeType":"514","messageId":"515","endLine":14,"endColumn":15},{"ruleId":"530","severity":1,"message":"531","line":57,"column":30,"nodeType":"529","messageId":"532","endLine":57,"endColumn":32},{"ruleId":"512","severity":1,"message":"517","line":26,"column":12,"nodeType":"514","messageId":"515","endLine":26,"endColumn":15},{"ruleId":"512","severity":1,"message":"533","line":28,"column":12,"nodeType":"514","messageId":"515","endLine":28,"endColumn":17},{"ruleId":"512","severity":1,"message":"533","line":16,"column":10,"nodeType":"514","messageId":"515","endLine":16,"endColumn":15},{"ruleId":"530","severity":1,"message":"531","line":51,"column":41,"nodeType":"529","messageId":"532","endLine":51,"endColumn":43},{"ruleId":"512","severity":1,"message":"533","line":17,"column":10,"nodeType":"514","messageId":"515","endLine":17,"endColumn":15},{"ruleId":"512","severity":1,"message":"534","line":1,"column":8,"nodeType":"514","messageId":"515","endLine":1,"endColumn":14},{"ruleId":"512","severity":1,"message":"535","line":4,"column":3,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"536","line":5,"column":3,"nodeType":"514","messageId":"515","endLine":5,"endColumn":10},{"ruleId":"512","severity":1,"message":"537","line":7,"column":3,"nodeType":"514","messageId":"515","endLine":7,"endColumn":12},{"ruleId":"512","severity":1,"message":"538","line":8,"column":3,"nodeType":"514","messageId":"515","endLine":8,"endColumn":14},{"ruleId":"512","severity":1,"message":"539","line":11,"column":8,"nodeType":"514","messageId":"515","endLine":11,"endColumn":19},{"ruleId":"512","severity":1,"message":"540","line":3,"column":28,"nodeType":"514","messageId":"515","endLine":3,"endColumn":38},{"ruleId":"512","severity":1,"message":"541","line":4,"column":10,"nodeType":"514","messageId":"515","endLine":4,"endColumn":19},{"ruleId":"512","severity":1,"message":"533","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":15},{"ruleId":"512","severity":1,"message":"542","line":1,"column":35,"nodeType":"514","messageId":"515","endLine":1,"endColumn":44},{"ruleId":"512","severity":1,"message":"543","line":25,"column":7,"nodeType":"514","messageId":"515","endLine":25,"endColumn":17},{"ruleId":"512","severity":1,"message":"544","line":45,"column":9,"nodeType":"514","messageId":"515","endLine":45,"endColumn":21},{"ruleId":"512","severity":1,"message":"545","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":26},{"ruleId":"512","severity":1,"message":"533","line":9,"column":10,"nodeType":"514","messageId":"515","endLine":9,"endColumn":15},{"ruleId":"512","severity":1,"message":"546","line":2,"column":10,"nodeType":"514","messageId":"515","endLine":2,"endColumn":14},{"ruleId":"512","severity":1,"message":"533","line":20,"column":10,"nodeType":"514","messageId":"515","endLine":20,"endColumn":15},{"ruleId":"512","severity":1,"message":"542","line":1,"column":20,"nodeType":"514","messageId":"515","endLine":1,"endColumn":29},{"ruleId":"512","severity":1,"message":"533","line":11,"column":10,"nodeType":"514","messageId":"515","endLine":11,"endColumn":15},{"ruleId":"512","severity":1,"message":"533","line":10,"column":10,"nodeType":"514","messageId":"515","endLine":10,"endColumn":15},{"ruleId":"547","severity":1,"message":"548","line":43,"column":19,"nodeType":"549","endLine":46,"endColumn":20},{"ruleId":"508","replacedBy":"550"},{"ruleId":"510","replacedBy":"551"},{"ruleId":"512","severity":1,"message":"533","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":15},{"ruleId":"512","severity":1,"message":"552","line":10,"column":7,"nodeType":"514","messageId":"515","endLine":10,"endColumn":11},{"ruleId":"512","severity":1,"message":"553","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":20},{"ruleId":"512","severity":1,"message":"554","line":27,"column":10,"nodeType":"514","messageId":"515","endLine":27,"endColumn":14},{"ruleId":"512","severity":1,"message":"555","line":27,"column":16,"nodeType":"514","messageId":"515","endLine":27,"endColumn":23},{"ruleId":"512","severity":1,"message":"556","line":29,"column":20,"nodeType":"514","messageId":"515","endLine":29,"endColumn":31},{"ruleId":"530","severity":1,"message":"531","line":55,"column":28,"nodeType":"529","messageId":"532","endLine":55,"endColumn":30},{"ruleId":"557","severity":1,"message":"558","line":46,"column":56,"nodeType":"559","messageId":"560","endLine":46,"endColumn":58},{"ruleId":"530","severity":1,"message":"531","line":68,"column":29,"nodeType":"529","messageId":"532","endLine":68,"endColumn":31},{"ruleId":"512","severity":1,"message":"533","line":25,"column":10,"nodeType":"514","messageId":"515","endLine":25,"endColumn":15},{"ruleId":"512","severity":1,"message":"533","line":12,"column":10,"nodeType":"514","messageId":"515","endLine":12,"endColumn":15},{"ruleId":"561","severity":1,"message":"562","line":7,"column":13,"nodeType":"549","endLine":7,"endColumn":66},{"ruleId":"518","severity":1,"message":"563","line":17,"column":8,"nodeType":"520","endLine":17,"endColumn":17,"suggestions":"564"},{"ruleId":"561","severity":1,"message":"562","line":7,"column":13,"nodeType":"549","endLine":7,"endColumn":66},{"ruleId":"561","severity":1,"message":"562","line":8,"column":13,"nodeType":"549","endLine":8,"endColumn":66},{"ruleId":"512","severity":1,"message":"565","line":7,"column":5,"nodeType":"514","messageId":"515","endLine":7,"endColumn":19},{"ruleId":"512","severity":1,"message":"566","line":9,"column":5,"nodeType":"514","messageId":"515","endLine":9,"endColumn":18},{"ruleId":"512","severity":1,"message":"567","line":58,"column":21,"nodeType":"514","messageId":"515","endLine":58,"endColumn":31},{"ruleId":"512","severity":1,"message":"533","line":63,"column":12,"nodeType":"514","messageId":"515","endLine":63,"endColumn":17},{"ruleId":"557","severity":1,"message":"558","line":212,"column":88,"nodeType":"559","messageId":"560","endLine":212,"endColumn":90},{"ruleId":"557","severity":1,"message":"558","line":212,"column":112,"nodeType":"559","messageId":"560","endLine":212,"endColumn":114},{"ruleId":"512","severity":1,"message":"534","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":14},{"ruleId":"512","severity":1,"message":"568","line":5,"column":5,"nodeType":"514","messageId":"515","endLine":5,"endColumn":17},{"ruleId":"530","severity":1,"message":"531","line":45,"column":36,"nodeType":"529","messageId":"532","endLine":45,"endColumn":38},{"ruleId":"512","severity":1,"message":"569","line":62,"column":14,"nodeType":"514","messageId":"515","endLine":62,"endColumn":32},{"ruleId":"512","severity":1,"message":"565","line":1,"column":10,"nodeType":"514","messageId":"515","endLine":1,"endColumn":24},{"ruleId":"512","severity":1,"message":"570","line":4,"column":5,"nodeType":"514","messageId":"515","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"571","line":5,"column":5,"nodeType":"514","messageId":"515","endLine":5,"endColumn":20},{"ruleId":"512","severity":1,"message":"572","line":3,"column":5,"nodeType":"514","messageId":"515","endLine":3,"endColumn":12},{"ruleId":"512","severity":1,"message":"571","line":4,"column":5,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"530","severity":1,"message":"531","line":41,"column":40,"nodeType":"529","messageId":"532","endLine":41,"endColumn":42},{"ruleId":"530","severity":1,"message":"531","line":37,"column":40,"nodeType":"529","messageId":"532","endLine":37,"endColumn":42},{"ruleId":"512","severity":1,"message":"533","line":14,"column":10,"nodeType":"514","messageId":"515","endLine":14,"endColumn":15},{"ruleId":"512","severity":1,"message":"538","line":4,"column":3,"nodeType":"514","messageId":"515","endLine":4,"endColumn":14},{"ruleId":"512","severity":1,"message":"573","line":10,"column":12,"nodeType":"514","messageId":"515","endLine":10,"endColumn":22},{"ruleId":"557","severity":1,"message":"574","line":14,"column":52,"nodeType":"559","messageId":"560","endLine":14,"endColumn":54},{"ruleId":"512","severity":1,"message":"533","line":22,"column":10,"nodeType":"514","messageId":"515","endLine":22,"endColumn":15},{"ruleId":"512","severity":1,"message":"538","line":5,"column":3,"nodeType":"514","messageId":"515","endLine":5,"endColumn":14},{"ruleId":"512","severity":1,"message":"575","line":9,"column":8,"nodeType":"514","messageId":"515","endLine":9,"endColumn":21},{"ruleId":"512","severity":1,"message":"576","line":19,"column":10,"nodeType":"514","messageId":"515","endLine":19,"endColumn":18},{"ruleId":"512","severity":1,"message":"577","line":19,"column":20,"nodeType":"514","messageId":"515","endLine":19,"endColumn":31},{"ruleId":"512","severity":1,"message":"578","line":21,"column":22,"nodeType":"514","messageId":"515","endLine":21,"endColumn":35},{"ruleId":"512","severity":1,"message":"579","line":31,"column":12,"nodeType":"514","messageId":"515","endLine":31,"endColumn":31},{"ruleId":"518","severity":1,"message":"580","line":22,"column":8,"nodeType":"520","endLine":22,"endColumn":17,"suggestions":"581"},{"ruleId":"512","severity":1,"message":"582","line":4,"column":5,"nodeType":"514","messageId":"515","endLine":4,"endColumn":20},{"ruleId":"512","severity":1,"message":"583","line":6,"column":10,"nodeType":"514","messageId":"515","endLine":6,"endColumn":20},{"ruleId":"512","severity":1,"message":"584","line":6,"column":22,"nodeType":"514","messageId":"515","endLine":6,"endColumn":28},{"ruleId":"512","severity":1,"message":"585","line":7,"column":10,"nodeType":"514","messageId":"515","endLine":7,"endColumn":18},{"ruleId":"512","severity":1,"message":"586","line":7,"column":20,"nodeType":"514","messageId":"515","endLine":7,"endColumn":28},{"ruleId":"512","severity":1,"message":"542","line":7,"column":30,"nodeType":"514","messageId":"515","endLine":7,"endColumn":39},{"ruleId":"512","severity":1,"message":"587","line":7,"column":41,"nodeType":"514","messageId":"515","endLine":7,"endColumn":47},{"ruleId":"561","severity":1,"message":"562","line":12,"column":13,"nodeType":"549","endLine":12,"endColumn":66},{"ruleId":"512","severity":1,"message":"533","line":11,"column":12,"nodeType":"514","messageId":"515","endLine":11,"endColumn":17},{"ruleId":"512","severity":1,"message":"533","line":26,"column":10,"nodeType":"514","messageId":"515","endLine":26,"endColumn":15},{"ruleId":"512","severity":1,"message":"588","line":2,"column":8,"nodeType":"514","messageId":"515","endLine":2,"endColumn":13},{"ruleId":"512","severity":1,"message":"533","line":10,"column":12,"nodeType":"514","messageId":"515","endLine":10,"endColumn":17},{"ruleId":"512","severity":1,"message":"589","line":10,"column":19,"nodeType":"514","messageId":"515","endLine":10,"endColumn":27},{"ruleId":"512","severity":1,"message":"590","line":4,"column":8,"nodeType":"514","messageId":"515","endLine":4,"endColumn":17},{"ruleId":"512","severity":1,"message":"591","line":10,"column":11,"nodeType":"514","messageId":"515","endLine":10,"endColumn":14},{"ruleId":"512","severity":1,"message":"591","line":12,"column":11,"nodeType":"514","messageId":"515","endLine":12,"endColumn":14},{"ruleId":"512","severity":1,"message":"554","line":15,"column":10,"nodeType":"514","messageId":"515","endLine":15,"endColumn":14},{"ruleId":"512","severity":1,"message":"555","line":15,"column":16,"nodeType":"514","messageId":"515","endLine":15,"endColumn":23},{"ruleId":"512","severity":1,"message":"592","line":3,"column":8,"nodeType":"514","messageId":"515","endLine":3,"endColumn":25},{"ruleId":"512","severity":1,"message":"533","line":10,"column":10,"nodeType":"514","messageId":"515","endLine":10,"endColumn":15},"no-native-reassign",["593"],"no-negated-in-lhs",["594"],"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'likedFilter' is assigned a value but never used.","'tab' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'editMode' and 'uid'. Either include them or remove the dependency array.","ArrayExpression",["595"],"React Hook useEffect has missing dependencies: 'guides' and 'uid'. Either include them or remove the dependency array.",["596"],"React Hook useEffect has missing dependencies: 'threads' and 'uid'. Either include them or remove the dependency array.",["597"],"React Hook useEffect has a missing dependency: 'uid'. Either include it or remove the dependency array.",["598"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'error' is assigned a value but never used.","'moment' is defined but never used.","'ChatAltIcon' is defined but never used.","'EyeIcon' is defined but never used.","'ShareIcon' is defined but never used.","'ThumbUpIcon' is defined but never used.","'PostOptions' is defined but never used.","'PencilIcon' is defined but never used.","'TrashIcon' is defined but never used.","'useEffect' is defined but never used.","'buttonText' is assigned a value but never used.","'addOrEditBtn' is assigned a value but never used.","'ChevronRightIcon' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["593"],["594"],"'tabs' is assigned a value but never used.","'classNames' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'setSortType' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/no-redundant-roles","The element ul has an implicit role of list. Defining this explicitly is redundant and should be avoided.","React Hook useEffect has a missing dependency: 'user.contacts'. Either include it or remove the dependency array. If 'setContactStore' needs the current value of 'user.contacts', you can also switch to useReducer instead of useState and read 'user.contacts' in the reducer.",["599"],"'AnnotationIcon' is defined but never used.","'NewspaperIcon' is defined but never used.","'setMessage' is assigned a value but never used.","'CalendarIcon' is defined but never used.","'ConfirmationDialog' is defined but never used.","'LibraryIcon' is defined but never used.","'CheckCircleIcon' is defined but never used.","'BanIcon' is defined but never used.","'toggleLike' is defined but never used.","Expected '!==' and instead saw '!='.","'EditPostModal' is defined but never used.","'openEdit' is assigned a value but never used.","'setOpenEdit' is assigned a value but never used.","'setNotifTitle' is assigned a value but never used.","'triggerNotification' is defined but never used.","React Hook useEffect has a missing dependency: 'password'. Either include it or remove the dependency array.",["600"],"'ExclamationIcon' is defined but never used.","'Transition' is defined but never used.","'Dialog' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'axios' is defined but never used.","'setError' is assigned a value but never used.","'NewButton' is defined but never used.","'url' is assigned a value but never used.","'EditCategoryModal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},"Update the dependencies array to be: [editMode, uid]",{"range":"613","text":"614"},"Update the dependencies array to be: [guides, uid]",{"range":"615","text":"616"},"Update the dependencies array to be: [threads, uid]",{"range":"617","text":"618"},"Update the dependencies array to be: [uid]",{"range":"619","text":"620"},"Update the dependencies array to be: [user.contacts, user.id]",{"range":"621","text":"622"},"Update the dependencies array to be: [password, user.id]",{"range":"623","text":"624"},[2324,2326],"[editMode, uid]",[2614,2616],"[guides, uid]",[2909,2911],"[threads, uid]",[3106,3108],"[uid]",[618,627],"[user.contacts, user.id]",[838,847],"[password, user.id]"]