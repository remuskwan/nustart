{"ast":null,"code":"var _jsxFileName = \"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport SideBar from '../../components/sideBar';\nimport NavBar from '../../components/navBar';\nimport NewButton from '../../components/newButton';\nimport GuideList from '../../components/Guides/guideList';\nimport api from '../../util/api';\nimport GuideCategories from '../../components/guideCategories';\nimport PostPaginator from '../../components/Paginator/postPaginator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabs = [//need to change to category\n{\n  name: 'Recent',\n  href: '#',\n  current: true\n}, {\n  name: 'Most Liked',\n  href: '#',\n  current: false\n}, {\n  name: 'Most Answers',\n  href: '#',\n  current: false\n}];\nconst searchTypes = [{\n  id: 1,\n  name: 'Title',\n  searchType: 'title'\n}, {\n  id: 2,\n  name: 'Creator',\n  searchType: 'creator'\n}];\nexport default function GuidesListPage() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [guides, setGuides] = useState([]);\n  const [category, setCategory] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [sortType, setSortType] = useState('dateCreated');\n  const [currentTab, setCurrentTab] = useState(1);\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchType, setSearchType] = useState(searchTypes[0]);\n  useEffect(() => {\n    api.getUser().then(response => setUser(response.data)).catch(error => setError(error));\n  }, []);\n  useEffect(() => {\n    api.getCategories().then(response => {\n      setCategories(response.data);\n      setSelected(response.data.find(cat => cat.id == id));\n    }).catch(error => setError(error));\n  }, [id, sortType, searchString, searchType.searchType]);\n  useEffect(() => {\n    api.getCategory(id).then(response => {\n      const sortItems = (type, searchString, searchType) => {\n        const types = {\n          dateCreated: 'dateCreated',\n          title: 'title'\n        };\n        const searchTypes = {\n          title: 'title',\n          creator: 'creator'\n        };\n        const sortProperty = types[type];\n        const searchProperty = searchTypes[searchType];\n        const filtered = [...response.data.guides].filter(guide => {\n          if (searchString === '') {\n            return guide;\n          } else if (searchProperty === \"creator\") {\n            if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n              return guide;\n            }\n          } else if (guide[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n            return guide;\n          }\n        });\n        const sorted = [...filtered].sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]) || y['dateCreated'].localeCompare(x['dateCreated']));\n        setGuides(sorted);\n      };\n\n      sortItems(sortType, searchString, searchType.searchType);\n      setCategory(response.data); // setGuides(response.data.guides)\n    }).catch(error => setError(error));\n  }, [id, sortType, searchString, searchType.searchType]);\n  if (error) return `Error: ${error.message}`;\n  return user && category && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      buttonContent: \"guide\",\n      disableButton: user.accountType === \"STUDENT\",\n      component: /*#__PURE__*/_jsxDEV(NewButton, {\n        content: \"guide\",\n        path: \"/createGuide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this),\n      user: user,\n      searchString: searchString,\n      setSearchString: setSearchString,\n      searchTypes: searchTypes,\n      searchType: searchType,\n      setSearchType: setSearchType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden lg:block lg:col-span-3 xl:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"lg:col-span-9 xl:col-span-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 sm:px-0\",\n            children: categories.length && selected && /*#__PURE__*/_jsxDEV(GuideCategories, {\n              categories: categories,\n              selected: selected,\n              setSelected: setSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sr-only\",\n              children: \"Guides\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PostPaginator, {\n              items: guides,\n              setGuides: setGuides,\n              contentType: \"guides\",\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuidesListPage, \"TVbAisYpztEfvmwBP3QoTObPcZM=\", false, function () {\n  return [useParams];\n});\n\n_c = GuidesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuidesListPage\");","map":{"version":3,"sources":["/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js"],"names":["useEffect","useState","useParams","SideBar","NavBar","NewButton","GuideList","api","GuideCategories","PostPaginator","tabs","name","href","current","searchTypes","id","searchType","GuidesListPage","user","setUser","guides","setGuides","category","setCategory","categories","setCategories","error","setError","selected","setSelected","sortType","setSortType","currentTab","setCurrentTab","searchString","setSearchString","setSearchType","getUser","then","response","data","catch","getCategories","find","cat","getCategory","sortItems","type","types","dateCreated","title","creator","sortProperty","searchProperty","filtered","filter","guide","toLowerCase","includes","sorted","sort","x","y","localeCompare","message","accountType","length"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport GuideList from '../../components/Guides/guideList'\nimport api from '../../util/api'\nimport GuideCategories from '../../components/guideCategories'\nimport PostPaginator from '../../components/Paginator/postPaginator'\n\nconst tabs = [//need to change to category\n  { name: 'Recent', href: '#', current: true },\n  { name: 'Most Liked', href: '#', current: false },\n  { name: 'Most Answers', href: '#', current: false },\n]\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function GuidesListPage() {\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [guides, setGuides] = useState([])\n  const [category, setCategory] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [error, setError] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [sortType, setSortType] = useState('dateCreated')\n  const [currentTab, setCurrentTab] = useState(1)\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        setCategories(response.data)\n        setSelected(response.data.find((cat) => cat.id == id))\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  useEffect(() => {\n    api.getCategory(id)\n      .then((response) => {\n        const sortItems = (type, searchString, searchType) => {\n          const types = {\n            dateCreated: 'dateCreated',\n            title: 'title',\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.guides]\n            .filter((guide) => {\n              if (searchString === '') {\n                return guide\n              } else if (searchProperty === \"creator\") {\n                if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return guide\n                }\n              } else if (guide[searchProperty].toLowerCase().includes(searchString.toLowerCase())) {\n                return guide\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n              || y['dateCreated'].localeCompare(x['dateCreated']))\n          setGuides(sorted)\n        }\n        sortItems(sortType, searchString, searchType.searchType)\n        setCategory(response.data)\n        // setGuides(response.data.guides)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"guide\"\n        disableButton={user.accountType === \"STUDENT\"}\n        component={<NewButton content='guide' path=\"/createGuide\" />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"px-4 sm:px-0\">\n              {(categories.length && selected) &&\n                <GuideCategories categories={categories} selected={selected} setSelected={setSelected} />\n              }\n              {/* <div className=\"sm:hidden\">\n                <label htmlFor=\"question-tabs\" className=\"sr-only\">\n                  Select a tab\n                </label>\n                <select\n                  id=\"question-tabs\"\n                  className=\"block w-full rounded-md border-gray-300 text-base font-medium text-gray-900 shadow-sm focus:border-rose-500 focus:ring-rose-500\"\n                  defaultValue={tabs.find((tab) => tab.current).name}\n                >\n                  {tabs.map((tab) => (\n                    <option key={tab.name}>{tab.name}</option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"hidden sm:block\">\n                <nav className=\"relative z-0 rounded-lg shadow flex divide-x divide-gray-200\" aria-label=\"Tabs\">\n                  {tabs.map((tab, tabIdx) => (\n                    <a\n                      key={tab.name}\n                      href={tab.href}\n                      aria-current={tab.current ? 'page' : undefined}\n                      className={classNames(\n                        tab.current ? 'text-gray-900' : 'text-gray-500 hover:text-gray-700',\n                        tabIdx === 0 ? 'rounded-l-lg' : '',\n                        tabIdx === tabs.length - 1 ? 'rounded-r-lg' : '',\n                        'group relative min-w-0 flex-1 overflow-hidden bg-white py-4 px-6 text-sm font-medium text-center hover:bg-gray-50 focus:z-10'\n                      )}\n                    >\n                      <span>{tab.name}</span>\n                      <span\n                        aria-hidden=\"true\"\n                        className={classNames(\n                          tab.current ? 'bg-rose-500' : 'bg-transparent',\n                          'absolute inset-x-0 bottom-0 h-0.5'\n                        )}\n                      />\n                    </a>\n                  ))}\n                </nav>\n              </div> */}\n            </div>\n            <div className=\"mt-4\">\n              <h1 className=\"sr-only\">Guides</h1>\n              <PostPaginator\n                items={guides}\n                setGuides={setGuides}\n                contentType=\"guides\"\n                user={user}\n              />\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}