{"ast":null,"code":"var _jsxFileName = \"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/index.js\",\n    _s = $RefreshSig$();\n\nimport moment from 'moment';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport SideBar from '../../components/sideBar';\nimport NavBar from '../../components/navBar';\nimport NewButton from '../../components/newButton';\nimport PostList from './postList';\nimport SectionHeadDrop from '../../components/sectionHeadDrop';\nimport Breadcrumb from '../../components/breadcrumb';\nimport ThreadOptions from './threadOptions';\nimport api from '../../util/api';\nimport PostPaginator from '../../components/Paginator/postPaginator';\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortTypes = [{\n  id: 1,\n  name: 'Content',\n  sortType: 'content'\n}, {\n  id: 2,\n  name: 'Creator',\n  sortType: 'creator'\n}];\nconst searchTypes = [{\n  id: 1,\n  name: 'Content',\n  searchType: 'content'\n}, {\n  id: 2,\n  name: 'Creator',\n  searchType: 'creator'\n}];\nexport default function ThreadDetailsPage() {\n  _s();\n\n  const {\n    forumId,\n    threadId\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [forum, setForum] = useState(null);\n  const [thread, setThread] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchType, setSearchType] = useState(searchTypes[0]);\n  const [sortType, setSortType] = useState(sortTypes[0]);\n  useEffect(() => {\n    api.getUser().then(response => setUser(response.data)).catch(error => setError(error));\n  }, []);\n  useEffect(() => {\n    api.getForum(forumId).then(response => {\n      setForum(response.data);\n    }).catch(error => setError(error));\n  }, [forumId]);\n  useEffect(() => {\n    api.getThread(threadId).then(response => {\n      const searchSortItems = (type, searchString, searchType) => {\n        const types = {\n          created: 'created',\n          content: 'content'\n        };\n        const searchTypes = {\n          creator: 'creator',\n          content: 'content'\n        };\n        const sortProperty = types[type];\n        console.log(sortProperty);\n        const filtered = [...response.data.posts].filter(post => {\n          if (searchString === '') {\n            return post;\n          } else if (searchProperty === \"creator\") {\n            if (post[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n              return post;\n            }\n          } else if (post[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n            return post;\n          }\n        });\n        const sorted = [...filtered].sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]));\n        setPosts(sorted);\n      };\n\n      setThread(response.data);\n      searchSortItems(sortType.sortType, searchString, searchType.searchType);\n    }).catch(error => setError(error));\n  }, [threadId, sortType.sortType, searchString, searchType.searchType]);\n  if (error) return `Error: ${error.message}`;\n  return user && forum && thread && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      buttonContent: \"post\",\n      disableButton: thread.closed,\n      user: user,\n      component: /*#__PURE__*/_jsxDEV(NewButton, {\n        content: \"post\",\n        path: `/${forumId}/threads/${threadId}/posts/create`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this),\n      searchString: searchString,\n      setSearchString: setSearchString,\n      searchTypes: searchTypes,\n      searchType: searchType,\n      setSearchType: setSearchType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      pages: [{\n        name: forum.title,\n        path: {\n          pathname: `/${forumId}/threads`\n        }\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden lg:block lg:col-span-3 xl:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), thread && /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"lg:col-span-9 xl:col-span-10\",\n          children: [/*#__PURE__*/_jsxDEV(SectionHeadDrop, {\n            title: thread.title,\n            creator: thread.creator.username,\n            date: moment().subtract(moment().diff(thread.created.slice(0, -5))).calendar(),\n            open: !thread.closed,\n            menu: /*#__PURE__*/_jsxDEV(ThreadOptions, {\n              forumId: forumId,\n              thread: thread,\n              setThread: setThread\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SortSelectMenu, {\n            options: sortTypes,\n            sortType: sortType,\n            setSortType: setSortType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sr-only\",\n              children: \"Posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PostPaginator, {\n              data: posts,\n              component: PostList,\n              dataLimit: 10,\n              forumId: forumId,\n              threadId: threadId,\n              setThread: setThread,\n              setPosts: setPosts,\n              contentType: \"posts\",\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThreadDetailsPage, \"7GQ0BSrOjJzQVweRg0m/zVhitps=\", false, function () {\n  return [useParams];\n});\n\n_c = ThreadDetailsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThreadDetailsPage\");","map":{"version":3,"sources":["/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ThreadDetailsPage/index.js"],"names":["moment","useEffect","useState","useParams","SideBar","NavBar","NewButton","PostList","SectionHeadDrop","Breadcrumb","ThreadOptions","api","PostPaginator","SortSelectMenu","sortTypes","id","name","sortType","searchTypes","searchType","ThreadDetailsPage","forumId","threadId","user","setUser","forum","setForum","thread","setThread","posts","setPosts","error","setError","searchString","setSearchString","setSearchType","setSortType","getUser","then","response","data","catch","getForum","getThread","searchSortItems","type","types","created","content","creator","sortProperty","console","log","filtered","filter","post","searchProperty","toLowerCase","includes","replace","sorted","sort","x","y","localeCompare","message","closed","title","path","pathname","username","subtract","diff","slice","calendar"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport PostList from './postList'\nimport SectionHeadDrop from '../../components/sectionHeadDrop'\nimport Breadcrumb from '../../components/breadcrumb'\nimport ThreadOptions from './threadOptions'\nimport api from '../../util/api'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Content', sortType: 'content' },\n  { id: 2, name: 'Creator', sortType: 'creator' },\n]\n\nconst searchTypes = [\n  { id: 1, name: 'Content', searchType: 'content' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function ThreadDetailsPage() {\n  const { forumId, threadId } = useParams()\n  const [user, setUser] = useState(null)\n  const [forum, setForum] = useState(null)\n  const [thread, setThread] = useState(null)\n  const [posts, setPosts] = useState([])\n  const [error, setError] = useState(null)\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n  const [sortType, setSortType] = useState(sortTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getForum(forumId)\n      .then((response) => {\n        setForum(response.data)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [forumId])\n\n  useEffect(() => {\n    api.getThread(threadId)\n      .then((response) => {\n        const searchSortItems = (type, searchString, searchType) => {\n          const types = {\n            created: 'created',\n            content: 'content',\n          }\n          const searchTypes = {\n            creator: 'creator',\n            content: 'content',\n          }\n          const sortProperty = types[type]\n          console.log(sortProperty)\n          const filtered = [...response.data.posts]\n            .filter((post) => {\n              if (searchString === '') {\n                return post\n              } else if (searchProperty === \"creator\") {\n                if (post[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return post\n                }\n              } else if (post[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return post\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]))\n          setPosts(sorted)\n        }\n        setThread(response.data)\n        searchSortItems(sortType.sortType, searchString, searchType.searchType)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [threadId, sortType.sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && forum && thread) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      {/* When the mobile menu is open, add `overflow-hidden` to the `body` element to prevent double scrollbars */}\n      <NavBar\n        buttonContent=\"post\"\n        disableButton={thread.closed}\n        user={user}\n        component={<NewButton content='post' path={`/${forumId}/threads/${threadId}/posts/create`} />}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType} />\n\n      <Breadcrumb pages={[\n        {\n          name: forum.title,\n          path: {\n            pathname: `/${forumId}/threads`,\n          }\n        },\n      ]} />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          {thread &&\n            <main className=\"lg:col-span-9 xl:col-span-10\">\n              <SectionHeadDrop\n                title={thread.title}\n                creator={thread.creator.username}\n                date={moment().subtract(moment().diff(thread.created.slice(0, -5))).calendar()}\n                open={!thread.closed}\n                menu={\n                  <ThreadOptions forumId={forumId} thread={thread} setThread={setThread} />\n                }\n              />\n              <SortSelectMenu options={sortTypes} sortType={sortType} setSortType={setSortType} />\n              <div className=\"mt-4\">\n                <h1 className=\"sr-only\">Posts</h1>\n                <PostPaginator\n                  data={posts}\n                  component={PostList}\n                  dataLimit={10}\n                  forumId={forumId}\n                  threadId={threadId}\n                  setThread={setThread}\n                  setPosts={setPosts}\n                  contentType=\"posts\"\n                  user={user}\n                />\n              </div>\n            </main>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}