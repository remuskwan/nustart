{"ast":null,"code":"var _jsxFileName = \"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport SideBar from '../../components/sideBar';\nimport NavBar from '../../components/navBar';\nimport NewButton from '../../components/newButton';\nimport GuideList from '../../components/Guides/guideList';\nimport api from '../../util/api';\nimport GuideCategories from '../../components/guideCategories';\nimport PostPaginator from '../../components/Paginator/postPaginator';\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sortTypes = [{\n  id: 1,\n  name: 'Recent',\n  sortType: 'dateCreated',\n  reverse: false\n}, {\n  id: 2,\n  name: 'Title',\n  sortType: 'title',\n  reverse: true\n}];\nconst searchTypes = [{\n  id: 1,\n  name: 'Title',\n  searchType: 'title'\n}, {\n  id: 2,\n  name: 'Creator',\n  searchType: 'creator'\n}];\nexport default function GuidesListPage() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [user, setUser] = useState(null);\n  const [guides, setGuides] = useState([]);\n  const [category, setCategory] = useState(null);\n  const [categories, setCategories] = useState([]);\n  const [error, setError] = useState(null);\n  const [selected, setSelected] = useState(null);\n  const [sortType, setSortType] = useState('dateCreated');\n  const [sortSelected, setSortSelected] = useState(sortTypes[0]);\n  const [searchString, setSearchString] = useState(\"\");\n  const [searchType, setSearchType] = useState(searchTypes[0]);\n  useEffect(() => {\n    api.getUser().then(response => setUser(response.data)).catch(error => setError(error));\n  }, []);\n  useEffect(() => {\n    api.getCategories().then(response => {\n      setCategories(response.data);\n      setSelected(response.data.find(cat => cat.id == id));\n    }).catch(error => setError(error));\n  }, [id, sortType, searchString, searchType.searchType]);\n  useEffect(() => {\n    api.getCategory(id).then(response => {\n      const sortItems = (type, searchString, searchType) => {\n        const types = {\n          dateCreated: 'dateCreated',\n          title: 'title'\n        };\n        const searchTypes = {\n          title: 'title',\n          creator: 'creator'\n        };\n        const sortProperty = types[type];\n        const searchProperty = searchTypes[searchType];\n        const filtered = [...response.data.guides].filter(guide => {\n          if (searchString === '') {\n            return guide;\n          } else if (searchProperty === \"creator\") {\n            if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n              return guide;\n            }\n          } else if (guide[searchProperty].replace(/(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n            return guide;\n          }\n        });\n        const sorted = [...filtered].sort((x, y) => y[sortProperty].localeCompare(x[sortProperty]) || y['dateCreated'].localeCompare(x['dateCreated']));\n        setGuides(sorted);\n      };\n\n      sortItems(sortType, searchString, searchType.searchType);\n      setCategory(response.data); // setGuides(response.data.guides)\n    }).catch(error => setError(error));\n  }, [id, sortType, searchString, searchType.searchType]);\n  if (error) return `Error: ${error.message}`;\n  return user && category && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      buttonContent: \"guide\",\n      disableButton: user.accountType === \"STUDENT\",\n      component: /*#__PURE__*/_jsxDEV(NewButton, {\n        content: \"guide\",\n        path: \"/createGuide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 20\n      }, this),\n      user: user,\n      searchString: searchString,\n      setSearchString: setSearchString,\n      searchTypes: searchTypes,\n      searchType: searchType,\n      setSearchType: setSearchType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"py-10\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hidden lg:block lg:col-span-3 xl:col-span-2\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"lg:col-span-9 xl:col-span-10\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 sm:px-0 flex\",\n            children: categories.length && selected && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mr-30 flex-1\",\n                children: /*#__PURE__*/_jsxDEV(GuideCategories, {\n                  categories: categories,\n                  selected: selected,\n                  setSelected: setSelected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex-1\",\n                children: /*#__PURE__*/_jsxDEV(SortSelectMenu, {\n                  options: sortTypes,\n                  sortType: sortSelected,\n                  setSortType: setSortSelected\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"sr-only\",\n              children: \"Guides\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(PostPaginator, {\n              data: guides,\n              component: GuideList,\n              dataLimit: 10,\n              setGuides: setGuides,\n              user: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GuidesListPage, \"mt/FCOW9GX6b/dDTJ7opqz57KSg=\", false, function () {\n  return [useParams];\n});\n\n_c = GuidesListPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GuidesListPage\");","map":{"version":3,"sources":["/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/GuidesListPage/index.js"],"names":["useEffect","useState","useParams","SideBar","NavBar","NewButton","GuideList","api","GuideCategories","PostPaginator","SortSelectMenu","sortTypes","id","name","sortType","reverse","searchTypes","searchType","GuidesListPage","user","setUser","guides","setGuides","category","setCategory","categories","setCategories","error","setError","selected","setSelected","setSortType","sortSelected","setSortSelected","searchString","setSearchString","setSearchType","getUser","then","response","data","catch","getCategories","find","cat","getCategory","sortItems","type","types","dateCreated","title","creator","sortProperty","searchProperty","filtered","filter","guide","toLowerCase","includes","replace","sorted","sort","x","y","localeCompare","message","accountType","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,cAAP,MAA2B,6CAA3B;;;AAEA,MAAMC,SAAS,GAAG,CAChB;AAAEC,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,QAAf;AAAyBC,EAAAA,QAAQ,EAAE,aAAnC;AAAkDC,EAAAA,OAAO,EAAE;AAA3D,CADgB,EAEhB;AAAEH,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,OAAf;AAAwBC,EAAAA,QAAQ,EAAE,OAAlC;AAA2CC,EAAAA,OAAO,EAAE;AAApD,CAFgB,CAAlB;AAIA,MAAMC,WAAW,GAAG,CAClB;AAAEJ,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,OAAf;AAAwBI,EAAAA,UAAU,EAAE;AAApC,CADkB,EAElB;AAAEL,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,IAAI,EAAE,SAAf;AAA0BI,EAAAA,UAAU,EAAE;AAAtC,CAFkB,CAApB;AAKA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM;AAAEN,IAAAA;AAAF,MAASV,SAAS,EAAxB;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACoB,MAAD,EAASC,SAAT,IAAsBrB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAAC4B,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,QAAD,EAAWiB,WAAX,IAA0B9B,QAAQ,CAAC,aAAD,CAAxC;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAACU,SAAS,CAAC,CAAD,CAAV,CAAhD;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkClC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACgB,UAAD,EAAamB,aAAb,IAA8BnC,QAAQ,CAACe,WAAW,CAAC,CAAD,CAAZ,CAA5C;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,GAAG,CAAC8B,OAAJ,GACGC,IADH,CACQC,QAAQ,IAAInB,OAAO,CAACmB,QAAQ,CAACC,IAAV,CAD3B,EAEGC,KAFH,CAEUd,KAAD,IACLC,QAAQ,CAACD,KAAD,CAHZ;AAKD,GANQ,EAMN,EANM,CAAT;AAQA3B,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,GAAG,CAACmC,aAAJ,GACGJ,IADH,CACSC,QAAD,IAAc;AAClBb,MAAAA,aAAa,CAACa,QAAQ,CAACC,IAAV,CAAb;AACAV,MAAAA,WAAW,CAACS,QAAQ,CAACC,IAAT,CAAcG,IAAd,CAAoBC,GAAD,IAASA,GAAG,CAAChC,EAAJ,IAAUA,EAAtC,CAAD,CAAX;AACD,KAJH,EAKG6B,KALH,CAKUd,KAAD,IACLC,QAAQ,CAACD,KAAD,CANZ;AAQD,GATQ,EASN,CAACf,EAAD,EAAKE,QAAL,EAAeoB,YAAf,EAA6BjB,UAAU,CAACA,UAAxC,CATM,CAAT;AAWAjB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,GAAG,CAACsC,WAAJ,CAAgBjC,EAAhB,EACG0B,IADH,CACSC,QAAD,IAAc;AAClB,YAAMO,SAAS,GAAG,CAACC,IAAD,EAAOb,YAAP,EAAqBjB,UAArB,KAAoC;AACpD,cAAM+B,KAAK,GAAG;AACZC,UAAAA,WAAW,EAAE,aADD;AAEZC,UAAAA,KAAK,EAAE;AAFK,SAAd;AAIA,cAAMlC,WAAW,GAAG;AAClBkC,UAAAA,KAAK,EAAE,OADW;AAElBC,UAAAA,OAAO,EAAE;AAFS,SAApB;AAIA,cAAMC,YAAY,GAAGJ,KAAK,CAACD,IAAD,CAA1B;AACA,cAAMM,cAAc,GAAGrC,WAAW,CAACC,UAAD,CAAlC;AACA,cAAMqC,QAAQ,GAAG,CAAC,GAAGf,QAAQ,CAACC,IAAT,CAAcnB,MAAlB,EACdkC,MADc,CACNC,KAAD,IAAW;AACjB,cAAItB,YAAY,KAAK,EAArB,EAAyB;AACvB,mBAAOsB,KAAP;AACD,WAFD,MAEO,IAAIH,cAAc,KAAK,SAAvB,EAAkC;AACvC,gBAAIG,KAAK,CAACH,cAAD,CAAL,CAAsB,UAAtB,EAAkCI,WAAlC,GAAgDC,QAAhD,CAAyDxB,YAAY,CAACuB,WAAb,EAAzD,CAAJ,EAA0F;AACxF,qBAAOD,KAAP;AACD;AACF,WAJM,MAIA,IAAIA,KAAK,CAACH,cAAD,CAAL,CAAsBM,OAAtB,CAA+B,eAA/B,EAAgD,EAAhD,EAAoDF,WAApD,GAAkEC,QAAlE,CAA2ExB,YAAY,CAACuB,WAAb,EAA3E,CAAJ,EAA4G;AACjH,mBAAOD,KAAP;AACD;AACF,SAXc,CAAjB;AAYA,cAAMI,MAAM,GAAG,CAAC,GAAGN,QAAJ,EACZO,IADY,CACP,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACX,YAAD,CAAD,CAAgBY,aAAhB,CAA8BF,CAAC,CAACV,YAAD,CAA/B,KACXW,CAAC,CAAC,aAAD,CAAD,CAAiBC,aAAjB,CAA+BF,CAAC,CAAC,aAAD,CAAhC,CAFQ,CAAf;AAGAxC,QAAAA,SAAS,CAACsC,MAAD,CAAT;AACD,OA3BD;;AA4BAd,MAAAA,SAAS,CAAChC,QAAD,EAAWoB,YAAX,EAAyBjB,UAAU,CAACA,UAApC,CAAT;AACAO,MAAAA,WAAW,CAACe,QAAQ,CAACC,IAAV,CAAX,CA9BkB,CA+BlB;AACD,KAjCH,EAkCGC,KAlCH,CAkCUd,KAAD,IACLC,QAAQ,CAACD,KAAD,CAnCZ;AAqCD,GAtCQ,EAsCN,CAACf,EAAD,EAAKE,QAAL,EAAeoB,YAAf,EAA6BjB,UAAU,CAACA,UAAxC,CAtCM,CAAT;AAwCA,MAAIU,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACsC,OAAQ,EAA/B;AAEX,SACG9C,IAAI,IAAII,QAAT,iBACA;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAC,OADhB;AAEE,MAAA,aAAa,EAAEJ,IAAI,CAAC+C,WAAL,KAAqB,SAFtC;AAGE,MAAA,SAAS,eAAE,QAAC,SAAD;AAAW,QAAA,OAAO,EAAC,OAAnB;AAA2B,QAAA,IAAI,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,cAHb;AAIE,MAAA,IAAI,EAAE/C,IAJR;AAKE,MAAA,YAAY,EAAEe,YALhB;AAME,MAAA,eAAe,EAAEC,eANnB;AAOE,MAAA,WAAW,EAAEnB,WAPf;AAQE,MAAA,UAAU,EAAEC,UARd;AASE,MAAA,aAAa,EAAEmB;AATjB;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,iFAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,6CAAf;AAAA,iCACE,QAAC,OAAD;AAAS,YAAA,IAAI,EAAEjB;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,SAAS,EAAC,8BAAhB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,sBACIM,UAAU,CAAC0C,MAAX,IAAqBtC,QAAtB,iBACD;AAAA,sCACA;AAAK,gBAAA,SAAS,EAAC,cAAf;AAAA,uCACE,QAAC,eAAD;AAAiB,kBAAA,UAAU,EAAEJ,UAA7B;AAAyC,kBAAA,QAAQ,EAAEI,QAAnD;AAA6D,kBAAA,WAAW,EAAEC;AAA1E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADA,eAIE;AAAK,gBAAA,SAAS,EAAC,QAAf;AAAA,uCACA,QAAC,cAAD;AAAgB,kBAAA,OAAO,EAAEnB,SAAzB;AAAoC,kBAAA,QAAQ,EAAEqB,YAA9C;AAA4D,kBAAA,WAAW,EAAEC;AAAzE;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,aAAD;AACE,cAAA,IAAI,EAAEZ,MADR;AAEE,cAAA,SAAS,EAAEf,SAFb;AAGE,cAAA,SAAS,EAAE,EAHb;AAIE,cAAA,SAAS,EAAEgB,SAJb;AAKE,cAAA,IAAI,EAAEH;AALR;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgDD;;GA1HuBD,c;UACPhB,S;;;KADOgB,c","sourcesContent":["import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router'\n\nimport SideBar from '../../components/sideBar'\nimport NavBar from '../../components/navBar'\nimport NewButton from '../../components/newButton'\nimport GuideList from '../../components/Guides/guideList'\nimport api from '../../util/api'\nimport GuideCategories from '../../components/guideCategories'\nimport PostPaginator from '../../components/Paginator/postPaginator'\nimport SortSelectMenu from '../../components/SelectMenus/sortSelectMenu'\n\nconst sortTypes = [\n  { id: 1, name: 'Recent', sortType: 'dateCreated', reverse: false },\n  { id: 2, name: 'Title', sortType: 'title', reverse: true },\n]\nconst searchTypes = [\n  { id: 1, name: 'Title', searchType: 'title' },\n  { id: 2, name: 'Creator', searchType: 'creator' },\n]\n\nexport default function GuidesListPage() {\n  const { id } = useParams()\n  const [user, setUser] = useState(null)\n  const [guides, setGuides] = useState([])\n  const [category, setCategory] = useState(null)\n  const [categories, setCategories] = useState([])\n  const [error, setError] = useState(null)\n  const [selected, setSelected] = useState(null)\n  const [sortType, setSortType] = useState('dateCreated')\n  const [sortSelected, setSortSelected] = useState(sortTypes[0])\n  const [searchString, setSearchString] = useState(\"\")\n  const [searchType, setSearchType] = useState(searchTypes[0])\n\n  useEffect(() => {\n    api.getUser()\n      .then(response => setUser(response.data))\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [])\n\n  useEffect(() => {\n    api.getCategories()\n      .then((response) => {\n        setCategories(response.data)\n        setSelected(response.data.find((cat) => cat.id == id))\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  useEffect(() => {\n    api.getCategory(id)\n      .then((response) => {\n        const sortItems = (type, searchString, searchType) => {\n          const types = {\n            dateCreated: 'dateCreated',\n            title: 'title',\n          }\n          const searchTypes = {\n            title: 'title',\n            creator: 'creator',\n          }\n          const sortProperty = types[type]\n          const searchProperty = searchTypes[searchType]\n          const filtered = [...response.data.guides]\n            .filter((guide) => {\n              if (searchString === '') {\n                return guide\n              } else if (searchProperty === \"creator\") {\n                if (guide[searchProperty][\"username\"].toLowerCase().includes(searchString.toLowerCase())) {\n                  return guide\n                }\n              } else if (guide[searchProperty].replace( /(<([^>]+)>)/ig, '').toLowerCase().includes(searchString.toLowerCase())) {\n                return guide\n              }\n            })\n          const sorted = [...filtered]\n            .sort((x, y) => y[sortProperty].localeCompare(x[sortProperty])\n              || y['dateCreated'].localeCompare(x['dateCreated']))\n          setGuides(sorted)\n        }\n        sortItems(sortType, searchString, searchType.searchType)\n        setCategory(response.data)\n        // setGuides(response.data.guides)\n      })\n      .catch((error) => (\n        setError(error)\n      ))\n  }, [id, sortType, searchString, searchType.searchType])\n\n  if (error) return `Error: ${error.message}`\n\n  return (\n    (user && category) &&\n    <div className=\"relative min-h-screen bg-gray-100\">\n      <NavBar\n        buttonContent=\"guide\"\n        disableButton={user.accountType === \"STUDENT\"}\n        component={<NewButton content='guide' path=\"/createGuide\" />}\n        user={user}\n        searchString={searchString}\n        setSearchString={setSearchString}\n        searchTypes={searchTypes}\n        searchType={searchType}\n        setSearchType={setSearchType}\n      />\n      <div className=\"py-10\">\n        <div className=\"max-w-3xl mx-auto sm:px-6 lg:max-w-7xl lg:px-8 lg:grid lg:grid-cols-12 lg:gap-8\">\n          <div className=\"hidden lg:block lg:col-span-3 xl:col-span-2\">\n            <SideBar user={user} />\n          </div>\n          <main className=\"lg:col-span-9 xl:col-span-10\">\n            <div className=\"px-4 sm:px-0 flex\">\n              {(categories.length && selected) &&\n              <>\n              <div className=\"mr-30 flex-1\">\n                <GuideCategories categories={categories} selected={selected} setSelected={setSelected} />\n                </div>\n                <div className=\"flex-1\"> \n                <SortSelectMenu options={sortTypes} sortType={sortSelected} setSortType={setSortSelected} />\n                </div>\n              </>\n              }\n            </div>\n            <div className=\"mt-4\">\n              <h1 className=\"sr-only\">Guides</h1>\n              <PostPaginator\n                data={guides}\n                component={GuideList}\n                dataLimit={10}\n                setGuides={setGuides}\n                user={user}\n              />\n            </div>\n          </main>\n        </div>\n      </div>\n    </div>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}