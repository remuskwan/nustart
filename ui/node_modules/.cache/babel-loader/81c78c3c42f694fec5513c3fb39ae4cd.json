{"ast":null,"code":"var _jsxFileName = \"/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/contactsTab.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ContactForm from '../../components/contacts/ContactForm';\nimport ContactList from '../../components/contacts/ContactList';\nimport api from \"../../util/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ContactsTab({\n  editMode = false,\n  user\n}) {\n  _s();\n\n  const [contactStore, setContactStore] = useState({\n    contacts: [],\n    currentId: 0\n  });\n  useEffect(() => {\n    async function getSize() {\n      const size = await api.getContactSize();\n      setContactStore({\n        contacts: user.contacts,\n        currentId: size.data + 1\n      });\n      console.log(size);\n    }\n\n    getSize();\n  }, []);\n\n  async function deleteContact(contactId) {\n    await api.deleteContact(user.id, contactId).then(response => setContactStore({\n      currentId: response.data.length + 1,\n      contacts: response.data\n    }));\n  }\n\n  function handleDelete(id) {\n    const {\n      contacts\n    } = contactStore;\n    const updatedNotes = contacts.filter(n => {\n      return n.id !== id;\n    });\n    setContactStore(oldNotesStore => ({\n      currentId: oldNotesStore.currentId,\n      contacts: updatedNotes\n    }));\n    deleteContact(id);\n  }\n\n  async function addContact(newContact) {\n    await api.createContact(user.id, newContact).then(response => setContactStore({\n      currentId: response.data.length + 1,\n      contacts: response.data\n    })).then(() => console.log(contactStore));\n  }\n\n  function handleAddEdit(note) {\n    const {\n      currentId,\n      contacts\n    } = contactStore;\n\n    if (note.id === 0) {\n      //add action\n      if (note.value.trim() === \"\") return;\n      note.id = currentId + 1;\n      setContactStore({\n        currentId: note.id,\n        contacts: [...contacts, note]\n      }); ///console.log(note)\n\n      addContact(note);\n    } else {\n      //edit action\n      if (note.value.trim() === \"\") {\n        //cancel edit\n        return;\n      } else {\n        //find the note\n        const updatedNotes = contacts.map(n => {\n          if (n.id === note.id) {\n            note.editMode = false;\n            return note;\n          } else {\n            return n;\n          }\n        });\n        setContactStore(oldContactsStore => ({\n          currentId: oldContactsStore.currentId,\n          contacts: updatedNotes\n        }));\n      }\n    }\n  }\n\n  const {\n    contacts\n  } = contactStore;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-5 rounded-md shadow-sm -space-y-px\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white sm:rounded-lg\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 py-5 sm:p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg leading-6 font-medium text-gray-900\",\n          children: \"Contacts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-gray-500\",\n          id: \"email-optional\",\n          children: \"Help others find you! This will be visible to other users.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-container\",\n          children: [editMode ? /*#__PURE__*/_jsxDEV(ContactForm, {\n            onDone: handleAddEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 27\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ContactList, {\n            contacts: contacts,\n            onDelete: handleDelete,\n            onDone: handleAddEdit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactsTab, \"uuKNOlVzU1hYa8FcKPZQj4Cv3iw=\");\n\n_c = ContactsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsTab\");","map":{"version":3,"sources":["/Users/remuskwan/development/nus/is3106/project/ui/src/app/containers/ProfilePage/contactsTab.js"],"names":["useEffect","useState","ContactForm","ContactList","api","ContactsTab","editMode","user","contactStore","setContactStore","contacts","currentId","getSize","size","getContactSize","data","console","log","deleteContact","contactId","id","then","response","length","handleDelete","updatedNotes","filter","n","oldNotesStore","addContact","newContact","createContact","handleAddEdit","note","value","trim","map","oldContactsStore"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport ContactForm from '../../components/contacts/ContactForm'\nimport ContactList from '../../components/contacts/ContactList'\nimport api from \"../../util/api\";\n\nexport default function ContactsTab({ editMode = false, user }) {\n\n    const [contactStore, setContactStore] = useState({ contacts: [], currentId: 0 })\n\n    useEffect(() => {\n        async function getSize() {\n            const size = await api.getContactSize()\n            setContactStore({ contacts: user.contacts, currentId: size.data + 1 })\n            console.log(size)\n        }\n        getSize()\n    }, [])\n\n    async function deleteContact(contactId) {\n        await api.deleteContact(user.id, contactId)\n        .then(response => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data\n        }))\n    }\n\n    function handleDelete(id) {\n        const { contacts } = contactStore;\n        const updatedNotes = contacts.filter((n) => {\n            return n.id !== id;\n        });\n\n        setContactStore((oldNotesStore) => ({\n            currentId: oldNotesStore.currentId,\n            contacts: updatedNotes,\n        }));\n        deleteContact(id)\n    }\n\n    async function addContact(newContact) {\n        await api.createContact(user.id, newContact)\n        .then((response) => setContactStore({\n            currentId: response.data.length + 1,\n            contacts: response.data,\n        }))\n        .then(() => console.log(contactStore))\n    }\n\n    function handleAddEdit(note) {\n        const { currentId, contacts } = contactStore;\n        if (note.id === 0) {\n            //add action\n            if (note.value.trim() === \"\") return;\n\n            note.id = currentId + 1;\n\n            setContactStore({\n                currentId: note.id,\n                contacts: [...contacts, note],\n            });\n            ///console.log(note)\n            addContact(note)\n\n        } else {\n            //edit action\n            if (note.value.trim() === \"\") {\n                //cancel edit\n                return;\n            } else {\n                //find the note\n                const updatedNotes = contacts.map((n) => {\n                    if (n.id === note.id) {\n                        note.editMode = false;\n                        return note;\n                    } else {\n                        return n;\n                    }\n                });\n\n                setContactStore((oldContactsStore) => ({\n                    currentId: oldContactsStore.currentId,\n                    contacts: updatedNotes,\n                }));\n            }\n        }\n    }\n\n    const { contacts } = contactStore\n\n    return (\n        <div className=\"p-5 rounded-md shadow-sm -space-y-px\">\n            <div className=\"bg-white sm:rounded-lg\">\n                <div className=\"px-4 py-5 sm:p-3\">\n                    <h3 className=\"text-lg leading-6 font-medium text-gray-900\">Contacts</h3>\n                    <span className=\"text-sm text-gray-500\" id=\"email-optional\">\n                        Help others find you! This will be visible to other users.\n                    </span>\n                    <br />\n                    <div className=\"note-container\">\n                        {editMode \n                        ? <ContactForm onDone={handleAddEdit} />\n                        : null\n                        }\n                        <br />\n                        <ContactList\n                            contacts={contacts}\n                            onDelete={handleDelete}\n                            onDone={handleAddEdit}\n                        />\n                    </div>\n                </div>\n            </div>\n            <br />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}